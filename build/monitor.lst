ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"monitor.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.RS_ready,"ax",%progbits
  16              		.align	1
  17              		.global	RS_ready
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	RS_ready:
  25              	.LFB68:
  26              		.file 1 "VS4210/monitor.c"
   1:VS4210/monitor.c **** /*****************************************************************************/
   2:VS4210/monitor.c **** /*                                                                           										*/
   3:VS4210/monitor.c **** /*  TELI ML070I   MCU                    													*/
   4:VS4210/monitor.c **** /*                                                                           										*/
   5:VS4210/monitor.c **** /*  Monitor.c		                                            										*/
   6:VS4210/monitor.c **** /*                                                                           										*/
   7:VS4210/monitor.c **** /*****************************************************************************/
   8:VS4210/monitor.c **** #include "VXIS_Extern_Define.h"
   9:VS4210/monitor.c **** 
  10:VS4210/monitor.c **** #include "tpinc/Device_Rx.h"
  11:VS4210/monitor.c **** #include "tpinc/TP2802.h"
  12:VS4210/monitor.c **** #include "stdlib.h"
  13:VS4210/monitor.c **** #include "VX_swi2c.h"
  14:VS4210/monitor.c **** #include "VS4210.h"
  15:VS4210/monitor.c **** 
  16:VS4210/monitor.c **** //#include "config.h"
  17:VS4210/monitor.c **** 
  18:VS4210/monitor.c **** //#ifdef SERIAL
  19:VS4210/monitor.c **** 
  20:VS4210/monitor.c **** //#include "typedefs.h"
  21:VS4210/monitor.c **** #include "main.h"
  22:VS4210/monitor.c **** //#include "i2c.h"
  23:VS4210/monitor.c **** //#include "reg.h"
  24:VS4210/monitor.c **** #include "printf.h"
  25:VS4210/monitor.c **** //#include "etc_eep.h"
  26:VS4210/monitor.c **** #include "monitor.h"
  27:VS4210/monitor.c **** //#include "cpu.h"
  28:VS4210/monitor.c **** //#include "Adc.h"
  29:VS4210/monitor.c **** #include "etc_eep.h"
  30:VS4210/monitor.c **** 
  31:VS4210/monitor.c **** IDATA BYTE MonAddress = 0x8a; // initialize value should be placed to IDATA area
  32:VS4210/monitor.c **** BYTE MonIndex;
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 2


  33:VS4210/monitor.c **** BYTE MonRdata, MonWdata;
  34:VS4210/monitor.c **** BYTE monstr[30]; // buffer for input string
  35:VS4210/monitor.c **** 				 // volatile  BYTE *argv[7];
  36:VS4210/monitor.c **** BYTE *argv[7];
  37:VS4210/monitor.c **** 
  38:VS4210/monitor.c **** // char *argv[7];
  39:VS4210/monitor.c **** BYTE argc = 0;
  40:VS4210/monitor.c **** bit echo = 1;
  41:VS4210/monitor.c **** 
  42:VS4210/monitor.c **** BYTE Monitor_flag = OFF;
  43:VS4210/monitor.c **** BYTE Monitor_I2C = 0x40; /// 0x88;//0x29;//0x40;///0x88;///0x40;//0x28;//0x12;//EEPROM_24C02_addr;
  44:VS4210/monitor.c **** 
  45:VS4210/monitor.c **** DATA BYTE RS_buf[BUF_MAX];
  46:VS4210/monitor.c **** DATA BYTE RS2_buf[BUF_MAX];
  47:VS4210/monitor.c **** DATA BYTE DVR_buf[DVR_BUF_MAX];
  48:VS4210/monitor.c **** 
  49:VS4210/monitor.c **** DATA BYTE RS_in = 0, RS_out = 0;
  50:VS4210/monitor.c **** DATA BYTE RS2_in = 0, RS2_out = 0;
  51:VS4210/monitor.c **** bit RS_Xbusy = 0;  // bit RS_Xbusy=0;
  52:VS4210/monitor.c **** bit RS2_Xbusy = 0; // bit RS_Xbusy=0;
  53:VS4210/monitor.c **** 
  54:VS4210/monitor.c **** static bit indirect = 0;
  55:VS4210/monitor.c **** extern BYTE TriggerFlag;
  56:VS4210/monitor.c **** 
  57:VS4210/monitor.c **** // extern		  bit	AutoDetect;
  58:VS4210/monitor.c **** extern BYTE InputSelection;
  59:VS4210/monitor.c **** extern BYTE DebugLevel;
  60:VS4210/monitor.c **** // extern  CODE  struct struct_IdName struct_InputSelection[];
  61:VS4210/monitor.c **** extern bit NoInitAccess;
  62:VS4210/monitor.c **** bit AccessEnable = 1;
  63:VS4210/monitor.c **** extern BYTE PSW_Flag;
  64:VS4210/monitor.c **** extern BYTE year1, year2, month, day, hour, minute, second;
  65:VS4210/monitor.c **** 
  66:VS4210/monitor.c **** extern UART_HandleTypeDef huart1;
  67:VS4210/monitor.c **** extern tByte count[4];
  68:VS4210/monitor.c **** extern tByte state[4];
  69:VS4210/monitor.c **** extern tByte count[4];
  70:VS4210/monitor.c **** extern tByte mode[4];
  71:VS4210/monitor.c **** extern tByte std[4];
  72:VS4210/monitor.c **** extern tByte egain[4][4];
  73:VS4210/monitor.c **** extern BYTE Flisheye_CAM[4];
  74:VS4210/monitor.c **** extern BYTE QuadBoxId;
  75:VS4210/monitor.c **** extern BYTE bytTriggerTest;
  76:VS4210/monitor.c **** extern BYTE PtzTxChNum;
  77:VS4210/monitor.c **** extern BYTE VideoChangeFlag;
  78:VS4210/monitor.c **** 
  79:VS4210/monitor.c **** tByte bytVideoInput;
  80:VS4210/monitor.c **** 
  81:VS4210/monitor.c **** // char * asctime(const struct tm * timeptr);
  82:VS4210/monitor.c **** // char *ctime(const time_t *timep);
  83:VS4210/monitor.c **** 
  84:VS4210/monitor.c **** //=============================================================================
  85:VS4210/monitor.c **** //		Serial RX Check
  86:VS4210/monitor.c **** //=============================================================================
  87:VS4210/monitor.c **** BYTE RS_ready(void)
  88:VS4210/monitor.c **** {
  27              		.loc 1 88 1 view -0
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 3


  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  89:VS4210/monitor.c **** 	if (RS_in == RS_out)
  32              		.loc 1 89 2 view .LVU1
  33              		.loc 1 89 12 is_stmt 0 view .LVU2
  34 0000 044B     		ldr	r3, .L5
  35 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  36 0004 044B     		ldr	r3, .L5+4
  37 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  38              		.loc 1 89 5 view .LVU3
  39 0008 9A42     		cmp	r2, r3
  40 000a 01D0     		beq	.L4
  90:VS4210/monitor.c **** 		return 0;
  91:VS4210/monitor.c **** 	else
  92:VS4210/monitor.c **** 		return 1;
  41              		.loc 1 92 10 view .LVU4
  42 000c 0120     		movs	r0, #1
  93:VS4210/monitor.c **** }
  43              		.loc 1 93 1 view .LVU5
  44 000e 7047     		bx	lr
  45              	.L4:
  90:VS4210/monitor.c **** 		return 0;
  46              		.loc 1 90 10 view .LVU6
  47 0010 0020     		movs	r0, #0
  48 0012 7047     		bx	lr
  49              	.L6:
  50              		.align	2
  51              	.L5:
  52 0014 00000000 		.word	.LANCHOR0
  53 0018 00000000 		.word	.LANCHOR1
  54              		.cfi_endproc
  55              	.LFE68:
  57              		.section	.text.RS_rx,"ax",%progbits
  58              		.align	1
  59              		.global	RS_rx
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu softvfp
  65              	RS_rx:
  66              	.LFB69:
  94:VS4210/monitor.c **** //#ifdef Hs_debug
  95:VS4210/monitor.c **** //=============================================================================
  96:VS4210/monitor.c **** //		Serial RX
  97:VS4210/monitor.c **** //=============================================================================
  98:VS4210/monitor.c **** BYTE RS_rx(void)
  99:VS4210/monitor.c **** {
  67              		.loc 1 99 1 is_stmt 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
 100:VS4210/monitor.c **** 	BYTE ret;
  72              		.loc 1 100 2 view .LVU8
 101:VS4210/monitor.c **** 
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 4


 102:VS4210/monitor.c **** 	//	ES = 0;
 103:VS4210/monitor.c **** 	ret = RS_buf[RS_out];
  73              		.loc 1 103 2 view .LVU9
  74              		.loc 1 103 14 is_stmt 0 view .LVU10
  75 0000 064A     		ldr	r2, .L9
  76 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  77              		.loc 1 103 6 view .LVU11
  78 0004 0649     		ldr	r1, .L9+4
  79 0006 C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
  80              	.LVL0:
 104:VS4210/monitor.c **** 	//	ret = DVR_buf[RS_out];
 105:VS4210/monitor.c **** 	RS_out++;
  81              		.loc 1 105 2 is_stmt 1 view .LVU12
  82              		.loc 1 105 8 is_stmt 0 view .LVU13
  83 0008 0133     		adds	r3, r3, #1
  84 000a DBB2     		uxtb	r3, r3
  85 000c 1370     		strb	r3, [r2]
 106:VS4210/monitor.c **** 	if (RS_out >= BUF_MAX)
  86              		.loc 1 106 2 is_stmt 1 view .LVU14
  87              		.loc 1 106 5 is_stmt 0 view .LVU15
  88 000e 1D2B     		cmp	r3, #29
  89 0010 02D9     		bls	.L8
 107:VS4210/monitor.c **** 		RS_out = 0;
  90              		.loc 1 107 3 is_stmt 1 view .LVU16
  91              		.loc 1 107 10 is_stmt 0 view .LVU17
  92 0012 1346     		mov	r3, r2
  93 0014 0022     		movs	r2, #0
  94 0016 1A70     		strb	r2, [r3]
  95              	.L8:
 108:VS4210/monitor.c **** 	//	ES = 1;
 109:VS4210/monitor.c **** 
 110:VS4210/monitor.c **** 	return ret;
  96              		.loc 1 110 2 is_stmt 1 view .LVU18
 111:VS4210/monitor.c **** }
  97              		.loc 1 111 1 is_stmt 0 view .LVU19
  98 0018 7047     		bx	lr
  99              	.L10:
 100 001a 00BF     		.align	2
 101              	.L9:
 102 001c 00000000 		.word	.LANCHOR1
 103 0020 00000000 		.word	RS_buf
 104              		.cfi_endproc
 105              	.LFE69:
 107              		.section	.text.RS_tx,"ax",%progbits
 108              		.align	1
 109              		.global	RS_tx
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 113              		.fpu softvfp
 115              	RS_tx:
 116              	.LVL1:
 117              	.LFB70:
 112:VS4210/monitor.c **** 
 113:VS4210/monitor.c **** //=============================================================================
 114:VS4210/monitor.c **** //		Serial TX
 115:VS4210/monitor.c **** //=============================================================================
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 5


 116:VS4210/monitor.c **** void RS_tx(BYTE tx_buf)
 117:VS4210/monitor.c **** {
 118              		.loc 1 117 1 is_stmt 1 view -0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 118:VS4210/monitor.c **** 
 119:VS4210/monitor.c **** 	// HAL_UART_Transmit(&huart1, &tx_buf, 1, 0xffff);
 120:VS4210/monitor.c **** 	USART1->DR = tx_buf;
 123              		.loc 1 120 2 view .LVU21
 124              		.loc 1 120 13 is_stmt 0 view .LVU22
 125 0000 034B     		ldr	r3, .L13
 126 0002 5860     		str	r0, [r3, #4]
 121:VS4210/monitor.c **** 	while (0 == (USART1->SR & (1 << 6)))
 127              		.loc 1 121 2 is_stmt 1 view .LVU23
 128              	.L12:
 122:VS4210/monitor.c **** 		;
 129              		.loc 1 122 3 discriminator 1 view .LVU24
 121:VS4210/monitor.c **** 	while (0 == (USART1->SR & (1 << 6)))
 130              		.loc 1 121 8 discriminator 1 view .LVU25
 121:VS4210/monitor.c **** 	while (0 == (USART1->SR & (1 << 6)))
 131              		.loc 1 121 21 is_stmt 0 discriminator 1 view .LVU26
 132 0004 024B     		ldr	r3, .L13
 133 0006 1B68     		ldr	r3, [r3]
 121:VS4210/monitor.c **** 	while (0 == (USART1->SR & (1 << 6)))
 134              		.loc 1 121 8 discriminator 1 view .LVU27
 135 0008 13F0400F 		tst	r3, #64
 136 000c FAD0     		beq	.L12
 123:VS4210/monitor.c **** }
 137              		.loc 1 123 1 view .LVU28
 138 000e 7047     		bx	lr
 139              	.L14:
 140              		.align	2
 141              	.L13:
 142 0010 00380140 		.word	1073821696
 143              		.cfi_endproc
 144              	.LFE70:
 146              		.section	.rodata.Prompt.str1.4,"aMS",%progbits,1
 147              		.align	2
 148              	.LC0:
 149 0000 0D0A4D43 		.ascii	"\015\012MCU_I2C[%02x][%d:%d:%d:%d]>\000"
 149      555F4932 
 149      435B2530 
 149      32785D5B 
 149      25643A25 
 150 001e 0000     		.align	2
 151              	.LC1:
 152 0020 0D0A4D43 		.ascii	"\015\012MCU_I2C[%02x][%d:%d:%d]>\000"
 152      555F4932 
 152      435B2530 
 152      32785D5B 
 152      25643A25 
 153 003b 00       		.align	2
 154              	.LC2:
 155 003c 0D0A4D43 		.ascii	"\015\012MCU_I2C[%02x][%d:%d]>\000"
 155      555F4932 
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 6


 155      435B2530 
 155      32785D5B 
 155      25643A25 
 156              		.align	2
 157              	.LC3:
 158 0054 0D0A4D43 		.ascii	"\015\012MCU_I2C[%02x][%d]>\000"
 158      555F4932 
 158      435B2530 
 158      32785D5B 
 158      25645D3E 
 159              		.section	.text.Prompt,"ax",%progbits
 160              		.align	1
 161              		.global	Prompt
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu softvfp
 167              	Prompt:
 168              	.LFB71:
 124:VS4210/monitor.c **** 
 125:VS4210/monitor.c **** // void Loader(BYTE);
 126:VS4210/monitor.c **** 
 127:VS4210/monitor.c **** //=============================================================================
 128:VS4210/monitor.c **** //
 129:VS4210/monitor.c **** //=============================================================================
 130:VS4210/monitor.c **** void Prompt(void)
 131:VS4210/monitor.c **** {
 169              		.loc 1 131 1 is_stmt 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173 0000 00B5     		push	{lr}
 174              	.LCFI0:
 175              		.cfi_def_cfa_offset 4
 176              		.cfi_offset 14, -4
 177 0002 83B0     		sub	sp, sp, #12
 178              	.LCFI1:
 179              		.cfi_def_cfa_offset 16
 132:VS4210/monitor.c **** 	if (day)
 180              		.loc 1 132 2 view .LVU30
 181              		.loc 1 132 6 is_stmt 0 view .LVU31
 182 0004 194B     		ldr	r3, .L23
 183 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 184              		.loc 1 132 5 view .LVU32
 185 0008 6AB9     		cbnz	r2, .L21
 133:VS4210/monitor.c **** 	{
 134:VS4210/monitor.c **** 		Printf("\r\nMCU_I2C[%02x][%d:%d:%d:%d]>", (WORD)Monitor_I2C, (WORD)day, (WORD)hour, (WORD)minute,
 135:VS4210/monitor.c **** 	}
 136:VS4210/monitor.c **** 	else if (hour)
 186              		.loc 1 136 7 is_stmt 1 view .LVU33
 187              		.loc 1 136 11 is_stmt 0 view .LVU34
 188 000a 194B     		ldr	r3, .L23+4
 189 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 190              		.loc 1 136 10 view .LVU35
 191 000e D2B9     		cbnz	r2, .L22
 137:VS4210/monitor.c **** 	{
 138:VS4210/monitor.c **** 		Printf("\r\nMCU_I2C[%02x][%d:%d:%d]>", (WORD)Monitor_I2C, (WORD)hour, (WORD)minute, (WORD)second)
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 7


 139:VS4210/monitor.c **** 	}
 140:VS4210/monitor.c **** 	else if (minute)
 192              		.loc 1 140 7 is_stmt 1 view .LVU36
 193              		.loc 1 140 11 is_stmt 0 view .LVU37
 194 0010 184B     		ldr	r3, .L23+8
 195 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 196              		.loc 1 140 10 view .LVU38
 197 0014 12B3     		cbz	r2, .L19
 141:VS4210/monitor.c **** 	{
 142:VS4210/monitor.c **** 		Printf("\r\nMCU_I2C[%02x][%d:%d]>", (WORD)Monitor_I2C, (WORD)minute, (WORD)second);
 198              		.loc 1 142 3 is_stmt 1 view .LVU39
 199 0016 184B     		ldr	r3, .L23+12
 200 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 201 001a 1849     		ldr	r1, .L23+16
 202 001c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 203 001e 1848     		ldr	r0, .L23+20
 204 0020 FFF7FEFF 		bl	Printf
 205              	.LVL2:
 206 0024 0CE0     		b	.L15
 207              	.L21:
 134:VS4210/monitor.c **** 	}
 208              		.loc 1 134 3 view .LVU40
 209 0026 144B     		ldr	r3, .L23+12
 210 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 211 002a 0193     		str	r3, [sp, #4]
 212 002c 114B     		ldr	r3, .L23+8
 213 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 214 0030 0093     		str	r3, [sp]
 215 0032 0F4B     		ldr	r3, .L23+4
 216 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 217 0036 1149     		ldr	r1, .L23+16
 218 0038 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 219 003a 1248     		ldr	r0, .L23+24
 220 003c FFF7FEFF 		bl	Printf
 221              	.LVL3:
 222              	.L15:
 143:VS4210/monitor.c **** 	}
 144:VS4210/monitor.c **** 	else
 145:VS4210/monitor.c **** 	{
 146:VS4210/monitor.c **** 		Printf("\r\nMCU_I2C[%02x][%d]>", (WORD)Monitor_I2C, (WORD)second);
 147:VS4210/monitor.c **** 	}
 148:VS4210/monitor.c **** }
 223              		.loc 1 148 1 is_stmt 0 view .LVU41
 224 0040 03B0     		add	sp, sp, #12
 225              	.LCFI2:
 226              		.cfi_remember_state
 227              		.cfi_def_cfa_offset 4
 228              		@ sp needed
 229 0042 5DF804FB 		ldr	pc, [sp], #4
 230              	.L22:
 231              	.LCFI3:
 232              		.cfi_restore_state
 138:VS4210/monitor.c **** 	}
 233              		.loc 1 138 3 is_stmt 1 view .LVU42
 234 0046 0C4B     		ldr	r3, .L23+12
 235 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 236 004a 0093     		str	r3, [sp]
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 8


 237 004c 094B     		ldr	r3, .L23+8
 238 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 239 0050 0A49     		ldr	r1, .L23+16
 240 0052 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 241 0054 0C48     		ldr	r0, .L23+28
 242 0056 FFF7FEFF 		bl	Printf
 243              	.LVL4:
 244 005a F1E7     		b	.L15
 245              	.L19:
 146:VS4210/monitor.c **** 	}
 246              		.loc 1 146 3 view .LVU43
 247 005c 064B     		ldr	r3, .L23+12
 248 005e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 249 0060 064B     		ldr	r3, .L23+16
 250 0062 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 251 0064 0948     		ldr	r0, .L23+32
 252 0066 FFF7FEFF 		bl	Printf
 253              	.LVL5:
 254              		.loc 1 148 1 is_stmt 0 view .LVU44
 255 006a E9E7     		b	.L15
 256              	.L24:
 257              		.align	2
 258              	.L23:
 259 006c 00000000 		.word	day
 260 0070 00000000 		.word	hour
 261 0074 00000000 		.word	minute
 262 0078 00000000 		.word	second
 263 007c 00000000 		.word	.LANCHOR2
 264 0080 3C000000 		.word	.LC2
 265 0084 00000000 		.word	.LC0
 266 0088 20000000 		.word	.LC1
 267 008c 54000000 		.word	.LC3
 268              		.cfi_endproc
 269              	.LFE71:
 271              		.section	.text.Mon_tx,"ax",%progbits
 272              		.align	1
 273              		.global	Mon_tx
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 277              		.fpu softvfp
 279              	Mon_tx:
 280              	.LVL6:
 281              	.LFB72:
 149:VS4210/monitor.c **** 
 150:VS4210/monitor.c **** void Mon_tx(BYTE ch)
 151:VS4210/monitor.c **** {
 282              		.loc 1 151 1 is_stmt 1 view -0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		.loc 1 151 1 is_stmt 0 view .LVU46
 287 0000 08B5     		push	{r3, lr}
 288              	.LCFI4:
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 3, -8
 291              		.cfi_offset 14, -4
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 9


 152:VS4210/monitor.c **** 	RS_tx(ch);
 292              		.loc 1 152 2 is_stmt 1 view .LVU47
 293 0002 FFF7FEFF 		bl	RS_tx
 294              	.LVL7:
 153:VS4210/monitor.c **** }
 295              		.loc 1 153 1 is_stmt 0 view .LVU48
 296 0006 08BD     		pop	{r3, pc}
 297              		.cfi_endproc
 298              	.LFE72:
 300              		.section	.text.a2i,"ax",%progbits
 301              		.align	1
 302              		.global	a2i
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu softvfp
 308              	a2i:
 309              	.LVL8:
 310              	.LFB73:
 154:VS4210/monitor.c **** 
 155:VS4210/monitor.c **** //=============================================================================
 156:VS4210/monitor.c **** //		Convert ASCII to Binery
 157:VS4210/monitor.c **** //=============================================================================
 158:VS4210/monitor.c **** DWORD a2i(BYTE *str)
 159:VS4210/monitor.c **** {
 311              		.loc 1 159 1 is_stmt 1 view -0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315              		@ link register save eliminated.
 316              		.loc 1 159 1 is_stmt 0 view .LVU50
 317 0000 0246     		mov	r2, r0
 160:VS4210/monitor.c **** 	DWORD num = 0;
 318              		.loc 1 160 2 is_stmt 1 view .LVU51
 319              	.LVL9:
 161:VS4210/monitor.c **** 	BYTE i;
 320              		.loc 1 161 2 view .LVU52
 162:VS4210/monitor.c **** 
 163:VS4210/monitor.c **** 	for (i = 0;; i++, str++)
 321              		.loc 1 163 2 view .LVU53
 160:VS4210/monitor.c **** 	BYTE i;
 322              		.loc 1 160 8 is_stmt 0 view .LVU54
 323 0002 0020     		movs	r0, #0
 324              	.LVL10:
 325              	.L29:
 164:VS4210/monitor.c **** 	{
 165:VS4210/monitor.c **** 		if (*str == '\0' || *str == ' ')
 326              		.loc 1 165 3 is_stmt 1 view .LVU55
 327              		.loc 1 165 7 is_stmt 0 view .LVU56
 328 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 329              		.loc 1 165 6 view .LVU57
 330 0006 4BB1     		cbz	r3, .L27
 331              		.loc 1 165 20 discriminator 1 view .LVU58
 332 0008 202B     		cmp	r3, #32
 333 000a 07D0     		beq	.L27
 166:VS4210/monitor.c **** 			break;
 167:VS4210/monitor.c **** 		num = num * 10 + *str - '0';
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 10


 334              		.loc 1 167 3 is_stmt 1 view .LVU59
 335              		.loc 1 167 13 is_stmt 0 view .LVU60
 336 000c 00EB8000 		add	r0, r0, r0, lsl #2
 337              	.LVL11:
 338              		.loc 1 167 18 view .LVU61
 339 0010 03EB4003 		add	r3, r3, r0, lsl #1
 340              		.loc 1 167 7 view .LVU62
 341 0014 A3F13000 		sub	r0, r3, #48
 342              	.LVL12:
 163:VS4210/monitor.c **** 	{
 343              		.loc 1 163 15 is_stmt 1 view .LVU63
 163:VS4210/monitor.c **** 	{
 344              		.loc 1 163 23 is_stmt 0 view .LVU64
 345 0018 0132     		adds	r2, r2, #1
 346              	.LVL13:
 163:VS4210/monitor.c **** 	{
 347              		.loc 1 163 13 is_stmt 1 view .LVU65
 165:VS4210/monitor.c **** 			break;
 348              		.loc 1 165 6 is_stmt 0 view .LVU66
 349 001a F3E7     		b	.L29
 350              	.L27:
 168:VS4210/monitor.c **** 	}
 169:VS4210/monitor.c **** 	return num;
 170:VS4210/monitor.c **** }
 351              		.loc 1 170 1 view .LVU67
 352 001c 7047     		bx	lr
 353              		.cfi_endproc
 354              	.LFE73:
 356              		.section	.text.Asc1Bin,"ax",%progbits
 357              		.align	1
 358              		.global	Asc1Bin
 359              		.syntax unified
 360              		.thumb
 361              		.thumb_func
 362              		.fpu softvfp
 364              	Asc1Bin:
 365              	.LVL14:
 366              	.LFB74:
 171:VS4210/monitor.c **** 
 172:VS4210/monitor.c **** BYTE Asc1Bin(BYTE asc)
 173:VS4210/monitor.c **** {
 367              		.loc 1 173 1 is_stmt 1 view -0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              		@ link register save eliminated.
 372              		.loc 1 173 1 is_stmt 0 view .LVU69
 373 0000 0346     		mov	r3, r0
 174:VS4210/monitor.c **** 	if (asc >= '0' && asc <= '9')
 374              		.loc 1 174 2 is_stmt 1 view .LVU70
 375              		.loc 1 174 17 is_stmt 0 view .LVU71
 376 0002 3038     		subs	r0, r0, #48
 377              	.LVL15:
 378              		.loc 1 174 17 view .LVU72
 379 0004 C0B2     		uxtb	r0, r0
 380              		.loc 1 174 5 view .LVU73
 381 0006 0928     		cmp	r0, #9
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 11


 382 0008 0AD9     		bls	.L31
 175:VS4210/monitor.c **** 		return (asc - '0');
 176:VS4210/monitor.c **** 	if (asc >= 'a' && asc <= 'f')
 383              		.loc 1 176 2 is_stmt 1 view .LVU74
 384              		.loc 1 176 17 is_stmt 0 view .LVU75
 385 000a A3F16102 		sub	r2, r3, #97
 386 000e D2B2     		uxtb	r2, r2
 387              		.loc 1 176 5 view .LVU76
 388 0010 052A     		cmp	r2, #5
 389 0012 06D9     		bls	.L34
 177:VS4210/monitor.c **** 		return (asc - 'a' + 0x0a);
 178:VS4210/monitor.c **** 	if (asc >= 'A' && asc <= 'F')
 390              		.loc 1 178 2 is_stmt 1 view .LVU77
 391              		.loc 1 178 17 is_stmt 0 view .LVU78
 392 0014 A3F14102 		sub	r2, r3, #65
 393 0018 D2B2     		uxtb	r2, r2
 394              		.loc 1 178 5 view .LVU79
 395 001a 052A     		cmp	r2, #5
 396 001c 04D9     		bls	.L35
 179:VS4210/monitor.c **** 		return (asc - 'A' + 0x0a);
 180:VS4210/monitor.c **** 
 181:VS4210/monitor.c **** 	return 0;
 397              		.loc 1 181 9 view .LVU80
 398 001e 0020     		movs	r0, #0
 399              	.L31:
 182:VS4210/monitor.c **** }
 400              		.loc 1 182 1 view .LVU81
 401 0020 7047     		bx	lr
 402              	.L34:
 177:VS4210/monitor.c **** 		return (asc - 'a' + 0x0a);
 403              		.loc 1 177 3 is_stmt 1 view .LVU82
 177:VS4210/monitor.c **** 		return (asc - 'a' + 0x0a);
 404              		.loc 1 177 21 is_stmt 0 view .LVU83
 405 0022 573B     		subs	r3, r3, #87
 406 0024 D8B2     		uxtb	r0, r3
 407 0026 7047     		bx	lr
 408              	.L35:
 179:VS4210/monitor.c **** 		return (asc - 'A' + 0x0a);
 409              		.loc 1 179 3 is_stmt 1 view .LVU84
 179:VS4210/monitor.c **** 		return (asc - 'A' + 0x0a);
 410              		.loc 1 179 21 is_stmt 0 view .LVU85
 411 0028 373B     		subs	r3, r3, #55
 412 002a D8B2     		uxtb	r0, r3
 413 002c 7047     		bx	lr
 414              		.cfi_endproc
 415              	.LFE74:
 417              		.section	.text.Asc2Bin,"ax",%progbits
 418              		.align	1
 419              		.global	Asc2Bin
 420              		.syntax unified
 421              		.thumb
 422              		.thumb_func
 423              		.fpu softvfp
 425              	Asc2Bin:
 426              	.LVL16:
 427              	.LFB75:
 183:VS4210/monitor.c **** 
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 12


 184:VS4210/monitor.c **** BYTE Asc2Bin(PDATA_P BYTE *s)
 185:VS4210/monitor.c **** {
 428              		.loc 1 185 1 is_stmt 1 view -0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432              		.loc 1 185 1 is_stmt 0 view .LVU87
 433 0000 38B5     		push	{r3, r4, r5, lr}
 434              	.LCFI5:
 435              		.cfi_def_cfa_offset 16
 436              		.cfi_offset 3, -16
 437              		.cfi_offset 4, -12
 438              		.cfi_offset 5, -8
 439              		.cfi_offset 14, -4
 440 0002 0546     		mov	r5, r0
 186:VS4210/monitor.c **** 	WORD bin;
 441              		.loc 1 186 2 is_stmt 1 view .LVU88
 187:VS4210/monitor.c **** 
 188:VS4210/monitor.c **** 	bin = 0;
 442              		.loc 1 188 2 view .LVU89
 443              	.LVL17:
 189:VS4210/monitor.c **** 	while (*s != '\0' && *s != ' ')
 444              		.loc 1 189 2 view .LVU90
 188:VS4210/monitor.c **** 	while (*s != '\0' && *s != ' ')
 445              		.loc 1 188 6 is_stmt 0 view .LVU91
 446 0004 0024     		movs	r4, #0
 447              	.LVL18:
 448              	.L37:
 449              		.loc 1 189 8 is_stmt 1 view .LVU92
 450              		.loc 1 189 9 is_stmt 0 view .LVU93
 451 0006 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 452              		.loc 1 189 8 view .LVU94
 453 0008 38B1     		cbz	r0, .L38
 454              		.loc 1 189 20 discriminator 1 view .LVU95
 455 000a 2028     		cmp	r0, #32
 456 000c 05D0     		beq	.L38
 190:VS4210/monitor.c **** 	{
 191:VS4210/monitor.c **** 		bin = bin << 4;
 457              		.loc 1 191 3 is_stmt 1 view .LVU96
 458              		.loc 1 191 7 is_stmt 0 view .LVU97
 459 000e 2401     		lsls	r4, r4, #4
 460              	.LVL19:
 192:VS4210/monitor.c **** 		bin = bin + Asc1Bin(*s);
 461              		.loc 1 192 3 is_stmt 1 view .LVU98
 462              		.loc 1 192 15 is_stmt 0 view .LVU99
 463 0010 FFF7FEFF 		bl	Asc1Bin
 464              	.LVL20:
 465              		.loc 1 192 7 view .LVU100
 466 0014 0444     		add	r4, r4, r0
 467              	.LVL21:
 193:VS4210/monitor.c **** 		s++;
 468              		.loc 1 193 3 is_stmt 1 view .LVU101
 469              		.loc 1 193 4 is_stmt 0 view .LVU102
 470 0016 0135     		adds	r5, r5, #1
 471              	.LVL22:
 472              		.loc 1 193 4 view .LVU103
 473 0018 F5E7     		b	.L37
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 13


 474              	.L38:
 194:VS4210/monitor.c **** 	}
 195:VS4210/monitor.c **** 	return (bin);
 475              		.loc 1 195 2 is_stmt 1 view .LVU104
 196:VS4210/monitor.c **** }
 476              		.loc 1 196 1 is_stmt 0 view .LVU105
 477 001a E0B2     		uxtb	r0, r4
 478 001c 38BD     		pop	{r3, r4, r5, pc}
 479              		.loc 1 196 1 view .LVU106
 480              		.cfi_endproc
 481              	.LFE75:
 483              		.section	.text.hs_toupper,"ax",%progbits
 484              		.align	1
 485              		.global	hs_toupper
 486              		.syntax unified
 487              		.thumb
 488              		.thumb_func
 489              		.fpu softvfp
 491              	hs_toupper:
 492              	.LVL23:
 493              	.LFB76:
 197:VS4210/monitor.c **** 
 198:VS4210/monitor.c **** //=============================================================================
 199:VS4210/monitor.c **** BYTE hs_toupper(BYTE ch)
 200:VS4210/monitor.c **** {
 494              		.loc 1 200 1 is_stmt 1 view -0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 498              		@ link register save eliminated.
 201:VS4210/monitor.c **** 	if (ch >= 'a' && ch <= 'z')
 499              		.loc 1 201 2 view .LVU108
 500              		.loc 1 201 16 is_stmt 0 view .LVU109
 501 0000 A0F16103 		sub	r3, r0, #97
 502 0004 DBB2     		uxtb	r3, r3
 503              		.loc 1 201 5 view .LVU110
 504 0006 192B     		cmp	r3, #25
 505 0008 00D9     		bls	.L43
 506              	.LVL24:
 507              	.L42:
 202:VS4210/monitor.c **** 		return (ch - 'a' + 'A');
 203:VS4210/monitor.c **** 
 204:VS4210/monitor.c **** 	return ch;
 205:VS4210/monitor.c **** }
 508              		.loc 1 205 1 view .LVU111
 509 000a 7047     		bx	lr
 510              	.LVL25:
 511              	.L43:
 202:VS4210/monitor.c **** 		return (ch - 'a' + 'A');
 512              		.loc 1 202 3 is_stmt 1 view .LVU112
 202:VS4210/monitor.c **** 		return (ch - 'a' + 'A');
 513              		.loc 1 202 20 is_stmt 0 view .LVU113
 514 000c 2038     		subs	r0, r0, #32
 515              	.LVL26:
 202:VS4210/monitor.c **** 		return (ch - 'a' + 'A');
 516              		.loc 1 202 20 view .LVU114
 517 000e C0B2     		uxtb	r0, r0
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 14


 518 0010 FBE7     		b	.L42
 519              		.cfi_endproc
 520              	.LFE76:
 522              		.section	.text.stricmp,"ax",%progbits
 523              		.align	1
 524              		.global	stricmp
 525              		.syntax unified
 526              		.thumb
 527              		.thumb_func
 528              		.fpu softvfp
 530              	stricmp:
 531              	.LVL27:
 532              	.LFB77:
 206:VS4210/monitor.c **** 
 207:VS4210/monitor.c **** int stricmp(BYTE *ptr1, BYTE *ptr2)
 208:VS4210/monitor.c **** {
 533              		.loc 1 208 1 is_stmt 1 view -0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              		.loc 1 208 1 is_stmt 0 view .LVU116
 538 0000 70B5     		push	{r4, r5, r6, lr}
 539              	.LCFI6:
 540              		.cfi_def_cfa_offset 16
 541              		.cfi_offset 4, -16
 542              		.cfi_offset 5, -12
 543              		.cfi_offset 6, -8
 544              		.cfi_offset 14, -4
 545 0002 0646     		mov	r6, r0
 546 0004 0C46     		mov	r4, r1
 209:VS4210/monitor.c **** 	int i;
 547              		.loc 1 209 2 is_stmt 1 view .LVU117
 210:VS4210/monitor.c **** 	int ret;
 548              		.loc 1 210 2 view .LVU118
 211:VS4210/monitor.c **** 
 212:VS4210/monitor.c **** 	for (i = 0; *ptr1; i++)
 549              		.loc 1 212 2 view .LVU119
 550              	.LVL28:
 551              	.L45:
 552              		.loc 1 212 14 discriminator 1 view .LVU120
 553 0006 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 554              		.loc 1 212 2 is_stmt 0 discriminator 1 view .LVU121
 555 0008 48B1     		cbz	r0, .L44
 213:VS4210/monitor.c **** 	{
 214:VS4210/monitor.c **** 		ret = hs_toupper(*ptr1++) - hs_toupper(*ptr2++);
 556              		.loc 1 214 3 is_stmt 1 view .LVU122
 557              		.loc 1 214 25 is_stmt 0 view .LVU123
 558 000a 0136     		adds	r6, r6, #1
 559              	.LVL29:
 560              		.loc 1 214 9 view .LVU124
 561 000c FFF7FEFF 		bl	hs_toupper
 562              	.LVL30:
 563 0010 0546     		mov	r5, r0
 564              	.LVL31:
 565              		.loc 1 214 31 view .LVU125
 566 0012 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2
 567              	.LVL32:
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 15


 568              		.loc 1 214 31 view .LVU126
 569 0016 FFF7FEFF 		bl	hs_toupper
 570              	.LVL33:
 215:VS4210/monitor.c **** 		if (ret)
 571              		.loc 1 215 3 is_stmt 1 view .LVU127
 572              		.loc 1 215 6 is_stmt 0 view .LVU128
 573 001a 281A     		subs	r0, r5, r0
 574              	.LVL34:
 575              		.loc 1 215 6 view .LVU129
 576 001c F3D0     		beq	.L45
 577              	.LVL35:
 578              	.L44:
 216:VS4210/monitor.c **** 			return ret;
 217:VS4210/monitor.c **** 	}
 218:VS4210/monitor.c **** 	return 0;
 219:VS4210/monitor.c **** }
 579              		.loc 1 219 1 view .LVU130
 580 001e 70BD     		pop	{r4, r5, r6, pc}
 581              		.loc 1 219 1 view .LVU131
 582              		.cfi_endproc
 583              	.LFE77:
 585              		.section	.text.MonReadI2C,"ax",%progbits
 586              		.align	1
 587              		.global	MonReadI2C
 588              		.syntax unified
 589              		.thumb
 590              		.thumb_func
 591              		.fpu softvfp
 593              	MonReadI2C:
 594              	.LFB78:
 220:VS4210/monitor.c **** 
 221:VS4210/monitor.c **** //=============================================================================
 222:VS4210/monitor.c **** //
 223:VS4210/monitor.c **** //=============================================================================
 224:VS4210/monitor.c **** /*
 225:VS4210/monitor.c **** void SetMonAddress(BYTE addr)
 226:VS4210/monitor.c **** {
 227:VS4210/monitor.c **** 	MonAddress = addr;
 228:VS4210/monitor.c **** }
 229:VS4210/monitor.c **** */
 230:VS4210/monitor.c **** void MonReadI2C(void)
 231:VS4210/monitor.c **** {
 595              		.loc 1 231 1 is_stmt 1 view -0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 232:VS4210/monitor.c **** 	/*
 233:VS4210/monitor.c **** 		if( argc>=2 ) MonIndex = Asc2Bin( argv[1] );
 234:VS4210/monitor.c **** 		else	{
 235:VS4210/monitor.c **** 			Printf("   --> Missing parameter !!!");
 236:VS4210/monitor.c **** 			return;
 237:VS4210/monitor.c **** 		}
 238:VS4210/monitor.c **** 
 239:VS4210/monitor.c **** 		if ( MonAddress == TW88I2CAddress )
 240:VS4210/monitor.c **** 			MonRdata = ReadTW88(MonIndex);
 241:VS4210/monitor.c **** 		else
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 16


 242:VS4210/monitor.c **** 			MonRdata = ReadI2C(MonAddress, MonIndex);
 243:VS4210/monitor.c **** 
 244:VS4210/monitor.c **** 		if( echo )
 245:VS4210/monitor.c **** 			Printf("\r\nRead %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);
 246:VS4210/monitor.c **** 
 247:VS4210/monitor.c **** 		MonWdata = MonRdata;
 248:VS4210/monitor.c **** 		*/
 249:VS4210/monitor.c **** }
 600              		.loc 1 249 1 view .LVU133
 601 0000 7047     		bx	lr
 602              		.cfi_endproc
 603              	.LFE78:
 605              		.section	.text.MonWriteI2C,"ax",%progbits
 606              		.align	1
 607              		.global	MonWriteI2C
 608              		.syntax unified
 609              		.thumb
 610              		.thumb_func
 611              		.fpu softvfp
 613              	MonWriteI2C:
 614              	.LFB79:
 250:VS4210/monitor.c **** 
 251:VS4210/monitor.c **** void MonWriteI2C(void)
 252:VS4210/monitor.c **** {
 615              		.loc 1 252 1 view -0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619              		@ link register save eliminated.
 253:VS4210/monitor.c **** 	/*
 254:VS4210/monitor.c **** 		if( argc<3 ) {
 255:VS4210/monitor.c **** 			Printf("   --> Missing parameter !!!");
 256:VS4210/monitor.c **** 			return;
 257:VS4210/monitor.c **** 		}
 258:VS4210/monitor.c **** 
 259:VS4210/monitor.c **** 		MonIndex = Asc2Bin( argv[1] );
 260:VS4210/monitor.c **** 		MonWdata = Asc2Bin( argv[2] );
 261:VS4210/monitor.c **** 
 262:VS4210/monitor.c **** 		if( echo ) {
 263:VS4210/monitor.c **** 			Printf("\r\nWrite %2xh:%2xh ", (tWord)MonIndex, (tWord)MonWdata);
 264:VS4210/monitor.c **** 			if ( MonAddress == TW88I2CAddress ) {
 265:VS4210/monitor.c **** 				WriteTW88(MonIndex, MonWdata);
 266:VS4210/monitor.c **** 				MonRdata = ReadTW88(MonIndex);
 267:VS4210/monitor.c **** 			}
 268:VS4210/monitor.c **** 			else {
 269:VS4210/monitor.c **** 				WriteI2C(MonAddress, MonIndex, MonWdata);
 270:VS4210/monitor.c **** 				MonRdata = ReadI2C(MonAddress, MonIndex);
 271:VS4210/monitor.c **** 			}
 272:VS4210/monitor.c **** 			Printf("==> Read %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);
 273:VS4210/monitor.c **** 		}
 274:VS4210/monitor.c **** 		else {
 275:VS4210/monitor.c **** 			if ( MonAddress == TW88I2CAddress ) {
 276:VS4210/monitor.c **** 				WriteTW88(MonIndex, MonWdata);
 277:VS4210/monitor.c **** 			}
 278:VS4210/monitor.c **** 			else {
 279:VS4210/monitor.c **** 				WriteI2C(MonAddress, MonIndex, MonWdata);
 280:VS4210/monitor.c **** 			}
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 17


 281:VS4210/monitor.c **** 		}
 282:VS4210/monitor.c **** 		*/
 283:VS4210/monitor.c **** }
 620              		.loc 1 283 1 view .LVU135
 621 0000 7047     		bx	lr
 622              		.cfi_endproc
 623              	.LFE79:
 625              		.section	.rodata.MonIncDecI2C.str1.4,"aMS",%progbits,1
 626              		.align	2
 627              	.LC4:
 628 0000 0D0A4545 		.ascii	"\015\012EEPROM Write addr=%02x  data=%02x\000"
 628      50524F4D 
 628      20577269 
 628      74652061 
 628      6464723D 
 629              		.align	2
 630              	.LC5:
 631 0024 0D0A5653 		.ascii	"\015\012VS4210 Write addr=%02x  data=%02x\000"
 631      34323130 
 631      20577269 
 631      74652061 
 631      6464723D 
 632              		.align	2
 633              	.LC6:
 634 0048 0D0A5653 		.ascii	"\015\012VS8812 Write addr=%02x  data=%02x\000"
 634      38383132 
 634      20577269 
 634      74652061 
 634      6464723D 
 635              		.align	2
 636              	.LC7:
 637 006c 0D0A5450 		.ascii	"\015\012TP2824  Read addr=%02x  data=%02x\000"
 637      32383234 
 637      20205265 
 637      61642061 
 637      6464723D 
 638              		.section	.text.MonIncDecI2C,"ax",%progbits
 639              		.align	1
 640              		.global	MonIncDecI2C
 641              		.syntax unified
 642              		.thumb
 643              		.thumb_func
 644              		.fpu softvfp
 646              	MonIncDecI2C:
 647              	.LVL36:
 648              	.LFB80:
 284:VS4210/monitor.c **** 
 285:VS4210/monitor.c **** void MonIncDecI2C(BYTE inc)
 286:VS4210/monitor.c **** {
 649              		.loc 1 286 1 view -0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653              		.loc 1 286 1 is_stmt 0 view .LVU137
 654 0000 10B5     		push	{r4, lr}
 655              	.LCFI7:
 656              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 18


 657              		.cfi_offset 4, -8
 658              		.cfi_offset 14, -4
 287:VS4210/monitor.c **** 	BYTE ret;
 659              		.loc 1 287 2 is_stmt 1 view .LVU138
 288:VS4210/monitor.c **** 
 289:VS4210/monitor.c **** 	switch (inc)
 660              		.loc 1 289 2 view .LVU139
 661 0002 0B28     		cmp	r0, #11
 662 0004 0BD8     		bhi	.L52
 663 0006 DFE800F0 		tbb	[pc, r0]
 664              	.L54:
 665 000a 06       		.byte	(.L57-.L54)/2
 666 000b 17       		.byte	(.L56-.L54)/2
 667 000c 0A       		.byte	(.L52-.L54)/2
 668 000d 0A       		.byte	(.L52-.L54)/2
 669 000e 0A       		.byte	(.L52-.L54)/2
 670 000f 0A       		.byte	(.L52-.L54)/2
 671 0010 0A       		.byte	(.L52-.L54)/2
 672 0011 0A       		.byte	(.L52-.L54)/2
 673 0012 0A       		.byte	(.L52-.L54)/2
 674 0013 0A       		.byte	(.L52-.L54)/2
 675 0014 1C       		.byte	(.L55-.L54)/2
 676 0015 21       		.byte	(.L53-.L54)/2
 677              		.p2align 1
 678              	.L57:
 290:VS4210/monitor.c **** 	{
 291:VS4210/monitor.c **** 	case 0:
 292:VS4210/monitor.c **** 		MonWdata--;
 679              		.loc 1 292 3 view .LVU140
 680              		.loc 1 292 11 is_stmt 0 view .LVU141
 681 0016 2E4A     		ldr	r2, .L67
 682 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 683 001a 013B     		subs	r3, r3, #1
 684 001c 1370     		strb	r3, [r2]
 293:VS4210/monitor.c **** 		break;
 685              		.loc 1 293 3 is_stmt 1 view .LVU142
 686              	.L52:
 294:VS4210/monitor.c **** 	case 1:
 295:VS4210/monitor.c **** 		MonWdata++;
 296:VS4210/monitor.c **** 		break;
 297:VS4210/monitor.c **** 	case 10:
 298:VS4210/monitor.c **** 		MonWdata -= 0x10;
 299:VS4210/monitor.c **** 		break;
 300:VS4210/monitor.c **** 	case 11:
 301:VS4210/monitor.c **** 		MonWdata += 0x10;
 302:VS4210/monitor.c **** 		break;
 303:VS4210/monitor.c **** 	}
 304:VS4210/monitor.c **** 	/*
 305:VS4210/monitor.c **** 
 306:VS4210/monitor.c **** 
 307:VS4210/monitor.c **** 	if ( MonAddress == TW88I2CAddress ) {
 308:VS4210/monitor.c **** 		WriteTW88(MonIndex, MonWdata);
 309:VS4210/monitor.c **** 		MonRdata = ReadTW88(MonIndex);
 310:VS4210/monitor.c **** 	}
 311:VS4210/monitor.c **** 	else {
 312:VS4210/monitor.c **** 		WriteI2C(MonAddress, MonIndex, MonWdata);
 313:VS4210/monitor.c **** 		MonRdata = ReadI2C(MonAddress, MonIndex);
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 19


 314:VS4210/monitor.c **** 	}
 315:VS4210/monitor.c **** 
 316:VS4210/monitor.c **** 	if( echo ) {
 317:VS4210/monitor.c **** 		Printf("Write %2xh:%2xh ", (tWord)MonIndex, (tWord)MonWdata);
 318:VS4210/monitor.c **** 		Printf("==> Read %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);
 319:VS4210/monitor.c **** 	}
 320:VS4210/monitor.c **** 
 321:VS4210/monitor.c **** */
 322:VS4210/monitor.c **** 
 323:VS4210/monitor.c **** 	if (Monitor_I2C == 0xA0)
 687              		.loc 1 323 2 view .LVU143
 688              		.loc 1 323 18 is_stmt 0 view .LVU144
 689 001e 2D4B     		ldr	r3, .L67+4
 690 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 691              		.loc 1 323 5 view .LVU145
 692 0022 A02B     		cmp	r3, #160
 693 0024 17D0     		beq	.L63
 324:VS4210/monitor.c **** 	{
 325:VS4210/monitor.c **** 		WriteEEP(MonIndex, MonWdata);
 326:VS4210/monitor.c **** 		ret = ReadEEP(MonIndex);
 327:VS4210/monitor.c **** 		Printf("\r\nEEPROM Write addr=%02x  data=%02x", (WORD)MonIndex, (WORD)ret);
 328:VS4210/monitor.c **** 	}
 329:VS4210/monitor.c **** 	else if (Monitor_I2C == 0x40)
 694              		.loc 1 329 7 is_stmt 1 view .LVU146
 695              		.loc 1 329 10 is_stmt 0 view .LVU147
 696 0026 402B     		cmp	r3, #64
 697 0028 24D0     		beq	.L64
 330:VS4210/monitor.c **** 	{
 331:VS4210/monitor.c **** 		VXISI2CWrite(MonIndex, MonWdata);
 332:VS4210/monitor.c **** 		ret = VXISI2CRead(MonIndex);
 333:VS4210/monitor.c **** 		Printf("\r\nVS4210 Write addr=%02x  data=%02x", (WORD)MonIndex, (WORD)ret);
 334:VS4210/monitor.c **** 	}
 335:VS4210/monitor.c **** 	else if (Monitor_I2C == 0x12)
 698              		.loc 1 335 7 is_stmt 1 view .LVU148
 699              		.loc 1 335 10 is_stmt 0 view .LVU149
 700 002a 122B     		cmp	r3, #18
 701 002c 31D0     		beq	.L65
 336:VS4210/monitor.c **** 	{
 337:VS4210/monitor.c **** 		VS8812Write(MonIndex, MonWdata);
 338:VS4210/monitor.c **** 		ret = VS8812Read(MonIndex);
 339:VS4210/monitor.c **** 		Printf("\r\nVS8812 Write addr=%02x  data=%02x", (WORD)MonIndex, (WORD)ret);
 340:VS4210/monitor.c **** 	}
 341:VS4210/monitor.c **** 	else if (Monitor_I2C == 0x88)
 702              		.loc 1 341 7 is_stmt 1 view .LVU150
 703              		.loc 1 341 10 is_stmt 0 view .LVU151
 704 002e 882B     		cmp	r3, #136
 705 0030 3ED0     		beq	.L66
 706              	.LVL37:
 707              	.L59:
 342:VS4210/monitor.c **** 	{
 343:VS4210/monitor.c **** 		tp28xx_byte_write(MonIndex, MonWdata);
 344:VS4210/monitor.c **** 		ret = tp28xx_byte_read(MonIndex);
 345:VS4210/monitor.c **** 		Printf("\r\nTP2824  Read addr=%02x  data=%02x", (WORD)MonIndex, (WORD)ret);
 346:VS4210/monitor.c **** 	}
 347:VS4210/monitor.c **** 	/*
 348:VS4210/monitor.c **** 	else if( Monitor_I2C==0x90)
 349:VS4210/monitor.c **** 		{
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 20


 350:VS4210/monitor.c **** 		gHDMI_Index=0;
 351:VS4210/monitor.c **** 		HDMIRX_WriteI2C_Byte( MonIndex, MonWdata );
 352:VS4210/monitor.c **** 		ret= HDMIRX_ReadI2C_Byte(MonIndex);
 353:VS4210/monitor.c **** 		 Printf("\r\nIT66021  Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 354:VS4210/monitor.c **** 		}
 355:VS4210/monitor.c **** 	*/
 356:VS4210/monitor.c **** 	Prompt();
 708              		.loc 1 356 2 is_stmt 1 view .LVU152
 709 0032 FFF7FEFF 		bl	Prompt
 710              	.LVL38:
 357:VS4210/monitor.c **** }
 711              		.loc 1 357 1 is_stmt 0 view .LVU153
 712 0036 10BD     		pop	{r4, pc}
 713              	.LVL39:
 714              	.L56:
 295:VS4210/monitor.c **** 		break;
 715              		.loc 1 295 3 is_stmt 1 view .LVU154
 295:VS4210/monitor.c **** 		break;
 716              		.loc 1 295 11 is_stmt 0 view .LVU155
 717 0038 254A     		ldr	r2, .L67
 718 003a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 719 003c 0133     		adds	r3, r3, #1
 720 003e 1370     		strb	r3, [r2]
 296:VS4210/monitor.c **** 	case 10:
 721              		.loc 1 296 3 is_stmt 1 view .LVU156
 722 0040 EDE7     		b	.L52
 723              	.L55:
 298:VS4210/monitor.c **** 		break;
 724              		.loc 1 298 3 view .LVU157
 298:VS4210/monitor.c **** 		break;
 725              		.loc 1 298 12 is_stmt 0 view .LVU158
 726 0042 234A     		ldr	r2, .L67
 727 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 728 0046 103B     		subs	r3, r3, #16
 729 0048 1370     		strb	r3, [r2]
 299:VS4210/monitor.c **** 	case 11:
 730              		.loc 1 299 3 is_stmt 1 view .LVU159
 731 004a E8E7     		b	.L52
 732              	.L53:
 301:VS4210/monitor.c **** 		break;
 733              		.loc 1 301 3 view .LVU160
 301:VS4210/monitor.c **** 		break;
 734              		.loc 1 301 12 is_stmt 0 view .LVU161
 735 004c 204A     		ldr	r2, .L67
 736 004e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 737 0050 1033     		adds	r3, r3, #16
 738 0052 1370     		strb	r3, [r2]
 302:VS4210/monitor.c **** 	}
 739              		.loc 1 302 3 is_stmt 1 view .LVU162
 740 0054 E3E7     		b	.L52
 741              	.L63:
 325:VS4210/monitor.c **** 		ret = ReadEEP(MonIndex);
 742              		.loc 1 325 3 view .LVU163
 743 0056 204C     		ldr	r4, .L67+8
 744 0058 1D4B     		ldr	r3, .L67
 745 005a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 746 005c 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 21


 747              	.LVL40:
 325:VS4210/monitor.c **** 		ret = ReadEEP(MonIndex);
 748              		.loc 1 325 3 is_stmt 0 view .LVU164
 749 005e FFF7FEFF 		bl	WriteEEP
 750              	.LVL41:
 326:VS4210/monitor.c **** 		Printf("\r\nEEPROM Write addr=%02x  data=%02x", (WORD)MonIndex, (WORD)ret);
 751              		.loc 1 326 3 is_stmt 1 view .LVU165
 326:VS4210/monitor.c **** 		Printf("\r\nEEPROM Write addr=%02x  data=%02x", (WORD)MonIndex, (WORD)ret);
 752              		.loc 1 326 9 is_stmt 0 view .LVU166
 753 0062 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 754 0064 FFF7FEFF 		bl	ReadEEP
 755              	.LVL42:
 756 0068 0246     		mov	r2, r0
 757              	.LVL43:
 327:VS4210/monitor.c **** 	}
 758              		.loc 1 327 3 is_stmt 1 view .LVU167
 759 006a 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 760 006c 1B48     		ldr	r0, .L67+12
 761 006e FFF7FEFF 		bl	Printf
 762              	.LVL44:
 327:VS4210/monitor.c **** 	}
 763              		.loc 1 327 3 is_stmt 0 view .LVU168
 764 0072 DEE7     		b	.L59
 765              	.LVL45:
 766              	.L64:
 331:VS4210/monitor.c **** 		ret = VXISI2CRead(MonIndex);
 767              		.loc 1 331 3 is_stmt 1 view .LVU169
 768 0074 184C     		ldr	r4, .L67+8
 769 0076 164B     		ldr	r3, .L67
 770 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 771 007a 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 772              	.LVL46:
 331:VS4210/monitor.c **** 		ret = VXISI2CRead(MonIndex);
 773              		.loc 1 331 3 is_stmt 0 view .LVU170
 774 007c FFF7FEFF 		bl	VXISI2CWrite
 775              	.LVL47:
 332:VS4210/monitor.c **** 		Printf("\r\nVS4210 Write addr=%02x  data=%02x", (WORD)MonIndex, (WORD)ret);
 776              		.loc 1 332 3 is_stmt 1 view .LVU171
 332:VS4210/monitor.c **** 		Printf("\r\nVS4210 Write addr=%02x  data=%02x", (WORD)MonIndex, (WORD)ret);
 777              		.loc 1 332 9 is_stmt 0 view .LVU172
 778 0080 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 779 0082 FFF7FEFF 		bl	VXISI2CRead
 780              	.LVL48:
 781 0086 0246     		mov	r2, r0
 782              	.LVL49:
 333:VS4210/monitor.c **** 	}
 783              		.loc 1 333 3 is_stmt 1 view .LVU173
 784 0088 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 785 008a 1548     		ldr	r0, .L67+16
 786 008c FFF7FEFF 		bl	Printf
 787              	.LVL50:
 333:VS4210/monitor.c **** 	}
 788              		.loc 1 333 3 is_stmt 0 view .LVU174
 789 0090 CFE7     		b	.L59
 790              	.LVL51:
 791              	.L65:
 337:VS4210/monitor.c **** 		ret = VS8812Read(MonIndex);
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 22


 792              		.loc 1 337 3 is_stmt 1 view .LVU175
 793 0092 114C     		ldr	r4, .L67+8
 794 0094 0E4B     		ldr	r3, .L67
 795 0096 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 796 0098 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 797              	.LVL52:
 337:VS4210/monitor.c **** 		ret = VS8812Read(MonIndex);
 798              		.loc 1 337 3 is_stmt 0 view .LVU176
 799 009a FFF7FEFF 		bl	VS8812Write
 800              	.LVL53:
 338:VS4210/monitor.c **** 		Printf("\r\nVS8812 Write addr=%02x  data=%02x", (WORD)MonIndex, (WORD)ret);
 801              		.loc 1 338 3 is_stmt 1 view .LVU177
 338:VS4210/monitor.c **** 		Printf("\r\nVS8812 Write addr=%02x  data=%02x", (WORD)MonIndex, (WORD)ret);
 802              		.loc 1 338 9 is_stmt 0 view .LVU178
 803 009e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 804 00a0 FFF7FEFF 		bl	VS8812Read
 805              	.LVL54:
 806 00a4 0246     		mov	r2, r0
 807              	.LVL55:
 339:VS4210/monitor.c **** 	}
 808              		.loc 1 339 3 is_stmt 1 view .LVU179
 809 00a6 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 810 00a8 0E48     		ldr	r0, .L67+20
 811 00aa FFF7FEFF 		bl	Printf
 812              	.LVL56:
 339:VS4210/monitor.c **** 	}
 813              		.loc 1 339 3 is_stmt 0 view .LVU180
 814 00ae C0E7     		b	.L59
 815              	.LVL57:
 816              	.L66:
 343:VS4210/monitor.c **** 		ret = tp28xx_byte_read(MonIndex);
 817              		.loc 1 343 3 is_stmt 1 view .LVU181
 818 00b0 094C     		ldr	r4, .L67+8
 819 00b2 074B     		ldr	r3, .L67
 820 00b4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 821 00b6 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 822              	.LVL58:
 343:VS4210/monitor.c **** 		ret = tp28xx_byte_read(MonIndex);
 823              		.loc 1 343 3 is_stmt 0 view .LVU182
 824 00b8 FFF7FEFF 		bl	tp28xx_byte_write
 825              	.LVL59:
 344:VS4210/monitor.c **** 		Printf("\r\nTP2824  Read addr=%02x  data=%02x", (WORD)MonIndex, (WORD)ret);
 826              		.loc 1 344 3 is_stmt 1 view .LVU183
 344:VS4210/monitor.c **** 		Printf("\r\nTP2824  Read addr=%02x  data=%02x", (WORD)MonIndex, (WORD)ret);
 827              		.loc 1 344 9 is_stmt 0 view .LVU184
 828 00bc 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 829 00be FFF7FEFF 		bl	tp28xx_byte_read
 830              	.LVL60:
 831 00c2 0246     		mov	r2, r0
 832              	.LVL61:
 345:VS4210/monitor.c **** 	}
 833              		.loc 1 345 3 is_stmt 1 view .LVU185
 834 00c4 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 835 00c6 0848     		ldr	r0, .L67+24
 836 00c8 FFF7FEFF 		bl	Printf
 837              	.LVL62:
 345:VS4210/monitor.c **** 	}
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 23


 838              		.loc 1 345 3 is_stmt 0 view .LVU186
 839 00cc B1E7     		b	.L59
 840              	.L68:
 841 00ce 00BF     		.align	2
 842              	.L67:
 843 00d0 00000000 		.word	MonWdata
 844 00d4 00000000 		.word	.LANCHOR2
 845 00d8 00000000 		.word	MonIndex
 846 00dc 00000000 		.word	.LC4
 847 00e0 24000000 		.word	.LC5
 848 00e4 48000000 		.word	.LC6
 849 00e8 6C000000 		.word	.LC7
 850              		.cfi_endproc
 851              	.LFE80:
 853              		.section	.text.MonDumpI2C,"ax",%progbits
 854              		.align	1
 855              		.global	MonDumpI2C
 856              		.syntax unified
 857              		.thumb
 858              		.thumb_func
 859              		.fpu softvfp
 861              	MonDumpI2C:
 862              	.LFB81:
 358:VS4210/monitor.c **** 
 359:VS4210/monitor.c **** void MonDumpI2C(void)
 360:VS4210/monitor.c **** {
 863              		.loc 1 360 1 is_stmt 1 view -0
 864              		.cfi_startproc
 865              		@ args = 0, pretend = 0, frame = 0
 866              		@ frame_needed = 0, uses_anonymous_args = 0
 867              		@ link register save eliminated.
 361:VS4210/monitor.c **** 	/*
 362:VS4210/monitor.c **** 		BYTE ToMonIndex;
 363:VS4210/monitor.c **** 		int  cnt=8;
 364:VS4210/monitor.c **** 
 365:VS4210/monitor.c **** 		if( argc>=2 ) MonIndex = Asc2Bin(argv[1]);
 366:VS4210/monitor.c **** 		if( argc>=3 ) ToMonIndex = Asc2Bin(argv[2]);
 367:VS4210/monitor.c **** 		else ToMonIndex = MonIndex+cnt;
 368:VS4210/monitor.c **** 		if ( ToMonIndex < MonIndex ) ToMonIndex = 0xFF;
 369:VS4210/monitor.c **** 		cnt = ToMonIndex - MonIndex + 1;
 370:VS4210/monitor.c **** 
 371:VS4210/monitor.c **** 		if( echo ) {
 372:VS4210/monitor.c **** 			if ( MonAddress == TW88I2CAddress ) {
 373:VS4210/monitor.c **** 				for ( ; cnt > 0; cnt-- ) {
 374:VS4210/monitor.c **** 					MonRdata = ReadTW88(MonIndex);
 375:VS4210/monitor.c **** 					Printf("\r\n==> Read %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);
 376:VS4210/monitor.c **** 					MonIndex++;
 377:VS4210/monitor.c **** 				}
 378:VS4210/monitor.c **** 			}
 379:VS4210/monitor.c **** 			else {
 380:VS4210/monitor.c **** 				for ( ; cnt > 0; cnt-- ) {
 381:VS4210/monitor.c **** 					MonRdata = ReadI2C(MonAddress, MonIndex);
 382:VS4210/monitor.c **** 					Printf("\r\n==> Read %2xh:%2xh", (tWord)MonIndex, (tWord)MonRdata);
 383:VS4210/monitor.c **** 					MonIndex++;
 384:VS4210/monitor.c **** 				}
 385:VS4210/monitor.c **** 			}
 386:VS4210/monitor.c **** 		}
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 24


 387:VS4210/monitor.c **** 		else {
 388:VS4210/monitor.c **** 			if ( MonAddress == TW88I2CAddress ) {
 389:VS4210/monitor.c **** 				for ( ; cnt > 0; cnt-- ) {
 390:VS4210/monitor.c **** 					MonRdata = ReadTW88(MonIndex);
 391:VS4210/monitor.c **** 					MonIndex++;
 392:VS4210/monitor.c **** 				}
 393:VS4210/monitor.c **** 			}
 394:VS4210/monitor.c **** 			else {
 395:VS4210/monitor.c **** 				for ( ; cnt > 0; cnt-- ) {
 396:VS4210/monitor.c **** 					MonRdata = ReadI2C(MonAddress, MonIndex);
 397:VS4210/monitor.c **** 					MonIndex++;
 398:VS4210/monitor.c **** 				}
 399:VS4210/monitor.c **** 			}
 400:VS4210/monitor.c **** 		}
 401:VS4210/monitor.c **** 		*/
 402:VS4210/monitor.c **** }
 868              		.loc 1 402 1 view .LVU188
 869 0000 7047     		bx	lr
 870              		.cfi_endproc
 871              	.LFE81:
 873              		.section	.text.MonNewReadI2C,"ax",%progbits
 874              		.align	1
 875              		.global	MonNewReadI2C
 876              		.syntax unified
 877              		.thumb
 878              		.thumb_func
 879              		.fpu softvfp
 881              	MonNewReadI2C:
 882              	.LFB82:
 403:VS4210/monitor.c **** 
 404:VS4210/monitor.c **** //-----------------------------------------------------------------------------
 405:VS4210/monitor.c **** 
 406:VS4210/monitor.c **** void MonNewReadI2C(void)
 407:VS4210/monitor.c **** {
 883              		.loc 1 407 1 view -0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 0
 886              		@ frame_needed = 0, uses_anonymous_args = 0
 887              		@ link register save eliminated.
 408:VS4210/monitor.c **** 	/*
 409:VS4210/monitor.c **** 		BYTE Slave;
 410:VS4210/monitor.c **** 
 411:VS4210/monitor.c **** 		if( argc>=3 ) MonIndex = Asc2Bin( argv[2] );
 412:VS4210/monitor.c **** 		else	{
 413:VS4210/monitor.c **** 			Printf("   --> Missing parameter !!!");
 414:VS4210/monitor.c **** 			return;
 415:VS4210/monitor.c **** 		}
 416:VS4210/monitor.c **** 		Slave = Asc2Bin(argv[1]);
 417:VS4210/monitor.c **** 
 418:VS4210/monitor.c **** 		if ( Slave == TW88I2CAddress )
 419:VS4210/monitor.c **** 			MonRdata = ReadTW88(MonIndex);
 420:VS4210/monitor.c **** 		else
 421:VS4210/monitor.c **** 			MonRdata = ReadI2C(Slave, MonIndex);
 422:VS4210/monitor.c **** 
 423:VS4210/monitor.c **** 		if( echo )
 424:VS4210/monitor.c **** 			Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)MonIndex, (tWord)MonRdata);
 425:VS4210/monitor.c **** 
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 25


 426:VS4210/monitor.c **** 		MonWdata = MonRdata;
 427:VS4210/monitor.c **** 		*/
 428:VS4210/monitor.c **** }
 888              		.loc 1 428 1 view .LVU190
 889 0000 7047     		bx	lr
 890              		.cfi_endproc
 891              	.LFE82:
 893              		.section	.text.MonNewWriteI2C,"ax",%progbits
 894              		.align	1
 895              		.global	MonNewWriteI2C
 896              		.syntax unified
 897              		.thumb
 898              		.thumb_func
 899              		.fpu softvfp
 901              	MonNewWriteI2C:
 902              	.LFB83:
 429:VS4210/monitor.c **** 
 430:VS4210/monitor.c **** void MonNewWriteI2C(void)
 431:VS4210/monitor.c **** {
 903              		.loc 1 431 1 view -0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 0
 906              		@ frame_needed = 0, uses_anonymous_args = 0
 907              		@ link register save eliminated.
 432:VS4210/monitor.c **** 	/*
 433:VS4210/monitor.c **** 		BYTE Slave;
 434:VS4210/monitor.c **** 
 435:VS4210/monitor.c **** 		if( argc<4 ) {
 436:VS4210/monitor.c **** 			Printf("   --> Missing parameter !!!");
 437:VS4210/monitor.c **** 			return;
 438:VS4210/monitor.c **** 		}
 439:VS4210/monitor.c **** 
 440:VS4210/monitor.c **** 		MonIndex = Asc2Bin( argv[2] );
 441:VS4210/monitor.c **** 		MonWdata = Asc2Bin( argv[3] );
 442:VS4210/monitor.c **** 		Slave = Asc2Bin(argv[1]);
 443:VS4210/monitor.c **** 
 444:VS4210/monitor.c **** 		if ( Slave == TW88I2CAddress ) {
 445:VS4210/monitor.c **** 			WriteTW88(MonIndex, MonWdata);
 446:VS4210/monitor.c **** 			MonRdata = ReadTW88(MonIndex);
 447:VS4210/monitor.c **** 		}
 448:VS4210/monitor.c **** 		else {
 449:VS4210/monitor.c **** 			WriteI2C(Slave, MonIndex, MonWdata);
 450:VS4210/monitor.c **** 			MonRdata = ReadI2C(Slave, MonIndex);
 451:VS4210/monitor.c **** 		}
 452:VS4210/monitor.c **** 
 453:VS4210/monitor.c **** 		if( echo )
 454:VS4210/monitor.c **** 			Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)MonIndex, (tWord)MonRdata);
 455:VS4210/monitor.c **** 	*/
 456:VS4210/monitor.c **** }
 908              		.loc 1 456 1 view .LVU192
 909 0000 7047     		bx	lr
 910              		.cfi_endproc
 911              	.LFE83:
 913              		.section	.text.MonNewDumpI2C,"ax",%progbits
 914              		.align	1
 915              		.global	MonNewDumpI2C
 916              		.syntax unified
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 26


 917              		.thumb
 918              		.thumb_func
 919              		.fpu softvfp
 921              	MonNewDumpI2C:
 922              	.LFB84:
 457:VS4210/monitor.c **** 
 458:VS4210/monitor.c **** void MonNewDumpI2C(void)
 459:VS4210/monitor.c **** {
 923              		.loc 1 459 1 view -0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 0
 926              		@ frame_needed = 0, uses_anonymous_args = 0
 927              		@ link register save eliminated.
 460:VS4210/monitor.c **** 	/*
 461:VS4210/monitor.c **** 		BYTE 	ToMonIndex, Slave;
 462:VS4210/monitor.c **** 		tWord	i;
 463:VS4210/monitor.c **** 
 464:VS4210/monitor.c **** 		if( argc>=2 ) MonIndex = Asc2Bin(argv[2]);
 465:VS4210/monitor.c **** 		if( argc>=3 ) ToMonIndex = Asc2Bin(argv[3]);
 466:VS4210/monitor.c **** 		Slave = Asc2Bin(argv[1]);
 467:VS4210/monitor.c **** 
 468:VS4210/monitor.c **** 		if( echo ) {
 469:VS4210/monitor.c **** 			if ( Slave == TW88I2CAddress ) {
 470:VS4210/monitor.c **** 				for(i=MonIndex; i<=ToMonIndex; i++) {
 471:VS4210/monitor.c **** 					MonRdata = ReadTW88(i);
 472:VS4210/monitor.c **** 					Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)i, (tWord)MonRdata);
 473:VS4210/monitor.c **** 				}
 474:VS4210/monitor.c **** 			}
 475:VS4210/monitor.c **** 			else {
 476:VS4210/monitor.c **** 				for(i=MonIndex; i<=ToMonIndex; i++) {
 477:VS4210/monitor.c **** 					MonRdata = ReadI2C(Slave, i);
 478:VS4210/monitor.c **** 					Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)i, (tWord)MonRdata);
 479:VS4210/monitor.c **** 				}
 480:VS4210/monitor.c **** 			}
 481:VS4210/monitor.c **** 		}
 482:VS4210/monitor.c **** 		else {
 483:VS4210/monitor.c **** 			if ( Slave == TW88I2CAddress ) {
 484:VS4210/monitor.c **** 				for(i=MonIndex; i<=ToMonIndex; i++) {
 485:VS4210/monitor.c **** 					MonRdata = ReadTW88(i);
 486:VS4210/monitor.c **** 				}
 487:VS4210/monitor.c **** 			}
 488:VS4210/monitor.c **** 			else {
 489:VS4210/monitor.c **** 				for(i=MonIndex; i<=ToMonIndex; i++) {
 490:VS4210/monitor.c **** 					MonRdata = ReadI2C(Slave, i);
 491:VS4210/monitor.c **** 				}
 492:VS4210/monitor.c **** 			}
 493:VS4210/monitor.c **** 		}
 494:VS4210/monitor.c **** 		*/
 495:VS4210/monitor.c **** }
 928              		.loc 1 495 1 view .LVU194
 929 0000 7047     		bx	lr
 930              		.cfi_endproc
 931              	.LFE84:
 933              		.section	.text.MonWriteBit,"ax",%progbits
 934              		.align	1
 935              		.global	MonWriteBit
 936              		.syntax unified
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 27


 937              		.thumb
 938              		.thumb_func
 939              		.fpu softvfp
 941              	MonWriteBit:
 942              	.LFB85:
 496:VS4210/monitor.c **** 
 497:VS4210/monitor.c **** void MonWriteBit(void)
 498:VS4210/monitor.c **** {
 943              		.loc 1 498 1 view -0
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 0
 946              		@ frame_needed = 0, uses_anonymous_args = 0
 947              		@ link register save eliminated.
 499:VS4210/monitor.c **** 	/*
 500:VS4210/monitor.c **** 		BYTE mask, i, FromBit, ToBit,  MonMask, val;
 501:VS4210/monitor.c **** 		BYTE Slave;
 502:VS4210/monitor.c **** 		// b 88 index startbit|endbit data
 503:VS4210/monitor.c **** 
 504:VS4210/monitor.c **** 		if( argc<5 ) {
 505:VS4210/monitor.c **** 			Printf("   --> Missing parameter !!!");
 506:VS4210/monitor.c **** 			return;
 507:VS4210/monitor.c **** 		}
 508:VS4210/monitor.c **** 		Slave = Asc2Bin(argv[1]);
 509:VS4210/monitor.c **** 
 510:VS4210/monitor.c **** 		MonIndex = Asc2Bin( argv[2] );
 511:VS4210/monitor.c **** 		FromBit  = (Asc2Bin( argv[3] ) >> 4) & 0x0f;
 512:VS4210/monitor.c **** 		ToBit  = Asc2Bin( argv[3] )  & 0x0f;
 513:VS4210/monitor.c **** 		MonMask  = Asc2Bin( argv[4] );
 514:VS4210/monitor.c **** 
 515:VS4210/monitor.c **** 		if( FromBit<ToBit || FromBit>7 || ToBit>7) {
 516:VS4210/monitor.c **** 			Printf("\r\n   --> Wrong range of bit operation !!!");
 517:VS4210/monitor.c **** 			return;
 518:VS4210/monitor.c **** 		}
 519:VS4210/monitor.c **** 
 520:VS4210/monitor.c **** 		mask = 0xff;
 521:VS4210/monitor.c **** 		val=0x7f;
 522:VS4210/monitor.c **** 		for(i=7; i>FromBit; i--) {
 523:VS4210/monitor.c **** 			mask &= val;
 524:VS4210/monitor.c **** 			val = val>>1;
 525:VS4210/monitor.c **** 		}
 526:VS4210/monitor.c **** 
 527:VS4210/monitor.c **** 		val=0xfe;
 528:VS4210/monitor.c **** 		for(i=0; i<ToBit; i++) {
 529:VS4210/monitor.c **** 			mask &= val;
 530:VS4210/monitor.c **** 			val = val<<1;
 531:VS4210/monitor.c **** 		}
 532:VS4210/monitor.c **** 
 533:VS4210/monitor.c **** 		if ( Slave == TW88I2CAddress ) {
 534:VS4210/monitor.c **** 			MonRdata = ReadTW88(MonIndex);
 535:VS4210/monitor.c **** 			MonWdata = (MonRdata & (~mask)) | (MonMask & mask);
 536:VS4210/monitor.c **** 
 537:VS4210/monitor.c **** 			WriteTW88(MonIndex, MonWdata);
 538:VS4210/monitor.c **** 			MonRdata = ReadTW88(MonIndex);
 539:VS4210/monitor.c **** 		}
 540:VS4210/monitor.c **** 		else {
 541:VS4210/monitor.c **** 			MonRdata = ReadI2C(Slave, MonIndex);
 542:VS4210/monitor.c **** 			MonWdata = (MonRdata & (~mask)) | (MonMask & mask);
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 28


 543:VS4210/monitor.c **** 
 544:VS4210/monitor.c **** 			WriteI2C(Slave, MonIndex, MonWdata);
 545:VS4210/monitor.c **** 			MonRdata = ReadI2C(Slave, MonIndex);
 546:VS4210/monitor.c **** 		}
 547:VS4210/monitor.c **** 
 548:VS4210/monitor.c **** 		if( echo )
 549:VS4210/monitor.c **** 			Printf("\r\n<R>%2x[%2x]=%2x", (tWord)Slave, (tWord)MonIndex, (tWord)MonRdata);
 550:VS4210/monitor.c **** 	*/
 551:VS4210/monitor.c **** }
 948              		.loc 1 551 1 view .LVU196
 949 0000 7047     		bx	lr
 950              		.cfi_endproc
 951              	.LFE85:
 953              		.section	.text.MonTxDump,"ax",%progbits
 954              		.align	1
 955              		.global	MonTxDump
 956              		.syntax unified
 957              		.thumb
 958              		.thumb_func
 959              		.fpu softvfp
 961              	MonTxDump:
 962              	.LFB86:
 552:VS4210/monitor.c **** 
 553:VS4210/monitor.c **** #if 0 // defined( SUPPORT_PC ) || defined( SUPPORT_DTV )
 554:VS4210/monitor.c **** void PclkAccess(void)
 555:VS4210/monitor.c **** {
 556:VS4210/monitor.c **** 	DtWord pclk;
 557:VS4210/monitor.c **** 
 558:VS4210/monitor.c **** 	if( argc > 2 ) {
 559:VS4210/monitor.c **** 		Printf("   --> Too many parameter !!!");
 560:VS4210/monitor.c **** 		return;
 561:VS4210/monitor.c **** 	}
 562:VS4210/monitor.c **** 
 563:VS4210/monitor.c **** 	if( argc==2 ) {
 564:VS4210/monitor.c **** 		pclk = (DtWord)a2i(argv[1]) * 1000000;
 565:VS4210/monitor.c **** 		Printf("\r\n --> Set Pclk:  %ld Hz ", pclk);
 566:VS4210/monitor.c **** //		Printf("\r\n Not Suuport ");
 567:VS4210/monitor.c **** 		ChangeInternPLL(pclk);
 568:VS4210/monitor.c **** 	}
 569:VS4210/monitor.c **** 	
 570:VS4210/monitor.c **** 	if( argc==1)   GetPPF();
 571:VS4210/monitor.c **** 	
 572:VS4210/monitor.c **** }
 573:VS4210/monitor.c **** #endif
 574:VS4210/monitor.c **** 
 575:VS4210/monitor.c **** void MonTxDump(void)
 576:VS4210/monitor.c **** {
 963              		.loc 1 576 1 view -0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 0
 966              		@ frame_needed = 0, uses_anonymous_args = 0
 967              		@ link register save eliminated.
 577:VS4210/monitor.c **** 	/*
 578:VS4210/monitor.c **** 		tWord	count;
 579:VS4210/monitor.c **** 
 580:VS4210/monitor.c **** 		if ( argc < 2 ) {
 581:VS4210/monitor.c **** 			Puts("\r\nInsufficient parameters...");
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 29


 582:VS4210/monitor.c **** 			return;
 583:VS4210/monitor.c **** 		}
 584:VS4210/monitor.c **** 		count = (tWord)a2i(argv[1]);
 585:VS4210/monitor.c **** 		do {
 586:VS4210/monitor.c **** 			RS_tx((count&0x1F)+0x20);
 587:VS4210/monitor.c **** 			count--;
 588:VS4210/monitor.c **** 		} while ( count != 0 );
 589:VS4210/monitor.c **** 		*/
 590:VS4210/monitor.c **** }
 968              		.loc 1 590 1 view .LVU198
 969 0000 7047     		bx	lr
 970              		.cfi_endproc
 971              	.LFE86:
 973              		.section	.rodata.MonHelp.str1.4,"aMS",%progbits,1
 974              		.align	2
 975              	.LC8:
 976 0000 0D0A3D3D 		.ascii	"\015\012==========================================="
 976      3D3D3D3D 
 976      3D3D3D3D 
 976      3D3D3D3D 
 976      3D3D3D3D 
 977 002d 3D3D3D3D 		.ascii	"============\000"
 977      3D3D3D3D 
 977      3D3D3D3D 
 977      00
 978 003a 0000     		.align	2
 979              	.LC9:
 980 003c 0D0A3E3E 		.ascii	"\015\012>>>     Welcome to ML076HQ     Rev 1.00    "
 980      3E202020 
 980      20205765 
 980      6C636F6D 
 980      6520746F 
 981 0069 203C3C3C 		.ascii	" <<<\000"
 981      00
 982 006e 0000     		.align	2
 983              	.LC10:
 984 0070 0D0A2020 		.ascii	"\015\012   R ii             \011; Read TP2824 data\000"
 984      20522069 
 984      69202020 
 984      20202020 
 984      20202020 
 985 009a 0000     		.align	2
 986              	.LC11:
 987 009c 0D0A2020 		.ascii	"\015\012   W ii dd          \011; Write TP2824 data"
 987      20572069 
 987      69206464 
 987      20202020 
 987      20202020 
 988 00c6 00       		.ascii	"\000"
 989 00c7 00       		.align	2
 990              	.LC12:
 991 00c8 0D0A2020 		.ascii	"\015\012   VR ii             \011; Read VS4210 data"
 991      20565220 
 991      69692020 
 991      20202020 
 991      20202020 
 992 00f2 00       		.ascii	"\000"
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 30


 993 00f3 00       		.align	2
 994              	.LC13:
 995 00f4 0D0A2020 		.ascii	"\015\012   VW ii dd          \011; Write VS4210 dat"
 995      20565720 
 995      69692064 
 995      64202020 
 995      20202020 
 996 011e 6100     		.ascii	"a\000"
 997              		.align	2
 998              	.LC14:
 999 0120 0D0A2020 		.ascii	"\015\012   D [ii] [cc]      \011; Dump\000"
 999      2044205B 
 999      69695D20 
 999      5B63635D 
 999      20202020 
 1000 013e 0000     		.align	2
 1001              	.LC15:
 1002 0140 0D0A2020 		.ascii	"\015\012   C aa             \011; Change I2C addres"
 1002      20432061 
 1002      61202020 
 1002      20202020 
 1002      20202020 
 1003 016a 7300     		.ascii	"s\000"
 1004              		.align	2
 1005              	.LC16:
 1006 016c 0D0A2020 		.ascii	"\015\012   M ?              \011; Current Input\000"
 1006      204D203F 
 1006      20202020 
 1006      20202020 
 1006      20202020 
 1007 0193 00       		.align	2
 1008              	.LC17:
 1009 0194 0D0A2020 		.ascii	"\015\012   M dd             \011; Change Input\000"
 1009      204D2064 
 1009      64202020 
 1009      20202020 
 1009      20202020 
 1010 01ba 0000     		.align	2
 1011              	.LC18:
 1012 01bc 0D0A2020 		.ascii	"\015\012   Access [0,1]     \011; Program TW88xx Ac"
 1012      20416363 
 1012      65737320 
 1012      5B302C31 
 1012      5D202020 
 1013 01e6 63657373 		.ascii	"cess OFF/ON\000"
 1013      204F4646 
 1013      2F4F4E00 
 1014 01f2 0000     		.align	2
 1015              	.LC19:
 1016 01f4 0D0A2020 		.ascii	"\015\012   AutoDetect [0,1] \011; PC Automode OFF/O"
 1016      20417574 
 1016      6F446574 
 1016      65637420 
 1016      5B302C31 
 1017 021e 4E00     		.ascii	"N\000"
 1018              		.align	2
 1019              	.LC20:
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 31


 1020 0220 0D0A2020 		.ascii	"\015\012   PCAuto\011\011    \011; RUN PC Auto Adju"
 1020      20504341 
 1020      75746F09 
 1020      09202020 
 1020      20093B20 
 1021 0244 737400   		.ascii	"st\000"
 1022 0247 00       		.align	2
 1023              	.LC21:
 1024 0248 0D0A2020 		.ascii	"\015\012   Debug [0..255]   \011; Debuging display "
 1024      20446562 
 1024      7567205B 
 1024      302E2E32 
 1024      35355D20 
 1025 0272 6C657665 		.ascii	"level\000"
 1025      6C00
 1026              		.align	2
 1027              	.LC22:
 1028 0278 0D0A2020 		.ascii	"\015\012   Echo On/Off      \011; Terminal Echoing "
 1028      20456368 
 1028      6F204F6E 
 1028      2F4F6666 
 1028      20202020 
 1029 02a2 4F6E2F4F 		.ascii	"On/Off\000"
 1029      666600
 1030 02a9 000000   		.align	2
 1031              	.LC23:
 1032 02ac 0D0A2020 		.ascii	"\015\012   Delta            \011; Init DeltaRGB Pan"
 1032      2044656C 
 1032      74612020 
 1032      20202020 
 1032      20202020 
 1033 02d6 656C00   		.ascii	"el\000"
 1034 02d9 000000   		.align	2
 1035              	.LC24:
 1036 02dc 0D0A2020 		.ascii	"\015\012   Delta w ii dh dl; SPI Write to DeltaRGB "
 1036      2044656C 
 1036      74612077 
 1036      20696920 
 1036      64682064 
 1037 0309 50616E65 		.ascii	"Panel\000"
 1037      6C00
 1038 030f 00       		.align	2
 1039              	.LC25:
 1040 0310 0D0A00   		.ascii	"\015\012\000"
 1041              		.section	.text.MonHelp,"ax",%progbits
 1042              		.align	1
 1043              		.global	MonHelp
 1044              		.syntax unified
 1045              		.thumb
 1046              		.thumb_func
 1047              		.fpu softvfp
 1049              	MonHelp:
 1050              	.LFB87:
 591:VS4210/monitor.c **** 
 592:VS4210/monitor.c **** //=============================================================================
 593:VS4210/monitor.c **** //			Help Message
 594:VS4210/monitor.c **** //=============================================================================
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 32


 595:VS4210/monitor.c **** void MonHelp(void)
 596:VS4210/monitor.c **** {
 1051              		.loc 1 596 1 view -0
 1052              		.cfi_startproc
 1053              		@ args = 0, pretend = 0, frame = 0
 1054              		@ frame_needed = 0, uses_anonymous_args = 0
 1055 0000 38B5     		push	{r3, r4, r5, lr}
 1056              	.LCFI8:
 1057              		.cfi_def_cfa_offset 16
 1058              		.cfi_offset 3, -16
 1059              		.cfi_offset 4, -12
 1060              		.cfi_offset 5, -8
 1061              		.cfi_offset 14, -4
 597:VS4210/monitor.c **** 	Printf("\r\n=======================================================");
 1062              		.loc 1 597 2 view .LVU200
 1063 0002 214C     		ldr	r4, .L77
 1064 0004 2046     		mov	r0, r4
 1065 0006 FFF7FEFF 		bl	Printf
 1066              	.LVL63:
 598:VS4210/monitor.c **** 	Printf("\r\n>>>     Welcome to ML076HQ     Rev 1.00     <<<");
 1067              		.loc 1 598 2 view .LVU201
 1068 000a 2048     		ldr	r0, .L77+4
 1069 000c FFF7FEFF 		bl	Printf
 1070              	.LVL64:
 599:VS4210/monitor.c **** 	Printf("\r\n=======================================================");
 1071              		.loc 1 599 2 view .LVU202
 1072 0010 2046     		mov	r0, r4
 1073 0012 FFF7FEFF 		bl	Printf
 1074              	.LVL65:
 600:VS4210/monitor.c **** 	Printf("\r\n   R ii             	; Read TP2824 data");
 1075              		.loc 1 600 2 view .LVU203
 1076 0016 1E48     		ldr	r0, .L77+8
 1077 0018 FFF7FEFF 		bl	Printf
 1078              	.LVL66:
 601:VS4210/monitor.c **** 	Printf("\r\n   W ii dd          	; Write TP2824 data");
 1079              		.loc 1 601 2 view .LVU204
 1080 001c 1D48     		ldr	r0, .L77+12
 1081 001e FFF7FEFF 		bl	Printf
 1082              	.LVL67:
 602:VS4210/monitor.c **** 	Printf("\r\n   VR ii             	; Read VS4210 data");
 1083              		.loc 1 602 2 view .LVU205
 1084 0022 1D48     		ldr	r0, .L77+16
 1085 0024 FFF7FEFF 		bl	Printf
 1086              	.LVL68:
 603:VS4210/monitor.c **** 	Printf("\r\n   VW ii dd          	; Write VS4210 data");
 1087              		.loc 1 603 2 view .LVU206
 1088 0028 1C48     		ldr	r0, .L77+20
 1089 002a FFF7FEFF 		bl	Printf
 1090              	.LVL69:
 604:VS4210/monitor.c **** 	Printf("\r\n   D [ii] [cc]      	; Dump");
 1091              		.loc 1 604 2 view .LVU207
 1092 002e 1C48     		ldr	r0, .L77+24
 1093 0030 FFF7FEFF 		bl	Printf
 1094              	.LVL70:
 605:VS4210/monitor.c **** 	Printf("\r\n   C aa             	; Change I2C address");
 1095              		.loc 1 605 2 view .LVU208
 1096 0034 1B48     		ldr	r0, .L77+28
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 33


 1097 0036 FFF7FEFF 		bl	Printf
 1098              	.LVL71:
 606:VS4210/monitor.c **** 	Printf("\r\n   M ?              	; Current Input");
 1099              		.loc 1 606 2 view .LVU209
 1100 003a 1B48     		ldr	r0, .L77+32
 1101 003c FFF7FEFF 		bl	Printf
 1102              	.LVL72:
 607:VS4210/monitor.c **** 	Printf("\r\n   M dd             	; Change Input");
 1103              		.loc 1 607 2 view .LVU210
 1104 0040 1A48     		ldr	r0, .L77+36
 1105 0042 FFF7FEFF 		bl	Printf
 1106              	.LVL73:
 608:VS4210/monitor.c **** 	Printf("\r\n   Access [0,1]     	; Program TW88xx Access OFF/ON");
 1107              		.loc 1 608 2 view .LVU211
 1108 0046 1A48     		ldr	r0, .L77+40
 1109 0048 FFF7FEFF 		bl	Printf
 1110              	.LVL74:
 609:VS4210/monitor.c **** 	Printf("\r\n   AutoDetect [0,1] 	; PC Automode OFF/ON");
 1111              		.loc 1 609 2 view .LVU212
 1112 004c 1948     		ldr	r0, .L77+44
 1113 004e FFF7FEFF 		bl	Printf
 1114              	.LVL75:
 610:VS4210/monitor.c **** 	Printf("\r\n   PCAuto		    	; RUN PC Auto Adjust");
 1115              		.loc 1 610 2 view .LVU213
 1116 0052 1948     		ldr	r0, .L77+48
 1117 0054 FFF7FEFF 		bl	Printf
 1118              	.LVL76:
 611:VS4210/monitor.c **** 	Printf("\r\n   Debug [0..255]   	; Debuging display level");
 1119              		.loc 1 611 2 view .LVU214
 1120 0058 1848     		ldr	r0, .L77+52
 1121 005a FFF7FEFF 		bl	Printf
 1122              	.LVL77:
 612:VS4210/monitor.c **** 	Printf("\r\n   Echo On/Off      	; Terminal Echoing On/Off");
 1123              		.loc 1 612 2 view .LVU215
 1124 005e 1848     		ldr	r0, .L77+56
 1125 0060 FFF7FEFF 		bl	Printf
 1126              	.LVL78:
 613:VS4210/monitor.c **** 	Printf("\r\n   Delta            	; Init DeltaRGB Panel");
 1127              		.loc 1 613 2 view .LVU216
 1128 0064 1748     		ldr	r0, .L77+60
 1129 0066 FFF7FEFF 		bl	Printf
 1130              	.LVL79:
 614:VS4210/monitor.c **** 	Printf("\r\n   Delta w ii dh dl; SPI Write to DeltaRGB Panel");
 1131              		.loc 1 614 2 view .LVU217
 1132 006a 1748     		ldr	r0, .L77+64
 1133 006c FFF7FEFF 		bl	Printf
 1134              	.LVL80:
 615:VS4210/monitor.c **** 	Printf("\r\n");
 1135              		.loc 1 615 2 view .LVU218
 1136 0070 164D     		ldr	r5, .L77+68
 1137 0072 2846     		mov	r0, r5
 1138 0074 FFF7FEFF 		bl	Printf
 1139              	.LVL81:
 616:VS4210/monitor.c **** 	Printf("\r\n=======================================================");
 1140              		.loc 1 616 2 view .LVU219
 1141 0078 2046     		mov	r0, r4
 1142 007a FFF7FEFF 		bl	Printf
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 34


 1143              	.LVL82:
 617:VS4210/monitor.c **** 	Printf("\r\n");
 1144              		.loc 1 617 2 view .LVU220
 1145 007e 2846     		mov	r0, r5
 1146 0080 FFF7FEFF 		bl	Printf
 1147              	.LVL83:
 618:VS4210/monitor.c **** }
 1148              		.loc 1 618 1 is_stmt 0 view .LVU221
 1149 0084 38BD     		pop	{r3, r4, r5, pc}
 1150              	.L78:
 1151 0086 00BF     		.align	2
 1152              	.L77:
 1153 0088 00000000 		.word	.LC8
 1154 008c 3C000000 		.word	.LC9
 1155 0090 70000000 		.word	.LC10
 1156 0094 9C000000 		.word	.LC11
 1157 0098 C8000000 		.word	.LC12
 1158 009c F4000000 		.word	.LC13
 1159 00a0 20010000 		.word	.LC14
 1160 00a4 40010000 		.word	.LC15
 1161 00a8 6C010000 		.word	.LC16
 1162 00ac 94010000 		.word	.LC17
 1163 00b0 BC010000 		.word	.LC18
 1164 00b4 F4010000 		.word	.LC19
 1165 00b8 20020000 		.word	.LC20
 1166 00bc 48020000 		.word	.LC21
 1167 00c0 78020000 		.word	.LC22
 1168 00c4 AC020000 		.word	.LC23
 1169 00c8 DC020000 		.word	.LC24
 1170 00cc 10030000 		.word	.LC25
 1171              		.cfi_endproc
 1172              	.LFE87:
 1174              		.section	.text.MonGetCommand,"ax",%progbits
 1175              		.align	1
 1176              		.global	MonGetCommand
 1177              		.syntax unified
 1178              		.thumb
 1179              		.thumb_func
 1180              		.fpu softvfp
 1182              	MonGetCommand:
 1183              	.LFB88:
 619:VS4210/monitor.c **** 
 620:VS4210/monitor.c **** //=============================================================================
 621:VS4210/monitor.c **** //
 622:VS4210/monitor.c **** //=============================================================================
 623:VS4210/monitor.c **** BYTE MonGetCommand(void)
 624:VS4210/monitor.c **** {
 1184              		.loc 1 624 1 is_stmt 1 view -0
 1185              		.cfi_startproc
 1186              		@ args = 0, pretend = 0, frame = 0
 1187              		@ frame_needed = 0, uses_anonymous_args = 0
 1188 0000 38B5     		push	{r3, r4, r5, lr}
 1189              	.LCFI9:
 1190              		.cfi_def_cfa_offset 16
 1191              		.cfi_offset 3, -16
 1192              		.cfi_offset 4, -12
 1193              		.cfi_offset 5, -8
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 35


 1194              		.cfi_offset 14, -4
 625:VS4210/monitor.c **** 	static BYTE comment = 0;
 1195              		.loc 1 625 2 view .LVU223
 626:VS4210/monitor.c **** 	static BYTE incnt = 0, last_argc = 0;
 1196              		.loc 1 626 2 view .LVU224
 627:VS4210/monitor.c **** 	BYTE i, ch;
 1197              		.loc 1 627 2 view .LVU225
 628:VS4210/monitor.c **** 	BYTE ret = 0;
 1198              		.loc 1 628 2 view .LVU226
 1199              	.LVL84:
 629:VS4210/monitor.c **** 
 630:VS4210/monitor.c **** 	if (!RS_ready())
 1200              		.loc 1 630 2 view .LVU227
 1201              		.loc 1 630 7 is_stmt 0 view .LVU228
 1202 0002 FFF7FEFF 		bl	RS_ready
 1203              	.LVL85:
 1204              		.loc 1 630 5 view .LVU229
 1205 0006 0446     		mov	r4, r0
 1206 0008 08B9     		cbnz	r0, .L113
 1207              	.LVL86:
 1208              	.L80:
 631:VS4210/monitor.c **** 		return 0;
 632:VS4210/monitor.c **** 	//#ifdef HS_DEBUG
 633:VS4210/monitor.c **** 	ch = RS_rx();
 634:VS4210/monitor.c **** 	//#endif
 635:VS4210/monitor.c **** 
 636:VS4210/monitor.c **** #if (_DEBUG_MESSAGE_Monitor == ON)
 637:VS4210/monitor.c **** 	Monitor_flag = _TRUE;
 638:VS4210/monitor.c **** #endif
 639:VS4210/monitor.c **** 	MCUTimerReactiveTimerEvent(SEC(30), _USER_TIMER_EVENT_Monitor_ON);
 640:VS4210/monitor.c **** 
 641:VS4210/monitor.c **** 	//----- if comment, echo back and ignore -----
 642:VS4210/monitor.c **** 	if (comment)
 643:VS4210/monitor.c **** 	{
 644:VS4210/monitor.c **** 		if (ch == '\r' || ch == 0x1b)
 645:VS4210/monitor.c **** 			comment = 0;
 646:VS4210/monitor.c **** 		else
 647:VS4210/monitor.c **** 		{
 648:VS4210/monitor.c **** 			Mon_tx(ch);
 649:VS4210/monitor.c **** 			return 0;
 650:VS4210/monitor.c **** 		}
 651:VS4210/monitor.c **** 	}
 652:VS4210/monitor.c **** 	else if (ch == ';')
 653:VS4210/monitor.c **** 	{
 654:VS4210/monitor.c **** 		comment = 1;
 655:VS4210/monitor.c **** 		Mon_tx(ch);
 656:VS4210/monitor.c **** 		return 0;
 657:VS4210/monitor.c **** 	}
 658:VS4210/monitor.c **** 
 659:VS4210/monitor.c **** 	//=====================================
 660:VS4210/monitor.c **** 	switch (ch)
 661:VS4210/monitor.c **** 	{
 662:VS4210/monitor.c **** 
 663:VS4210/monitor.c **** 	case 0x1b:
 664:VS4210/monitor.c **** 		argc = 0;
 665:VS4210/monitor.c **** 		incnt = 0;
 666:VS4210/monitor.c **** 		comment = 0;
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 36


 667:VS4210/monitor.c **** 		Prompt();
 668:VS4210/monitor.c **** 		return 0;
 669:VS4210/monitor.c **** 
 670:VS4210/monitor.c **** 	//--- end of string
 671:VS4210/monitor.c **** 	case '\r':
 672:VS4210/monitor.c **** 
 673:VS4210/monitor.c **** 		if (incnt == 0)
 674:VS4210/monitor.c **** 		{
 675:VS4210/monitor.c **** 			Prompt();
 676:VS4210/monitor.c **** 			break;
 677:VS4210/monitor.c **** 		}
 678:VS4210/monitor.c **** 
 679:VS4210/monitor.c **** 		monstr[incnt++] = '\0';
 680:VS4210/monitor.c **** 		argc = 0;
 681:VS4210/monitor.c **** 
 682:VS4210/monitor.c **** 		for (i = 0; i < incnt; i++)
 683:VS4210/monitor.c **** 			if (monstr[i] != ' ')
 684:VS4210/monitor.c **** 				break;
 685:VS4210/monitor.c **** 
 686:VS4210/monitor.c **** 		if (!monstr[i])
 687:VS4210/monitor.c **** 		{
 688:VS4210/monitor.c **** 			incnt = 0;
 689:VS4210/monitor.c **** 			comment = 0;
 690:VS4210/monitor.c **** 			Prompt();
 691:VS4210/monitor.c **** 			return 0;
 692:VS4210/monitor.c **** 		}
 693:VS4210/monitor.c **** 		argv[0] = &monstr[i];
 694:VS4210/monitor.c **** 		for (; i < incnt; i++)
 695:VS4210/monitor.c **** 		{
 696:VS4210/monitor.c **** 			if (monstr[i] == ' ' || monstr[i] == '\0')
 697:VS4210/monitor.c **** 			{
 698:VS4210/monitor.c **** 				monstr[i] = '\0';
 699:VS4210/monitor.c **** 				// Printf("(%s) ",  argv[argc]);
 700:VS4210/monitor.c **** 				i++;
 701:VS4210/monitor.c **** 				while (monstr[i] == ' ')
 702:VS4210/monitor.c **** 					i++;
 703:VS4210/monitor.c **** 				argc++;
 704:VS4210/monitor.c **** 				if (monstr[i])
 705:VS4210/monitor.c **** 				{
 706:VS4210/monitor.c **** 					argv[argc] = &monstr[i];
 707:VS4210/monitor.c **** 				}
 708:VS4210/monitor.c **** 			}
 709:VS4210/monitor.c **** 		}
 710:VS4210/monitor.c **** 
 711:VS4210/monitor.c **** 		ret = 1;
 712:VS4210/monitor.c **** 		last_argc = argc;
 713:VS4210/monitor.c **** 		incnt = 0;
 714:VS4210/monitor.c **** 
 715:VS4210/monitor.c **** 		break;
 716:VS4210/monitor.c **** 
 717:VS4210/monitor.c **** 	//--- repeat command
 718:VS4210/monitor.c **** 	case '/':
 719:VS4210/monitor.c **** 		argc = last_argc;
 720:VS4210/monitor.c **** 		ret = 1;
 721:VS4210/monitor.c **** 		break;
 722:VS4210/monitor.c **** 
 723:VS4210/monitor.c **** 	//--- back space
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 37


 724:VS4210/monitor.c **** 	case 0x08:
 725:VS4210/monitor.c **** 		if (incnt)
 726:VS4210/monitor.c **** 		{
 727:VS4210/monitor.c **** 			incnt--;
 728:VS4210/monitor.c **** 			Mon_tx(ch);
 729:VS4210/monitor.c **** 			Mon_tx(' ');
 730:VS4210/monitor.c **** 			Mon_tx(ch);
 731:VS4210/monitor.c **** 		}
 732:VS4210/monitor.c **** 		break;
 733:VS4210/monitor.c **** 
 734:VS4210/monitor.c **** 	//--- decreamental write
 735:VS4210/monitor.c **** 	case ',':
 736:VS4210/monitor.c **** 		if (incnt)
 737:VS4210/monitor.c **** 		{
 738:VS4210/monitor.c **** 			Mon_tx(ch);
 739:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 740:VS4210/monitor.c **** 		}
 741:VS4210/monitor.c **** 		else
 742:VS4210/monitor.c **** 			MonIncDecI2C(0);
 743:VS4210/monitor.c **** 		break;
 744:VS4210/monitor.c **** 
 745:VS4210/monitor.c **** 	case '<':
 746:VS4210/monitor.c **** 		if (incnt)
 747:VS4210/monitor.c **** 		{
 748:VS4210/monitor.c **** 			Mon_tx(ch);
 749:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 750:VS4210/monitor.c **** 		}
 751:VS4210/monitor.c **** 		else
 752:VS4210/monitor.c **** 			MonIncDecI2C(10);
 753:VS4210/monitor.c **** 		break;
 754:VS4210/monitor.c **** 	//--- increamental write
 755:VS4210/monitor.c **** 	case '.':
 756:VS4210/monitor.c **** 		if (incnt)
 757:VS4210/monitor.c **** 		{
 758:VS4210/monitor.c **** 			Mon_tx(ch);
 759:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 760:VS4210/monitor.c **** 		}
 761:VS4210/monitor.c **** 		else
 762:VS4210/monitor.c **** 			MonIncDecI2C(1);
 763:VS4210/monitor.c **** 		break;
 764:VS4210/monitor.c **** 
 765:VS4210/monitor.c **** 	case '>':
 766:VS4210/monitor.c **** 		if (incnt)
 767:VS4210/monitor.c **** 		{
 768:VS4210/monitor.c **** 			Mon_tx(ch);
 769:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 770:VS4210/monitor.c **** 		}
 771:VS4210/monitor.c **** 		else
 772:VS4210/monitor.c **** 			MonIncDecI2C(11);
 773:VS4210/monitor.c **** 		break;
 774:VS4210/monitor.c **** 
 775:VS4210/monitor.c **** 	default:
 776:VS4210/monitor.c **** 		Mon_tx(ch);
 777:VS4210/monitor.c **** 		monstr[incnt++] = ch;
 778:VS4210/monitor.c **** 		break;
 779:VS4210/monitor.c **** 	}
 780:VS4210/monitor.c **** 
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 38


 781:VS4210/monitor.c **** 	if (ret)
 782:VS4210/monitor.c **** 	{
 783:VS4210/monitor.c **** 		comment = 0;
 784:VS4210/monitor.c **** 		last_argc = argc;
 785:VS4210/monitor.c **** 		return ret;
 786:VS4210/monitor.c **** 	}
 787:VS4210/monitor.c **** 	else
 788:VS4210/monitor.c **** 	{
 789:VS4210/monitor.c **** 		return ret;
 790:VS4210/monitor.c **** 	}
 791:VS4210/monitor.c **** }
 1209              		.loc 1 791 1 view .LVU230
 1210 000a 2046     		mov	r0, r4
 1211 000c 38BD     		pop	{r3, r4, r5, pc}
 1212              	.LVL87:
 1213              	.L113:
 633:VS4210/monitor.c **** 	//#endif
 1214              		.loc 1 633 2 is_stmt 1 view .LVU231
 633:VS4210/monitor.c **** 	//#endif
 1215              		.loc 1 633 7 is_stmt 0 view .LVU232
 1216 000e FFF7FEFF 		bl	RS_rx
 1217              	.LVL88:
 1218 0012 0546     		mov	r5, r0
 1219              	.LVL89:
 637:VS4210/monitor.c **** #endif
 1220              		.loc 1 637 2 is_stmt 1 view .LVU233
 637:VS4210/monitor.c **** #endif
 1221              		.loc 1 637 15 is_stmt 0 view .LVU234
 1222 0014 914B     		ldr	r3, .L119
 1223 0016 0122     		movs	r2, #1
 1224 0018 1A70     		strb	r2, [r3]
 639:VS4210/monitor.c **** 
 1225              		.loc 1 639 2 is_stmt 1 view .LVU235
 1226 001a 2021     		movs	r1, #32
 1227 001c 47F23050 		movw	r0, #30000
 1228 0020 FFF7FEFF 		bl	MCUTimerReactiveTimerEvent
 1229              	.LVL90:
 642:VS4210/monitor.c **** 	{
 1230              		.loc 1 642 2 view .LVU236
 642:VS4210/monitor.c **** 	{
 1231              		.loc 1 642 6 is_stmt 0 view .LVU237
 1232 0024 8E4B     		ldr	r3, .L119+4
 1233 0026 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 642:VS4210/monitor.c **** 	{
 1234              		.loc 1 642 5 view .LVU238
 1235 0028 64B1     		cbz	r4, .L81
 644:VS4210/monitor.c **** 			comment = 0;
 1236              		.loc 1 644 3 is_stmt 1 view .LVU239
 644:VS4210/monitor.c **** 			comment = 0;
 1237              		.loc 1 644 6 is_stmt 0 view .LVU240
 1238 002a 0D2D     		cmp	r5, #13
 1239 002c 01D0     		beq	.L82
 644:VS4210/monitor.c **** 			comment = 0;
 1240              		.loc 1 644 18 discriminator 1 view .LVU241
 1241 002e 1B2D     		cmp	r5, #27
 1242 0030 03D1     		bne	.L83
 1243              	.L82:
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 39


 645:VS4210/monitor.c **** 		else
 1244              		.loc 1 645 4 is_stmt 1 view .LVU242
 645:VS4210/monitor.c **** 		else
 1245              		.loc 1 645 12 is_stmt 0 view .LVU243
 1246 0032 8B4B     		ldr	r3, .L119+4
 1247 0034 0022     		movs	r2, #0
 1248 0036 1A70     		strb	r2, [r3]
 1249 0038 06E0     		b	.L84
 1250              	.L83:
 648:VS4210/monitor.c **** 			return 0;
 1251              		.loc 1 648 4 is_stmt 1 view .LVU244
 1252 003a 2846     		mov	r0, r5
 1253 003c FFF7FEFF 		bl	Mon_tx
 1254              	.LVL91:
 649:VS4210/monitor.c **** 		}
 1255              		.loc 1 649 4 view .LVU245
 649:VS4210/monitor.c **** 		}
 1256              		.loc 1 649 11 is_stmt 0 view .LVU246
 1257 0040 0024     		movs	r4, #0
 1258 0042 E2E7     		b	.L80
 1259              	.L81:
 652:VS4210/monitor.c **** 	{
 1260              		.loc 1 652 7 is_stmt 1 view .LVU247
 652:VS4210/monitor.c **** 	{
 1261              		.loc 1 652 10 is_stmt 0 view .LVU248
 1262 0044 3B2D     		cmp	r5, #59
 1263 0046 3DD0     		beq	.L114
 1264              	.L84:
 660:VS4210/monitor.c **** 	{
 1265              		.loc 1 660 2 is_stmt 1 view .LVU249
 1266 0048 A5F10803 		sub	r3, r5, #8
 1267 004c 362B     		cmp	r3, #54
 1268 004e 00F2F980 		bhi	.L85
 1269 0052 DFE813F0 		tbh	[pc, r3, lsl #1]
 1270              	.L87:
 1271 0056 A200     		.2byte	(.L94-.L87)/2
 1272 0058 F700     		.2byte	(.L85-.L87)/2
 1273 005a F700     		.2byte	(.L85-.L87)/2
 1274 005c F700     		.2byte	(.L85-.L87)/2
 1275 005e F700     		.2byte	(.L85-.L87)/2
 1276 0060 4800     		.2byte	(.L93-.L87)/2
 1277 0062 F700     		.2byte	(.L85-.L87)/2
 1278 0064 F700     		.2byte	(.L85-.L87)/2
 1279 0066 F700     		.2byte	(.L85-.L87)/2
 1280 0068 F700     		.2byte	(.L85-.L87)/2
 1281 006a F700     		.2byte	(.L85-.L87)/2
 1282 006c F700     		.2byte	(.L85-.L87)/2
 1283 006e F700     		.2byte	(.L85-.L87)/2
 1284 0070 F700     		.2byte	(.L85-.L87)/2
 1285 0072 F700     		.2byte	(.L85-.L87)/2
 1286 0074 F700     		.2byte	(.L85-.L87)/2
 1287 0076 F700     		.2byte	(.L85-.L87)/2
 1288 0078 F700     		.2byte	(.L85-.L87)/2
 1289 007a F700     		.2byte	(.L85-.L87)/2
 1290 007c 3E00     		.2byte	(.L92-.L87)/2
 1291 007e F700     		.2byte	(.L85-.L87)/2
 1292 0080 F700     		.2byte	(.L85-.L87)/2
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 40


 1293 0082 F700     		.2byte	(.L85-.L87)/2
 1294 0084 F700     		.2byte	(.L85-.L87)/2
 1295 0086 F700     		.2byte	(.L85-.L87)/2
 1296 0088 F700     		.2byte	(.L85-.L87)/2
 1297 008a F700     		.2byte	(.L85-.L87)/2
 1298 008c F700     		.2byte	(.L85-.L87)/2
 1299 008e F700     		.2byte	(.L85-.L87)/2
 1300 0090 F700     		.2byte	(.L85-.L87)/2
 1301 0092 F700     		.2byte	(.L85-.L87)/2
 1302 0094 F700     		.2byte	(.L85-.L87)/2
 1303 0096 F700     		.2byte	(.L85-.L87)/2
 1304 0098 F700     		.2byte	(.L85-.L87)/2
 1305 009a F700     		.2byte	(.L85-.L87)/2
 1306 009c F700     		.2byte	(.L85-.L87)/2
 1307 009e B300     		.2byte	(.L91-.L87)/2
 1308 00a0 F700     		.2byte	(.L85-.L87)/2
 1309 00a2 D500     		.2byte	(.L90-.L87)/2
 1310 00a4 9500     		.2byte	(.L89-.L87)/2
 1311 00a6 F700     		.2byte	(.L85-.L87)/2
 1312 00a8 F700     		.2byte	(.L85-.L87)/2
 1313 00aa F700     		.2byte	(.L85-.L87)/2
 1314 00ac F700     		.2byte	(.L85-.L87)/2
 1315 00ae F700     		.2byte	(.L85-.L87)/2
 1316 00b0 F700     		.2byte	(.L85-.L87)/2
 1317 00b2 F700     		.2byte	(.L85-.L87)/2
 1318 00b4 F700     		.2byte	(.L85-.L87)/2
 1319 00b6 F700     		.2byte	(.L85-.L87)/2
 1320 00b8 F700     		.2byte	(.L85-.L87)/2
 1321 00ba F700     		.2byte	(.L85-.L87)/2
 1322 00bc F700     		.2byte	(.L85-.L87)/2
 1323 00be C400     		.2byte	(.L88-.L87)/2
 1324 00c0 F700     		.2byte	(.L85-.L87)/2
 1325 00c2 E600     		.2byte	(.L86-.L87)/2
 1326              		.p2align 1
 1327              	.L114:
 654:VS4210/monitor.c **** 		Mon_tx(ch);
 1328              		.loc 1 654 3 view .LVU250
 654:VS4210/monitor.c **** 		Mon_tx(ch);
 1329              		.loc 1 654 11 is_stmt 0 view .LVU251
 1330 00c4 664B     		ldr	r3, .L119+4
 1331 00c6 0122     		movs	r2, #1
 1332 00c8 1A70     		strb	r2, [r3]
 655:VS4210/monitor.c **** 		return 0;
 1333              		.loc 1 655 3 is_stmt 1 view .LVU252
 1334 00ca 2846     		mov	r0, r5
 1335 00cc FFF7FEFF 		bl	Mon_tx
 1336              	.LVL92:
 656:VS4210/monitor.c **** 	}
 1337              		.loc 1 656 3 view .LVU253
 656:VS4210/monitor.c **** 	}
 1338              		.loc 1 656 10 is_stmt 0 view .LVU254
 1339 00d0 9BE7     		b	.L80
 1340              	.L92:
 664:VS4210/monitor.c **** 		incnt = 0;
 1341              		.loc 1 664 3 is_stmt 1 view .LVU255
 664:VS4210/monitor.c **** 		incnt = 0;
 1342              		.loc 1 664 8 is_stmt 0 view .LVU256
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 41


 1343 00d2 0024     		movs	r4, #0
 1344 00d4 634B     		ldr	r3, .L119+8
 1345 00d6 1C70     		strb	r4, [r3]
 665:VS4210/monitor.c **** 		comment = 0;
 1346              		.loc 1 665 3 is_stmt 1 view .LVU257
 665:VS4210/monitor.c **** 		comment = 0;
 1347              		.loc 1 665 9 is_stmt 0 view .LVU258
 1348 00d8 634B     		ldr	r3, .L119+12
 1349 00da 1C70     		strb	r4, [r3]
 666:VS4210/monitor.c **** 		Prompt();
 1350              		.loc 1 666 3 is_stmt 1 view .LVU259
 666:VS4210/monitor.c **** 		Prompt();
 1351              		.loc 1 666 11 is_stmt 0 view .LVU260
 1352 00dc 604B     		ldr	r3, .L119+4
 1353 00de 1C70     		strb	r4, [r3]
 667:VS4210/monitor.c **** 		return 0;
 1354              		.loc 1 667 3 is_stmt 1 view .LVU261
 1355 00e0 FFF7FEFF 		bl	Prompt
 1356              	.LVL93:
 668:VS4210/monitor.c **** 
 1357              		.loc 1 668 3 view .LVU262
 668:VS4210/monitor.c **** 
 1358              		.loc 1 668 10 is_stmt 0 view .LVU263
 1359 00e4 91E7     		b	.L80
 1360              	.L93:
 673:VS4210/monitor.c **** 		{
 1361              		.loc 1 673 3 is_stmt 1 view .LVU264
 673:VS4210/monitor.c **** 		{
 1362              		.loc 1 673 13 is_stmt 0 view .LVU265
 1363 00e6 604B     		ldr	r3, .L119+12
 1364 00e8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 673:VS4210/monitor.c **** 		{
 1365              		.loc 1 673 6 view .LVU266
 1366 00ea 3AB1     		cbz	r2, .L115
 679:VS4210/monitor.c **** 		argc = 0;
 1367              		.loc 1 679 3 is_stmt 1 view .LVU267
 679:VS4210/monitor.c **** 		argc = 0;
 1368              		.loc 1 679 15 is_stmt 0 view .LVU268
 1369 00ec 501C     		adds	r0, r2, #1
 1370 00ee C0B2     		uxtb	r0, r0
 679:VS4210/monitor.c **** 		argc = 0;
 1371              		.loc 1 679 19 view .LVU269
 1372 00f0 0023     		movs	r3, #0
 1373 00f2 5E49     		ldr	r1, .L119+16
 1374 00f4 8B54     		strb	r3, [r1, r2]
 680:VS4210/monitor.c **** 
 1375              		.loc 1 680 3 is_stmt 1 view .LVU270
 680:VS4210/monitor.c **** 
 1376              		.loc 1 680 8 is_stmt 0 view .LVU271
 1377 00f6 5B4A     		ldr	r2, .L119+8
 1378 00f8 1370     		strb	r3, [r2]
 682:VS4210/monitor.c **** 			if (monstr[i] != ' ')
 1379              		.loc 1 682 3 is_stmt 1 view .LVU272
 1380              	.LVL94:
 682:VS4210/monitor.c **** 			if (monstr[i] != ' ')
 1381              		.loc 1 682 3 is_stmt 0 view .LVU273
 1382 00fa 04E0     		b	.L97
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 42


 1383              	.LVL95:
 1384              	.L115:
 675:VS4210/monitor.c **** 			break;
 1385              		.loc 1 675 4 is_stmt 1 view .LVU274
 1386 00fc FFF7FEFF 		bl	Prompt
 1387              	.LVL96:
 676:VS4210/monitor.c **** 		}
 1388              		.loc 1 676 4 view .LVU275
 781:VS4210/monitor.c **** 	{
 1389              		.loc 1 781 2 view .LVU276
 1390 0100 A9E0     		b	.L96
 1391              	.LVL97:
 1392              	.L116:
 682:VS4210/monitor.c **** 			if (monstr[i] != ' ')
 1393              		.loc 1 682 26 discriminator 2 view .LVU277
 682:VS4210/monitor.c **** 			if (monstr[i] != ' ')
 1394              		.loc 1 682 27 is_stmt 0 discriminator 2 view .LVU278
 1395 0102 0133     		adds	r3, r3, #1
 1396              	.LVL98:
 682:VS4210/monitor.c **** 			if (monstr[i] != ' ')
 1397              		.loc 1 682 27 discriminator 2 view .LVU279
 1398 0104 DBB2     		uxtb	r3, r3
 1399              	.LVL99:
 1400              	.L97:
 682:VS4210/monitor.c **** 			if (monstr[i] != ' ')
 1401              		.loc 1 682 15 is_stmt 1 discriminator 1 view .LVU280
 682:VS4210/monitor.c **** 			if (monstr[i] != ' ')
 1402              		.loc 1 682 3 is_stmt 0 discriminator 1 view .LVU281
 1403 0106 9842     		cmp	r0, r3
 1404 0108 03D9     		bls	.L98
 683:VS4210/monitor.c **** 				break;
 1405              		.loc 1 683 4 is_stmt 1 view .LVU282
 683:VS4210/monitor.c **** 				break;
 1406              		.loc 1 683 14 is_stmt 0 view .LVU283
 1407 010a 584A     		ldr	r2, .L119+16
 1408 010c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 683:VS4210/monitor.c **** 				break;
 1409              		.loc 1 683 7 view .LVU284
 1410 010e 202A     		cmp	r2, #32
 1411 0110 F7D0     		beq	.L116
 1412              	.L98:
 686:VS4210/monitor.c **** 		{
 1413              		.loc 1 686 3 is_stmt 1 view .LVU285
 686:VS4210/monitor.c **** 		{
 1414              		.loc 1 686 14 is_stmt 0 view .LVU286
 1415 0112 564A     		ldr	r2, .L119+16
 1416 0114 D45C     		ldrb	r4, [r2, r3]	@ zero_extendqisi2
 686:VS4210/monitor.c **** 		{
 1417              		.loc 1 686 6 view .LVU287
 1418 0116 24B1     		cbz	r4, .L117
 693:VS4210/monitor.c **** 		for (; i < incnt; i++)
 1419              		.loc 1 693 3 is_stmt 1 view .LVU288
 693:VS4210/monitor.c **** 		for (; i < incnt; i++)
 1420              		.loc 1 693 13 is_stmt 0 view .LVU289
 1421 0118 544A     		ldr	r2, .L119+16
 1422 011a 1A44     		add	r2, r2, r3
 693:VS4210/monitor.c **** 		for (; i < incnt; i++)
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 43


 1423              		.loc 1 693 11 view .LVU290
 1424 011c 5449     		ldr	r1, .L119+20
 1425 011e 0A60     		str	r2, [r1]
 694:VS4210/monitor.c **** 		{
 1426              		.loc 1 694 3 is_stmt 1 view .LVU291
 1427 0120 1BE0     		b	.L101
 1428              	.L117:
 688:VS4210/monitor.c **** 			comment = 0;
 1429              		.loc 1 688 4 view .LVU292
 688:VS4210/monitor.c **** 			comment = 0;
 1430              		.loc 1 688 10 is_stmt 0 view .LVU293
 1431 0122 0023     		movs	r3, #0
 1432              	.LVL100:
 688:VS4210/monitor.c **** 			comment = 0;
 1433              		.loc 1 688 10 view .LVU294
 1434 0124 504A     		ldr	r2, .L119+12
 1435 0126 1370     		strb	r3, [r2]
 689:VS4210/monitor.c **** 			Prompt();
 1436              		.loc 1 689 4 is_stmt 1 view .LVU295
 689:VS4210/monitor.c **** 			Prompt();
 1437              		.loc 1 689 12 is_stmt 0 view .LVU296
 1438 0128 4D4A     		ldr	r2, .L119+4
 1439 012a 1370     		strb	r3, [r2]
 690:VS4210/monitor.c **** 			return 0;
 1440              		.loc 1 690 4 is_stmt 1 view .LVU297
 1441 012c FFF7FEFF 		bl	Prompt
 1442              	.LVL101:
 691:VS4210/monitor.c **** 		}
 1443              		.loc 1 691 4 view .LVU298
 691:VS4210/monitor.c **** 		}
 1444              		.loc 1 691 11 is_stmt 0 view .LVU299
 1445 0130 6BE7     		b	.L80
 1446              	.LVL102:
 1447              	.L105:
 702:VS4210/monitor.c **** 				argc++;
 1448              		.loc 1 702 6 is_stmt 1 view .LVU300
 702:VS4210/monitor.c **** 				argc++;
 1449              		.loc 1 702 7 is_stmt 0 view .LVU301
 1450 0132 0133     		adds	r3, r3, #1
 1451              	.LVL103:
 702:VS4210/monitor.c **** 				argc++;
 1452              		.loc 1 702 7 view .LVU302
 1453 0134 DBB2     		uxtb	r3, r3
 1454              	.LVL104:
 1455              	.L104:
 701:VS4210/monitor.c **** 					i++;
 1456              		.loc 1 701 11 is_stmt 1 view .LVU303
 701:VS4210/monitor.c **** 					i++;
 1457              		.loc 1 701 18 is_stmt 0 view .LVU304
 1458 0136 1946     		mov	r1, r3
 1459 0138 4C4A     		ldr	r2, .L119+16
 1460 013a D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 701:VS4210/monitor.c **** 					i++;
 1461              		.loc 1 701 11 view .LVU305
 1462 013c 202A     		cmp	r2, #32
 1463 013e F8D0     		beq	.L105
 703:VS4210/monitor.c **** 				if (monstr[i])
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 44


 1464              		.loc 1 703 5 is_stmt 1 view .LVU306
 703:VS4210/monitor.c **** 				if (monstr[i])
 1465              		.loc 1 703 9 is_stmt 0 view .LVU307
 1466 0140 484D     		ldr	r5, .L119+8
 1467 0142 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
 1468 0144 0134     		adds	r4, r4, #1
 1469 0146 E4B2     		uxtb	r4, r4
 1470 0148 2C70     		strb	r4, [r5]
 704:VS4210/monitor.c **** 				{
 1471              		.loc 1 704 5 is_stmt 1 view .LVU308
 704:VS4210/monitor.c **** 				{
 1472              		.loc 1 704 8 is_stmt 0 view .LVU309
 1473 014a 22B1     		cbz	r2, .L103
 706:VS4210/monitor.c **** 				}
 1474              		.loc 1 706 6 is_stmt 1 view .LVU310
 706:VS4210/monitor.c **** 				}
 1475              		.loc 1 706 19 is_stmt 0 view .LVU311
 1476 014c 474A     		ldr	r2, .L119+16
 1477 014e 1144     		add	r1, r1, r2
 706:VS4210/monitor.c **** 				}
 1478              		.loc 1 706 17 view .LVU312
 1479 0150 474A     		ldr	r2, .L119+20
 1480 0152 42F82410 		str	r1, [r2, r4, lsl #2]
 1481              	.L103:
 694:VS4210/monitor.c **** 		{
 1482              		.loc 1 694 21 is_stmt 1 view .LVU313
 694:VS4210/monitor.c **** 		{
 1483              		.loc 1 694 22 is_stmt 0 view .LVU314
 1484 0156 0133     		adds	r3, r3, #1
 1485              	.LVL105:
 694:VS4210/monitor.c **** 		{
 1486              		.loc 1 694 22 view .LVU315
 1487 0158 DBB2     		uxtb	r3, r3
 1488              	.LVL106:
 1489              	.L101:
 694:VS4210/monitor.c **** 		{
 1490              		.loc 1 694 10 is_stmt 1 discriminator 1 view .LVU316
 694:VS4210/monitor.c **** 		{
 1491              		.loc 1 694 3 is_stmt 0 discriminator 1 view .LVU317
 1492 015a 9842     		cmp	r0, r3
 1493 015c 0CD9     		bls	.L118
 696:VS4210/monitor.c **** 			{
 1494              		.loc 1 696 4 is_stmt 1 view .LVU318
 696:VS4210/monitor.c **** 			{
 1495              		.loc 1 696 14 is_stmt 0 view .LVU319
 1496 015e 1946     		mov	r1, r3
 1497 0160 424A     		ldr	r2, .L119+16
 1498 0162 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 696:VS4210/monitor.c **** 			{
 1499              		.loc 1 696 7 view .LVU320
 1500 0164 202A     		cmp	r2, #32
 1501 0166 01D0     		beq	.L102
 696:VS4210/monitor.c **** 			{
 1502              		.loc 1 696 25 discriminator 1 view .LVU321
 1503 0168 002A     		cmp	r2, #0
 1504 016a F4D1     		bne	.L103
 1505              	.L102:
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 45


 698:VS4210/monitor.c **** 				// Printf("(%s) ",  argv[argc]);
 1506              		.loc 1 698 5 is_stmt 1 view .LVU322
 698:VS4210/monitor.c **** 				// Printf("(%s) ",  argv[argc]);
 1507              		.loc 1 698 15 is_stmt 0 view .LVU323
 1508 016c 3F4A     		ldr	r2, .L119+16
 1509 016e 0024     		movs	r4, #0
 1510 0170 5454     		strb	r4, [r2, r1]
 700:VS4210/monitor.c **** 				while (monstr[i] == ' ')
 1511              		.loc 1 700 5 is_stmt 1 view .LVU324
 700:VS4210/monitor.c **** 				while (monstr[i] == ' ')
 1512              		.loc 1 700 6 is_stmt 0 view .LVU325
 1513 0172 0133     		adds	r3, r3, #1
 1514              	.LVL107:
 700:VS4210/monitor.c **** 				while (monstr[i] == ' ')
 1515              		.loc 1 700 6 view .LVU326
 1516 0174 DBB2     		uxtb	r3, r3
 1517              	.LVL108:
 701:VS4210/monitor.c **** 					i++;
 1518              		.loc 1 701 5 is_stmt 1 view .LVU327
 701:VS4210/monitor.c **** 					i++;
 1519              		.loc 1 701 11 is_stmt 0 view .LVU328
 1520 0176 DEE7     		b	.L104
 1521              	.L118:
 711:VS4210/monitor.c **** 		last_argc = argc;
 1522              		.loc 1 711 3 is_stmt 1 view .LVU329
 1523              	.LVL109:
 712:VS4210/monitor.c **** 		incnt = 0;
 1524              		.loc 1 712 3 view .LVU330
 713:VS4210/monitor.c **** 
 1525              		.loc 1 713 3 view .LVU331
 713:VS4210/monitor.c **** 
 1526              		.loc 1 713 9 is_stmt 0 view .LVU332
 1527 0178 3B4B     		ldr	r3, .L119+12
 1528              	.LVL110:
 713:VS4210/monitor.c **** 
 1529              		.loc 1 713 9 view .LVU333
 1530 017a 0022     		movs	r2, #0
 1531 017c 1A70     		strb	r2, [r3]
 715:VS4210/monitor.c **** 
 1532              		.loc 1 715 3 is_stmt 1 view .LVU334
 781:VS4210/monitor.c **** 	{
 1533              		.loc 1 781 2 view .LVU335
 1534 017e 03E0     		b	.L107
 1535              	.LVL111:
 1536              	.L89:
 719:VS4210/monitor.c **** 		ret = 1;
 1537              		.loc 1 719 3 view .LVU336
 719:VS4210/monitor.c **** 		ret = 1;
 1538              		.loc 1 719 8 is_stmt 0 view .LVU337
 1539 0180 3C4B     		ldr	r3, .L119+24
 1540 0182 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1541 0184 374B     		ldr	r3, .L119+8
 1542 0186 1A70     		strb	r2, [r3]
 720:VS4210/monitor.c **** 		break;
 1543              		.loc 1 720 3 is_stmt 1 view .LVU338
 1544              	.LVL112:
 721:VS4210/monitor.c **** 
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 46


 1545              		.loc 1 721 3 view .LVU339
 781:VS4210/monitor.c **** 	{
 1546              		.loc 1 781 2 view .LVU340
 1547              	.L107:
 783:VS4210/monitor.c **** 		last_argc = argc;
 1548              		.loc 1 783 3 view .LVU341
 783:VS4210/monitor.c **** 		last_argc = argc;
 1549              		.loc 1 783 11 is_stmt 0 view .LVU342
 1550 0188 354B     		ldr	r3, .L119+4
 1551 018a 0022     		movs	r2, #0
 1552 018c 1A70     		strb	r2, [r3]
 784:VS4210/monitor.c **** 		return ret;
 1553              		.loc 1 784 3 is_stmt 1 view .LVU343
 784:VS4210/monitor.c **** 		return ret;
 1554              		.loc 1 784 13 is_stmt 0 view .LVU344
 1555 018e 354B     		ldr	r3, .L119+8
 1556 0190 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1557 0192 384B     		ldr	r3, .L119+24
 1558 0194 1A70     		strb	r2, [r3]
 785:VS4210/monitor.c **** 	}
 1559              		.loc 1 785 3 is_stmt 1 view .LVU345
 785:VS4210/monitor.c **** 	}
 1560              		.loc 1 785 10 is_stmt 0 view .LVU346
 1561 0196 0124     		movs	r4, #1
 1562 0198 37E7     		b	.L80
 1563              	.LVL113:
 1564              	.L94:
 725:VS4210/monitor.c **** 		{
 1565              		.loc 1 725 3 is_stmt 1 view .LVU347
 725:VS4210/monitor.c **** 		{
 1566              		.loc 1 725 7 is_stmt 0 view .LVU348
 1567 019a 334B     		ldr	r3, .L119+12
 1568 019c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 725:VS4210/monitor.c **** 		{
 1569              		.loc 1 725 6 view .LVU349
 1570 019e 002B     		cmp	r3, #0
 1571 01a0 59D0     		beq	.L96
 727:VS4210/monitor.c **** 			Mon_tx(ch);
 1572              		.loc 1 727 4 is_stmt 1 view .LVU350
 727:VS4210/monitor.c **** 			Mon_tx(ch);
 1573              		.loc 1 727 9 is_stmt 0 view .LVU351
 1574 01a2 013B     		subs	r3, r3, #1
 1575 01a4 304A     		ldr	r2, .L119+12
 1576 01a6 1370     		strb	r3, [r2]
 728:VS4210/monitor.c **** 			Mon_tx(' ');
 1577              		.loc 1 728 4 is_stmt 1 view .LVU352
 1578 01a8 2846     		mov	r0, r5
 1579 01aa FFF7FEFF 		bl	Mon_tx
 1580              	.LVL114:
 729:VS4210/monitor.c **** 			Mon_tx(ch);
 1581              		.loc 1 729 4 view .LVU353
 1582 01ae 2020     		movs	r0, #32
 1583 01b0 FFF7FEFF 		bl	Mon_tx
 1584              	.LVL115:
 730:VS4210/monitor.c **** 		}
 1585              		.loc 1 730 4 view .LVU354
 1586 01b4 2846     		mov	r0, r5
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 47


 1587 01b6 FFF7FEFF 		bl	Mon_tx
 1588              	.LVL116:
 781:VS4210/monitor.c **** 	{
 1589              		.loc 1 781 2 view .LVU355
 1590 01ba 4CE0     		b	.L96
 1591              	.L91:
 736:VS4210/monitor.c **** 		{
 1592              		.loc 1 736 3 view .LVU356
 736:VS4210/monitor.c **** 		{
 1593              		.loc 1 736 7 is_stmt 0 view .LVU357
 1594 01bc 2A4B     		ldr	r3, .L119+12
 1595 01be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 736:VS4210/monitor.c **** 		{
 1596              		.loc 1 736 6 view .LVU358
 1597 01c0 4BB1     		cbz	r3, .L108
 738:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 1598              		.loc 1 738 4 is_stmt 1 view .LVU359
 1599 01c2 2846     		mov	r0, r5
 1600 01c4 FFF7FEFF 		bl	Mon_tx
 1601              	.LVL117:
 739:VS4210/monitor.c **** 		}
 1602              		.loc 1 739 4 view .LVU360
 739:VS4210/monitor.c **** 		}
 1603              		.loc 1 739 16 is_stmt 0 view .LVU361
 1604 01c8 274A     		ldr	r2, .L119+12
 1605 01ca 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1606 01cc 591C     		adds	r1, r3, #1
 1607 01ce 1170     		strb	r1, [r2]
 739:VS4210/monitor.c **** 		}
 1608              		.loc 1 739 20 view .LVU362
 1609 01d0 264A     		ldr	r2, .L119+16
 1610 01d2 D554     		strb	r5, [r2, r3]
 781:VS4210/monitor.c **** 	{
 1611              		.loc 1 781 2 is_stmt 1 view .LVU363
 1612 01d4 3FE0     		b	.L96
 1613              	.L108:
 742:VS4210/monitor.c **** 		break;
 1614              		.loc 1 742 4 view .LVU364
 1615 01d6 0020     		movs	r0, #0
 1616 01d8 FFF7FEFF 		bl	MonIncDecI2C
 1617              	.LVL118:
 781:VS4210/monitor.c **** 	{
 1618              		.loc 1 781 2 view .LVU365
 1619 01dc 3BE0     		b	.L96
 1620              	.L88:
 746:VS4210/monitor.c **** 		{
 1621              		.loc 1 746 3 view .LVU366
 746:VS4210/monitor.c **** 		{
 1622              		.loc 1 746 7 is_stmt 0 view .LVU367
 1623 01de 224B     		ldr	r3, .L119+12
 1624 01e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 746:VS4210/monitor.c **** 		{
 1625              		.loc 1 746 6 view .LVU368
 1626 01e2 4BB1     		cbz	r3, .L109
 748:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 1627              		.loc 1 748 4 is_stmt 1 view .LVU369
 1628 01e4 2846     		mov	r0, r5
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 48


 1629 01e6 FFF7FEFF 		bl	Mon_tx
 1630              	.LVL119:
 749:VS4210/monitor.c **** 		}
 1631              		.loc 1 749 4 view .LVU370
 749:VS4210/monitor.c **** 		}
 1632              		.loc 1 749 16 is_stmt 0 view .LVU371
 1633 01ea 1F4A     		ldr	r2, .L119+12
 1634 01ec 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1635 01ee 591C     		adds	r1, r3, #1
 1636 01f0 1170     		strb	r1, [r2]
 749:VS4210/monitor.c **** 		}
 1637              		.loc 1 749 20 view .LVU372
 1638 01f2 1E4A     		ldr	r2, .L119+16
 1639 01f4 D554     		strb	r5, [r2, r3]
 781:VS4210/monitor.c **** 	{
 1640              		.loc 1 781 2 is_stmt 1 view .LVU373
 1641 01f6 2EE0     		b	.L96
 1642              	.L109:
 752:VS4210/monitor.c **** 		break;
 1643              		.loc 1 752 4 view .LVU374
 1644 01f8 0A20     		movs	r0, #10
 1645 01fa FFF7FEFF 		bl	MonIncDecI2C
 1646              	.LVL120:
 781:VS4210/monitor.c **** 	{
 1647              		.loc 1 781 2 view .LVU375
 1648 01fe 2AE0     		b	.L96
 1649              	.L90:
 756:VS4210/monitor.c **** 		{
 1650              		.loc 1 756 3 view .LVU376
 756:VS4210/monitor.c **** 		{
 1651              		.loc 1 756 7 is_stmt 0 view .LVU377
 1652 0200 194B     		ldr	r3, .L119+12
 1653 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 756:VS4210/monitor.c **** 		{
 1654              		.loc 1 756 6 view .LVU378
 1655 0204 4BB1     		cbz	r3, .L110
 758:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 1656              		.loc 1 758 4 is_stmt 1 view .LVU379
 1657 0206 2846     		mov	r0, r5
 1658 0208 FFF7FEFF 		bl	Mon_tx
 1659              	.LVL121:
 759:VS4210/monitor.c **** 		}
 1660              		.loc 1 759 4 view .LVU380
 759:VS4210/monitor.c **** 		}
 1661              		.loc 1 759 16 is_stmt 0 view .LVU381
 1662 020c 164A     		ldr	r2, .L119+12
 1663 020e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1664 0210 591C     		adds	r1, r3, #1
 1665 0212 1170     		strb	r1, [r2]
 759:VS4210/monitor.c **** 		}
 1666              		.loc 1 759 20 view .LVU382
 1667 0214 154A     		ldr	r2, .L119+16
 1668 0216 D554     		strb	r5, [r2, r3]
 781:VS4210/monitor.c **** 	{
 1669              		.loc 1 781 2 is_stmt 1 view .LVU383
 1670 0218 1DE0     		b	.L96
 1671              	.L110:
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 49


 762:VS4210/monitor.c **** 		break;
 1672              		.loc 1 762 4 view .LVU384
 1673 021a 0120     		movs	r0, #1
 1674 021c FFF7FEFF 		bl	MonIncDecI2C
 1675              	.LVL122:
 781:VS4210/monitor.c **** 	{
 1676              		.loc 1 781 2 view .LVU385
 1677 0220 19E0     		b	.L96
 1678              	.L86:
 766:VS4210/monitor.c **** 		{
 1679              		.loc 1 766 3 view .LVU386
 766:VS4210/monitor.c **** 		{
 1680              		.loc 1 766 7 is_stmt 0 view .LVU387
 1681 0222 114B     		ldr	r3, .L119+12
 1682 0224 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 766:VS4210/monitor.c **** 		{
 1683              		.loc 1 766 6 view .LVU388
 1684 0226 4BB1     		cbz	r3, .L111
 768:VS4210/monitor.c **** 			monstr[incnt++] = ch;
 1685              		.loc 1 768 4 is_stmt 1 view .LVU389
 1686 0228 2846     		mov	r0, r5
 1687 022a FFF7FEFF 		bl	Mon_tx
 1688              	.LVL123:
 769:VS4210/monitor.c **** 		}
 1689              		.loc 1 769 4 view .LVU390
 769:VS4210/monitor.c **** 		}
 1690              		.loc 1 769 16 is_stmt 0 view .LVU391
 1691 022e 0E4A     		ldr	r2, .L119+12
 1692 0230 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1693 0232 591C     		adds	r1, r3, #1
 1694 0234 1170     		strb	r1, [r2]
 769:VS4210/monitor.c **** 		}
 1695              		.loc 1 769 20 view .LVU392
 1696 0236 0D4A     		ldr	r2, .L119+16
 1697 0238 D554     		strb	r5, [r2, r3]
 781:VS4210/monitor.c **** 	{
 1698              		.loc 1 781 2 is_stmt 1 view .LVU393
 1699 023a 0CE0     		b	.L96
 1700              	.L111:
 772:VS4210/monitor.c **** 		break;
 1701              		.loc 1 772 4 view .LVU394
 1702 023c 0B20     		movs	r0, #11
 1703 023e FFF7FEFF 		bl	MonIncDecI2C
 1704              	.LVL124:
 781:VS4210/monitor.c **** 	{
 1705              		.loc 1 781 2 view .LVU395
 1706 0242 08E0     		b	.L96
 1707              	.L85:
 776:VS4210/monitor.c **** 		monstr[incnt++] = ch;
 1708              		.loc 1 776 3 view .LVU396
 1709 0244 2846     		mov	r0, r5
 1710 0246 FFF7FEFF 		bl	Mon_tx
 1711              	.LVL125:
 777:VS4210/monitor.c **** 		break;
 1712              		.loc 1 777 3 view .LVU397
 777:VS4210/monitor.c **** 		break;
 1713              		.loc 1 777 15 is_stmt 0 view .LVU398
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 50


 1714 024a 074A     		ldr	r2, .L119+12
 1715 024c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1716 024e 591C     		adds	r1, r3, #1
 1717 0250 1170     		strb	r1, [r2]
 777:VS4210/monitor.c **** 		break;
 1718              		.loc 1 777 19 view .LVU399
 1719 0252 064A     		ldr	r2, .L119+16
 1720 0254 D554     		strb	r5, [r2, r3]
 778:VS4210/monitor.c **** 	}
 1721              		.loc 1 778 3 is_stmt 1 view .LVU400
 781:VS4210/monitor.c **** 	{
 1722              		.loc 1 781 2 view .LVU401
 1723              	.L96:
 1724              	.LVL126:
 789:VS4210/monitor.c **** 	}
 1725              		.loc 1 789 3 view .LVU402
 789:VS4210/monitor.c **** 	}
 1726              		.loc 1 789 10 is_stmt 0 view .LVU403
 1727 0256 0024     		movs	r4, #0
 1728 0258 D7E6     		b	.L80
 1729              	.L120:
 1730 025a 00BF     		.align	2
 1731              	.L119:
 1732 025c 00000000 		.word	.LANCHOR3
 1733 0260 00000000 		.word	.LANCHOR4
 1734 0264 00000000 		.word	.LANCHOR5
 1735 0268 00000000 		.word	.LANCHOR6
 1736 026c 00000000 		.word	monstr
 1737 0270 00000000 		.word	argv
 1738 0274 00000000 		.word	.LANCHOR7
 1739              		.cfi_endproc
 1740              	.LFE88:
 1742              		.section	.rodata.Monitor.str1.4,"aMS",%progbits,1
 1743              		.align	2
 1744              	.LC27:
 1745 0000 5700     		.ascii	"W\000"
 1746 0002 0000     		.align	2
 1747              	.LC28:
 1748 0004 0D0A4754 		.ascii	"\015\012GT911  Write addr=%02x%02x data=%02x\000"
 1748      39313120 
 1748      20577269 
 1748      74652061 
 1748      6464723D 
 1749 002b 00       		.align	2
 1750              	.LC29:
 1751 002c 0D0A4754 		.ascii	"\015\012GT911  Read addr=%02x%02x data=%02x\000"
 1751      39313120 
 1751      20526561 
 1751      64206164 
 1751      64723D25 
 1752 0052 0000     		.align	2
 1753              	.LC30:
 1754 0054 0D0A4932 		.ascii	"\015\012I2C addr. error\000"
 1754      43206164 
 1754      64722E20 
 1754      6572726F 
 1754      7200
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 51


 1755 0066 0000     		.align	2
 1756              	.LC31:
 1757 0068 2900     		.ascii	")\000"
 1758 006a 0000     		.align	2
 1759              	.LC32:
 1760 006c 5200     		.ascii	"R\000"
 1761 006e 0000     		.align	2
 1762              	.LC33:
 1763 0070 0D0A4545 		.ascii	"\015\012EEPROM  Read addr=%02x  data=%02x\000"
 1763      50524F4D 
 1763      20205265 
 1763      61642061 
 1763      6464723D 
 1764              		.align	2
 1765              	.LC34:
 1766 0094 0D0A5653 		.ascii	"\015\012VS4210  Read addr=%02x  data=%02x\000"
 1766      34323130 
 1766      20205265 
 1766      61642061 
 1766      6464723D 
 1767              		.align	2
 1768              	.LC35:
 1769 00b8 0D0A5653 		.ascii	"\015\012VS8812  Read addr=%02x  data=%02x\000"
 1769      38383132 
 1769      20205265 
 1769      61642061 
 1769      6464723D 
 1770              		.align	2
 1771              	.LC36:
 1772 00dc 0D0A4754 		.ascii	"\015\012GT911  Read addr=%02x%02x  data=%02x\000"
 1772      39313120 
 1772      20526561 
 1772      64206164 
 1772      64723D25 
 1773 0103 00       		.align	2
 1774              	.LC37:
 1775 0104 0D0A4C54 		.ascii	"\015\012LTC2451  Read addr=%02x  data=%04x\000"
 1775      43323435 
 1775      31202052 
 1775      65616420 
 1775      61646472 
 1776 0129 000000   		.align	2
 1777              	.LC38:
 1778 012c 565200   		.ascii	"VR\000"
 1779 012f 00       		.align	2
 1780              	.LC39:
 1781 0130 0D0A5653 		.ascii	"\015\012VS4210 Read addr=%02x  data=%02x\000"
 1781      34323130 
 1781      20526561 
 1781      64206164 
 1781      64723D25 
 1782 0153 00       		.align	2
 1783              	.LC40:
 1784 0154 565700   		.ascii	"VW\000"
 1785 0157 00       		.align	2
 1786              	.LC41:
 1787 0158 2800     		.ascii	"(\000"
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 52


 1788 015a 0000     		.align	2
 1789              	.LC42:
 1790 015c 49324300 		.ascii	"I2C\000"
 1791              		.align	2
 1792              	.LC43:
 1793 0160 0D0A4368 		.ascii	"\015\012Change I2C addr. from %02x to %02x\000"
 1793      616E6765 
 1793      20493243 
 1793      20616464 
 1793      722E2066 
 1794 0185 000000   		.align	2
 1795              	.LC44:
 1796 0188 545200   		.ascii	"TR\000"
 1797 018b 00       		.align	2
 1798              	.LC45:
 1799 018c 4D454E55 		.ascii	"MENU\000"
 1799      00
 1800 0191 000000   		.align	2
 1801              	.LC46:
 1802 0194 465700   		.ascii	"FW\000"
 1803 0197 00       		.align	2
 1804              	.LC47:
 1805 0198 555000   		.ascii	"UP\000"
 1806 019b 00       		.align	2
 1807              	.LC48:
 1808 019c 444F574E 		.ascii	"DOWN\000"
 1808      00
 1809 01a1 000000   		.align	2
 1810              	.LC49:
 1811 01a4 53454C45 		.ascii	"SELECT\000"
 1811      435400
 1812 01ab 00       		.align	2
 1813              	.LC50:
 1814 01ac 4A554D50 		.ascii	"JUMP\000"
 1814      00
 1815 01b1 000000   		.align	2
 1816              	.LC51:
 1817 01b4 434D4452 		.ascii	"CMDR\000"
 1817      00
 1818 01b9 000000   		.align	2
 1819              	.LC52:
 1820 01bc 53545800 		.ascii	"STX\000"
 1821              		.align	2
 1822              	.LC53:
 1823 01c0 45545800 		.ascii	"ETX\000"
 1824              		.align	2
 1825              	.LC54:
 1826 01c4 434D4457 		.ascii	"CMDW\000"
 1826      00
 1827 01c9 000000   		.align	2
 1828              	.LC55:
 1829 01cc 5100     		.ascii	"Q\000"
 1830 01ce 0000     		.align	2
 1831              	.LC56:
 1832 01d0 425300   		.ascii	"BS\000"
 1833 01d3 00       		.align	2
 1834              	.LC57:
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 53


 1835 01d4 0D0A6253 		.ascii	"\015\012bSignal[0] = %d state[0]=%d\000"
 1835      69676E61 
 1835      6C5B305D 
 1835      203D2025 
 1835      64207374 
 1836 01f2 0000     		.align	2
 1837              	.LC58:
 1838 01f4 0D0A6253 		.ascii	"\015\012bSignal[1] = %d state[1]=%d\000"
 1838      69676E61 
 1838      6C5B315D 
 1838      203D2025 
 1838      64207374 
 1839 0212 0000     		.align	2
 1840              	.LC59:
 1841 0214 0D0A6253 		.ascii	"\015\012bSignal[2] = %d state[2]=%d\000"
 1841      69676E61 
 1841      6C5B325D 
 1841      203D2025 
 1841      64207374 
 1842 0232 0000     		.align	2
 1843              	.LC60:
 1844 0234 0D0A6253 		.ascii	"\015\012bSignal[3] = %d state[3]=%d\000"
 1844      69676E61 
 1844      6C5B335D 
 1844      203D2025 
 1844      64207374 
 1845 0252 0000     		.align	2
 1846              	.LC61:
 1847 0254 0D0A5669 		.ascii	"\015\012VideoChangeFlag=%d\000"
 1847      64656F43 
 1847      68616E67 
 1847      65466C61 
 1847      673D2564 
 1848 0269 000000   		.align	2
 1849              	.LC62:
 1850 026c 44554D50 		.ascii	"DUMP\000"
 1850      00
 1851 0271 000000   		.align	2
 1852              	.LC63:
 1853 0274 0D0A4455 		.ascii	"\015\012DUMP EEPROM\000"
 1853      4D502045 
 1853      4550524F 
 1853      4D00
 1854 0282 0000     		.align	2
 1855              	.LC64:
 1856 0284 0D0A4455 		.ascii	"\015\012DUMP VS4210\000"
 1856      4D502056 
 1856      53343231 
 1856      3000
 1857 0292 0000     		.align	2
 1858              	.LC65:
 1859 0294 0D0A4455 		.ascii	"\015\012DUMP VS8812\000"
 1859      4D502056 
 1859      53383831 
 1859      3200
 1860 02a2 0000     		.align	2
 1861              	.LC66:
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 54


 1862 02a4 0D0A4455 		.ascii	"\015\012DUMP TP2824\000"
 1862      4D502054 
 1862      50323832 
 1862      3400
 1863 02b2 0000     		.align	2
 1864              	.LC67:
 1865 02b4 0D0A4455 		.ascii	"\015\012DUMP REG.\000"
 1865      4D502052 
 1865      45472E00 
 1866              		.align	2
 1867              	.LC68:
 1868 02c0 0D0A4130 		.ascii	"\015\012A0,%02x,%02x\000"
 1868      2C253032 
 1868      782C2530 
 1868      327800
 1869 02cf 00       		.align	2
 1870              	.LC69:
 1871 02d0 0D0A3430 		.ascii	"\015\01240,%02x,%02x\000"
 1871      2C253032 
 1871      782C2530 
 1871      327800
 1872 02df 00       		.align	2
 1873              	.LC70:
 1874 02e0 0D0A3132 		.ascii	"\015\01212,%02x,%02x\000"
 1874      2C253032 
 1874      782C2530 
 1874      327800
 1875 02ef 00       		.align	2
 1876              	.LC71:
 1877 02f0 0D0A3838 		.ascii	"\015\01288,%02x,%02x\000"
 1877      2C253032 
 1877      782C2530 
 1877      327800
 1878 02ff 00       		.align	2
 1879              	.LC72:
 1880 0300 45434C45 		.ascii	"ECLEAN\000"
 1880      414E00
 1881 0307 00       		.align	2
 1882              	.LC73:
 1883 0308 0D0A4545 		.ascii	"\015\012EEPROM CLEAN_START\000"
 1883      50524F4D 
 1883      20434C45 
 1883      414E5F53 
 1883      54415254 
 1884 031d 000000   		.align	2
 1885              	.LC74:
 1886 0320 0D0A4545 		.ascii	"\015\012EEPROM CLEAN_END\000"
 1886      50524F4D 
 1886      20434C45 
 1886      414E5F45 
 1886      4E4400
 1887 0333 00       		.align	2
 1888              	.LC75:
 1889 0334 44454300 		.ascii	"DEC\000"
 1890              		.align	2
 1891              	.LC76:
 1892 0338 44545000 		.ascii	"DTP\000"
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 55


 1893              		.align	2
 1894              	.LC77:
 1895 033c 0D0A4455 		.ascii	"\015\012DUMP GT911 Reg..\000"
 1895      4D502047 
 1895      54393131 
 1895      20526567 
 1895      2E2E00
 1896 034f 00       		.align	2
 1897              	.LC78:
 1898 0350 0D0A4164 		.ascii	"\015\012Addr=%04x Data=%02x\000"
 1898      64723D25 
 1898      30347820 
 1898      44617461 
 1898      3D253032 
 1899 0366 0000     		.align	2
 1900              	.LC79:
 1901 0368 53455442 		.ascii	"SETBOX\000"
 1901      4F5800
 1902 036f 00       		.align	2
 1903              	.LC80:
 1904 0370 444600   		.ascii	"DF\000"
 1905 0373 00       		.align	2
 1906              	.LC81:
 1907 0374 0D0A466C 		.ascii	"\015\012Flisheye_CAM[%02x]=%02x\000"
 1907      69736865 
 1907      79655F43 
 1907      414D5B25 
 1907      3032785D 
 1908 038e 0000     		.align	2
 1909              	.LC82:
 1910 0390 0D0A5175 		.ascii	"\015\012QuadBoxId=%02x\000"
 1910      6164426F 
 1910      7849643D 
 1910      25303278 
 1910      00
 1911 03a1 000000   		.align	2
 1912              	.LC83:
 1913 03a4 504F4E00 		.ascii	"PON\000"
 1914              		.align	2
 1915              	.LC84:
 1916 03a8 4800     		.ascii	"H\000"
 1917 03aa 0000     		.align	2
 1918              	.LC85:
 1919 03ac 48454C50 		.ascii	"HELP\000"
 1919      00
 1920 03b1 000000   		.align	2
 1921              	.LC86:
 1922 03b4 3F00     		.ascii	"?\000"
 1923 03b6 0000     		.align	2
 1924              	.LC87:
 1925 03b8 50574D00 		.ascii	"PWM\000"
 1926              		.align	2
 1927              	.LC88:
 1928 03bc 0D0A5057 		.ascii	"\015\012PWM=%d\000"
 1928      4D3D2564 
 1928      00
 1929 03c5 000000   		.align	2
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 56


 1930              	.LC89:
 1931 03c8 414C4352 		.ascii	"ALCR\000"
 1931      00
 1932 03cd 000000   		.align	2
 1933              	.LC90:
 1934 03d0 0D0A414C 		.ascii	"\015\012ALCR=%04x\000"
 1934      43523D25 
 1934      30347800 
 1935              		.align	2
 1936              	.LC91:
 1937 03dc 414C4357 		.ascii	"ALCW\000"
 1937      00
 1938 03e1 000000   		.align	2
 1939              	.LC92:
 1940 03e4 74726900 		.ascii	"tri\000"
 1941              		.align	2
 1942              	.LC93:
 1943 03e8 0D0A5472 		.ascii	"\015\012TriggerFlag=%02x\000"
 1943      69676765 
 1943      72466C61 
 1943      673D2530 
 1943      327800
 1944 03fb 00       		.align	2
 1945              	.LC94:
 1946 03fc 74726973 		.ascii	"triset\000"
 1946      657400
 1947 0403 00       		.align	2
 1948              	.LC95:
 1949 0404 0D0A6279 		.ascii	"\015\012bytTriggerTest=%02x\000"
 1949      74547269 
 1949      67676572 
 1949      54657374 
 1949      3D253032 
 1950 041a 0000     		.align	2
 1951              	.LC96:
 1952 041c 737700   		.ascii	"sw\000"
 1953 041f 00       		.align	2
 1954              	.LC97:
 1955 0420 0D0A2856 		.ascii	"\015\012(VS4210_SwitchChannel ch=%02x win=%02x)\000"
 1955      53343231 
 1955      305F5377 
 1955      69746368 
 1955      4368616E 
 1956 044a 0000     		.align	2
 1957              	.LC98:
 1958 044c 73656C00 		.ascii	"sel\000"
 1959              		.align	2
 1960              	.LC99:
 1961 0450 0D0A2853 		.ascii	"\015\012(Select CAM R)\000"
 1961      656C6563 
 1961      74204341 
 1961      4D205229 
 1961      00
 1962 0461 000000   		.align	2
 1963              	.LC100:
 1964 0464 0D0A2853 		.ascii	"\015\012(Select CAM D)\000"
 1964      656C6563 
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 57


 1964      74204341 
 1964      4D204429 
 1964      00
 1965 0475 000000   		.align	2
 1966              	.LC101:
 1967 0478 0D0A2843 		.ascii	"\015\012(CAM D and CAM R for OFF)\000"
 1967      414D2044 
 1967      20616E64 
 1967      2043414D 
 1967      20522066 
 1968              		.align	2
 1969              	.LC102:
 1970 0494 64707265 		.ascii	"dpreg\000"
 1970      6700
 1971 049a 0000     		.align	2
 1972              	.LC103:
 1973 049c 0D0A2863 		.ascii	"\015\012(ch=%02x count=%02x state=%02x std=%02x mod"
 1973      683D2530 
 1973      32782063 
 1973      6F756E74 
 1973      3D253032 
 1974 04c9 653D2530 		.ascii	"e=%02x)\000"
 1974      32782900 
 1975 04d1 000000   		.align	2
 1976              	.LC104:
 1977 04d4 28656761 		.ascii	"(egain[%02x]  [0]=%02x [1]=%02x [2]=%02x [3]=%02x)\000"
 1977      696E5B25 
 1977      3032785D 
 1977      20205B30 
 1977      5D3D2530 
 1978 0507 00       		.align	2
 1979              	.LC105:
 1980 0508 41434345 		.ascii	"ACCESS\000"
 1980      535300
 1981 050f 00       		.align	2
 1982              	.LC106:
 1983 0510 0D0A3238 		.ascii	"\015\0122824 AUTO ACCESS = %d\000"
 1983      32342041 
 1983      55544F20 
 1983      41434345 
 1983      5353203D 
 1984              		.align	2
 1985              	.LC107:
 1986 0528 70747A00 		.ascii	"ptz\000"
 1987              		.align	2
 1988              	.LC108:
 1989 052c 0D0A2862 		.ascii	"\015\012(bytVideoInput=%d)(PtzTxChNum=%d)\000"
 1989      79745669 
 1989      64656F49 
 1989      6E707574 
 1989      3D256429 
 1990              		.align	2
 1991              	.LC109:
 1992 0550 67657476 		.ascii	"getvideo\000"
 1992      6964656F 
 1992      00
 1993 0559 000000   		.align	2
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 58


 1994              	.LC110:
 1995 055c 0D0A496E 		.ascii	"\015\012Invalid command...\000"
 1995      76616C69 
 1995      6420636F 
 1995      6D6D616E 
 1995      642E2E2E 
 1996 0571 000000   		.align	2
 1997              	.LC26:
 1998 0574 30313233 		.ascii	"0123456789ABCDEF\000"
 1998      34353637 
 1998      38394142 
 1998      43444546 
 1998      00
 1999              		.section	.text.Monitor,"ax",%progbits
 2000              		.align	1
 2001              		.global	Monitor
 2002              		.syntax unified
 2003              		.thumb
 2004              		.thumb_func
 2005              		.fpu softvfp
 2007              	Monitor:
 2008              	.LFB89:
 792:VS4210/monitor.c **** 
 793:VS4210/monitor.c **** //*****************************************************************************
 794:VS4210/monitor.c **** //				Monitoring Command
 795:VS4210/monitor.c **** //*****************************************************************************
 796:VS4210/monitor.c **** //#ifdef  HS_DEBUG
 797:VS4210/monitor.c **** void Monitor(void)
 798:VS4210/monitor.c **** {
 2009              		.loc 1 798 1 is_stmt 1 view -0
 2010              		.cfi_startproc
 2011              		@ args = 0, pretend = 0, frame = 24
 2012              		@ frame_needed = 0, uses_anonymous_args = 0
 2013 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2014              	.LCFI10:
 2015              		.cfi_def_cfa_offset 20
 2016              		.cfi_offset 4, -20
 2017              		.cfi_offset 5, -16
 2018              		.cfi_offset 6, -12
 2019              		.cfi_offset 7, -8
 2020              		.cfi_offset 14, -4
 2021 0002 89B0     		sub	sp, sp, #36
 2022              	.LCFI11:
 2023              		.cfi_def_cfa_offset 56
 799:VS4210/monitor.c **** #if (HS_DEBUG == ON)
 800:VS4210/monitor.c **** 	BYTE ret, temp;
 2024              		.loc 1 800 2 view .LVU405
 801:VS4210/monitor.c **** 	WORD addr, retw;
 2025              		.loc 1 801 2 view .LVU406
 802:VS4210/monitor.c **** #endif
 803:VS4210/monitor.c **** 
 804:VS4210/monitor.c **** #if (HS_DEBUG == ON)
 805:VS4210/monitor.c **** 	BYTE ascii[16] = {0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x
 2026              		.loc 1 805 2 view .LVU407
 2027              		.loc 1 805 7 is_stmt 0 view .LVU408
 2028 0004 BE4B     		ldr	r3, .L242
 2029 0006 03AC     		add	r4, sp, #12
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 59


 2030 0008 0FCB     		ldm	r3, {r0, r1, r2, r3}
 2031 000a 84E80F00 		stm	r4, {r0, r1, r2, r3}
 806:VS4210/monitor.c **** 	BYTE ReadAddr;
 2032              		.loc 1 806 2 is_stmt 1 view .LVU409
 807:VS4210/monitor.c **** #endif
 808:VS4210/monitor.c **** 
 809:VS4210/monitor.c **** 	if (!MonGetCommand())
 2033              		.loc 1 809 2 view .LVU410
 2034              		.loc 1 809 7 is_stmt 0 view .LVU411
 2035 000e FFF7FEFF 		bl	MonGetCommand
 2036              	.LVL127:
 2037              		.loc 1 809 5 view .LVU412
 2038 0012 08B9     		cbnz	r0, .L210
 2039              	.L121:
 810:VS4210/monitor.c **** 		return;
 811:VS4210/monitor.c **** 
 812:VS4210/monitor.c **** 	//--------------------------------------------------
 813:VS4210/monitor.c **** 	// Check Indirect command
 814:VS4210/monitor.c **** 	/*
 815:VS4210/monitor.c **** 	if( !stricmp( argv[0], "I" ) ) 			indirect=1;
 816:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "O" ) ) 	indirect=1;
 817:VS4210/monitor.c **** 
 818:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "," ) ) 	indirect=0;
 819:VS4210/monitor.c **** 	else if( !stricmp( argv[0], ">" ) ) 	indirect=0;
 820:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "<" ) ) 	indirect=0;
 821:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "." ) ) 	indirect=0;
 822:VS4210/monitor.c **** 	else  indirect=0;
 823:VS4210/monitor.c **** 	*/
 824:VS4210/monitor.c **** 	indirect = 0;
 825:VS4210/monitor.c **** 
 826:VS4210/monitor.c **** //---------------- Write Register -------------------
 827:VS4210/monitor.c **** #if (HS_DEBUG == ON)
 828:VS4210/monitor.c **** 	if (!stricmp((BYTE *)argv[0], (BYTE *)"W"))
 829:VS4210/monitor.c **** 	{
 830:VS4210/monitor.c **** 
 831:VS4210/monitor.c **** 		MonIndex = Asc2Bin(argv[1]);
 832:VS4210/monitor.c **** 		MonWdata = Asc2Bin(argv[2]);
 833:VS4210/monitor.c **** 
 834:VS4210/monitor.c **** #if 0
 835:VS4210/monitor.c **** 
 836:VS4210/monitor.c **** VXISI2CWrite( Asc2Bin(argv[1]), Asc2Bin(argv[2]) );
 837:VS4210/monitor.c **** 		 ret= VXISI2CRead(Asc2Bin(argv[1]));	
 838:VS4210/monitor.c **** 	   Printf("\r\nVS4210 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 839:VS4210/monitor.c **** 
 840:VS4210/monitor.c **** #else
 841:VS4210/monitor.c **** 		if (Monitor_I2C == 0xA0)
 842:VS4210/monitor.c **** 		{
 843:VS4210/monitor.c **** 			WriteEEP(Asc2Bin(argv[1]), Asc2Bin(argv[2]));
 844:VS4210/monitor.c **** 			// tp28xx_byte_write(Asc2Bin(argv[1]), Asc2Bin(argv[2]));
 845:VS4210/monitor.c **** 			ret = ReadEEP(Asc2Bin(argv[1]));
 846:VS4210/monitor.c **** 			Printf("\r\nEEPROM Write addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 847:VS4210/monitor.c **** 		}
 848:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x40)
 849:VS4210/monitor.c **** 		{
 850:VS4210/monitor.c **** 			VXISI2CWrite(Asc2Bin(argv[1]), Asc2Bin(argv[2]));
 851:VS4210/monitor.c **** 			ret = VXISI2CRead(Asc2Bin(argv[1]));
 852:VS4210/monitor.c **** 			Printf("\r\nVS4210 Write addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 60


 853:VS4210/monitor.c **** 		}
 854:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x12)
 855:VS4210/monitor.c **** 		{
 856:VS4210/monitor.c **** 			VS8812Write(Asc2Bin(argv[1]), Asc2Bin(argv[2]));
 857:VS4210/monitor.c **** 			ret = VS8812Read(Asc2Bin(argv[1]));
 858:VS4210/monitor.c **** 			Printf("\r\nVS8812 Write addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 859:VS4210/monitor.c **** 		}
 860:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x28)
 861:VS4210/monitor.c **** 		{
 862:VS4210/monitor.c **** 
 863:VS4210/monitor.c **** 			addr = Asc2Bin(argv[1]);
 864:VS4210/monitor.c **** 			addr <<= 8;
 865:VS4210/monitor.c **** 			addr |= Asc2Bin(argv[2]);
 866:VS4210/monitor.c **** 
 867:VS4210/monitor.c **** 			temp = Asc2Bin(argv[3]);
 868:VS4210/monitor.c **** 			SET_nGT911(addr, &temp, 1);
 869:VS4210/monitor.c **** 
 870:VS4210/monitor.c **** 			Printf("\r\nGT911  Write addr=%02x%02x data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)Asc2Bin(argv[2]
 871:VS4210/monitor.c **** 
 872:VS4210/monitor.c **** 			GET_nGT911(addr, &ret, 1);
 873:VS4210/monitor.c **** 
 874:VS4210/monitor.c **** 			Printf("\r\nGT911  Read addr=%02x%02x data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)Asc2Bin(argv[2])
 875:VS4210/monitor.c **** 		}
 876:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x88)
 877:VS4210/monitor.c **** 		{
 878:VS4210/monitor.c **** 			tp28xx_byte_write(Asc2Bin(argv[1]), Asc2Bin(argv[2]));
 879:VS4210/monitor.c **** 			ret = tp28xx_byte_read(Asc2Bin(argv[1]));
 880:VS4210/monitor.c **** 			Printf("\r\nTP2824  Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 881:VS4210/monitor.c **** 		}
 882:VS4210/monitor.c **** 
 883:VS4210/monitor.c **** 		else
 884:VS4210/monitor.c **** 		{
 885:VS4210/monitor.c **** 			Printf("\r\nI2C addr. error");
 886:VS4210/monitor.c **** 		}
 887:VS4210/monitor.c **** 
 888:VS4210/monitor.c **** #endif
 889:VS4210/monitor.c **** 		/*
 890:VS4210/monitor.c **** 				if(Monitor_I2C==EEPROM_24C02_addr)
 891:VS4210/monitor.c **** 				{
 892:VS4210/monitor.c **** 				 SW_I2C1Write( Monitor_I2C , Asc2Bin(argv[1]), Asc2Bin(argv[2]) );
 893:VS4210/monitor.c **** 				//tp28xx_byte_write(Asc2Bin(argv[1]), Asc2Bin(argv[2]));
 894:VS4210/monitor.c **** 				  ret= SW_I2C1Read(Monitor_I2C,Asc2Bin(argv[1]));
 895:VS4210/monitor.c **** 				Printf("\r\nEEPROM Write addr=%02x	data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 896:VS4210/monitor.c **** 				}
 897:VS4210/monitor.c **** 				else
 898:VS4210/monitor.c **** 					{
 899:VS4210/monitor.c **** 						tp28xx_byte_write(Asc2Bin(argv[1]), Asc2Bin(argv[2]));
 900:VS4210/monitor.c **** 						//ret= tp28xx_byte_read(0x2a);
 901:VS4210/monitor.c **** 					  ret= tp28xx_byte_read(Asc2Bin(argv[1]));
 902:VS4210/monitor.c **** 					Printf("\r\nTP2824 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 903:VS4210/monitor.c **** 					}
 904:VS4210/monitor.c **** 				*/
 905:VS4210/monitor.c **** 	}
 906:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)")"))
 907:VS4210/monitor.c **** 	{
 908:VS4210/monitor.c **** 		indirect = 0;
 909:VS4210/monitor.c **** 		//	MonNewWriteI2C();
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 61


 910:VS4210/monitor.c **** 	}
 911:VS4210/monitor.c **** 	/*
 912:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "O" ) ) {			// inderect addressing for 8806
 913:VS4210/monitor.c **** 		MonIndex = Asc2Bin( argv[1] );
 914:VS4210/monitor.c **** 		MonWdata = Asc2Bin( argv[2] );
 915:VS4210/monitor.c **** 		WriteI2C(MonAddress, 0xc5, MonIndex);
 916:VS4210/monitor.c **** 		WriteI2C(MonAddress, 0xc6, MonWdata);
 917:VS4210/monitor.c **** 		MonRdata = ReadI2C(MonAddress, 0xc6);
 918:VS4210/monitor.c **** 		Printf("\r\n==> Read %2xh:%2xh", (WORD)MonIndex, (WORD)MonRdata);
 919:VS4210/monitor.c **** 	}
 920:VS4210/monitor.c **** 	*/
 921:VS4210/monitor.c **** 	//---------------- Read Register --------------------
 922:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"R"))
 923:VS4210/monitor.c **** 	{
 924:VS4210/monitor.c **** 		// MonReadI2C();
 925:VS4210/monitor.c **** 
 926:VS4210/monitor.c **** 		MonIndex = Asc2Bin(argv[1]);
 927:VS4210/monitor.c **** 
 928:VS4210/monitor.c **** #if 0
 929:VS4210/monitor.c **** 			   ret= VXISI2CRead(Asc2Bin(argv[1]));			 
 930:VS4210/monitor.c **** 			Printf("\r\nVS4210	Read addr=%02x	data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 931:VS4210/monitor.c **** 
 932:VS4210/monitor.c **** #else
 933:VS4210/monitor.c **** 		if (Monitor_I2C == 0xA0)
 934:VS4210/monitor.c **** 		{
 935:VS4210/monitor.c **** 			ret = ReadEEP(Asc2Bin(argv[1]));
 936:VS4210/monitor.c **** 			Printf("\r\nEEPROM  Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 937:VS4210/monitor.c **** 		}
 938:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x40)
 939:VS4210/monitor.c **** 		{
 940:VS4210/monitor.c **** 			ret = VXISI2CRead(Asc2Bin(argv[1]));
 941:VS4210/monitor.c **** 			Printf("\r\nVS4210  Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 942:VS4210/monitor.c **** 		}
 943:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x12)
 944:VS4210/monitor.c **** 		{
 945:VS4210/monitor.c **** 			ret = VS8812Read(Asc2Bin(argv[1]));
 946:VS4210/monitor.c **** 			Printf("\r\nVS8812  Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 947:VS4210/monitor.c **** 		}
 948:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x28)
 949:VS4210/monitor.c **** 		{
 950:VS4210/monitor.c **** 
 951:VS4210/monitor.c **** 			addr = Asc2Bin(argv[1]);
 952:VS4210/monitor.c **** 			addr <<= 8;
 953:VS4210/monitor.c **** 			addr |= Asc2Bin(argv[2]);
 954:VS4210/monitor.c **** 
 955:VS4210/monitor.c **** 			GET_nGT911(addr, &temp, 1);
 956:VS4210/monitor.c **** 			Printf("\r\nGT911  Read addr=%02x%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)Asc2Bin(argv[2]
 957:VS4210/monitor.c **** 		}
 958:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x88)
 959:VS4210/monitor.c **** 		{
 960:VS4210/monitor.c **** 			ret = tp28xx_byte_read(Asc2Bin(argv[1]));
 961:VS4210/monitor.c **** 			Printf("\r\nTP2824  Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 962:VS4210/monitor.c **** 		}
 963:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x29)
 964:VS4210/monitor.c **** 		{
 965:VS4210/monitor.c **** 			retw = GET_LTC2451(Asc2Bin(argv[1]));
 966:VS4210/monitor.c **** 			Printf("\r\nLTC2451  Read addr=%02x  data=%04x", (WORD)Asc2Bin(argv[1]), (WORD)retw);
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 62


 967:VS4210/monitor.c **** 		}
 968:VS4210/monitor.c **** 
 969:VS4210/monitor.c **** 		else
 970:VS4210/monitor.c **** 		{
 971:VS4210/monitor.c **** 			Printf("\r\nI2C addr. error");
 972:VS4210/monitor.c **** 		}
 973:VS4210/monitor.c **** 
 974:VS4210/monitor.c **** 		MonWdata = ret;
 975:VS4210/monitor.c **** 
 976:VS4210/monitor.c **** #endif
 977:VS4210/monitor.c **** 		/*
 978:VS4210/monitor.c **** 		if(Monitor_I2C==EEPROM_24C02_addr)
 979:VS4210/monitor.c **** 				{
 980:VS4210/monitor.c **** 			   ret= SW_I2C1Read(Monitor_I2C,Asc2Bin(argv[1]));
 981:VS4210/monitor.c **** 			Printf("\r\nEEPROM Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 982:VS4210/monitor.c **** 			}
 983:VS4210/monitor.c **** 		else
 984:VS4210/monitor.c **** 			{
 985:VS4210/monitor.c **** 			   ret= tp28xx_byte_read(Asc2Bin(argv[1]));
 986:VS4210/monitor.c **** 			Printf("\r\nTP2824 Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ret);
 987:VS4210/monitor.c **** 			}
 988:VS4210/monitor.c **** 		*/
 989:VS4210/monitor.c **** 	}
 990:VS4210/monitor.c **** 
 991:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"VR"))
 992:VS4210/monitor.c **** 	{
 993:VS4210/monitor.c **** 		// MonReadI2C();
 994:VS4210/monitor.c **** 		ret = VXISI2CRead(Asc2Bin(argv[1]));
 995:VS4210/monitor.c **** 		Printf("\r\nVS4210 Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 996:VS4210/monitor.c **** 	}
 997:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"VW"))
 998:VS4210/monitor.c **** 	{
 999:VS4210/monitor.c **** 		VXISI2CWrite(Asc2Bin(argv[1]), Asc2Bin(argv[2]));
1000:VS4210/monitor.c **** 		ret = VXISI2CRead(Asc2Bin(argv[1]));
1001:VS4210/monitor.c **** 		Printf("\r\nVS4210 Write addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
1002:VS4210/monitor.c **** 	}
1003:VS4210/monitor.c **** 	else if (!stricmp(argv[0], (BYTE *)"("))
1004:VS4210/monitor.c **** 	{
1005:VS4210/monitor.c **** 		indirect = 0;
1006:VS4210/monitor.c **** 		// MonNewReadI2C();
1007:VS4210/monitor.c **** 	}
1008:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"I2C"))
1009:VS4210/monitor.c **** 	{
1010:VS4210/monitor.c **** 		ret = Asc2Bin(argv[1]);
1011:VS4210/monitor.c **** 		Printf("\r\nChange I2C addr. from %02x to %02x", (WORD)Monitor_I2C, (WORD)ret);
1012:VS4210/monitor.c **** 		Monitor_I2C = ret;
1013:VS4210/monitor.c **** 	}
1014:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"TR"))
1015:VS4210/monitor.c **** 	{
1016:VS4210/monitor.c **** 		HAL_GPIO_WritePin(TP2824_RST_GPIO_Port, TP2824_RST_Pin, 0); // TP2824 RST
1017:VS4210/monitor.c **** 		msleep(300);
1018:VS4210/monitor.c **** 		HAL_GPIO_WritePin(TP2824_RST_GPIO_Port, TP2824_RST_Pin, 1); // TP2824 RST
1019:VS4210/monitor.c **** 		msleep(300);
1020:VS4210/monitor.c **** 		Init_TP280x_RegSet();
1021:VS4210/monitor.c **** 	}
1022:VS4210/monitor.c **** #endif
1023:VS4210/monitor.c **** #if (HS_DEBUG == ON)
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 63


1024:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"MENU"))
1025:VS4210/monitor.c **** #else
1026:VS4210/monitor.c **** 	if (!stricmp((BYTE *)argv[0], (BYTE *)"MENU"))
1027:VS4210/monitor.c **** #endif
1028:VS4210/monitor.c **** 	{
1029:VS4210/monitor.c **** 		COMMAND_OSD(CMD_OSD_MENU);
1030:VS4210/monitor.c **** 	}
1031:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"FW"))
1032:VS4210/monitor.c **** 	{
1033:VS4210/monitor.c **** 		COMMAND_OSD(CMD_FW);
1034:VS4210/monitor.c **** 	}
1035:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"UP"))
1036:VS4210/monitor.c **** 	{
1037:VS4210/monitor.c **** 		COMMAND_OSD(CMD_OSD_UP);
1038:VS4210/monitor.c **** 	}
1039:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"DOWN"))
1040:VS4210/monitor.c **** 	{
1041:VS4210/monitor.c **** 		COMMAND_OSD(CMD_OSD_DOWN);
1042:VS4210/monitor.c **** 	}
1043:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"SELECT"))
1044:VS4210/monitor.c **** 	{
1045:VS4210/monitor.c **** 		COMMAND_OSD(CMD_OSD_SELECT);
1046:VS4210/monitor.c **** 	}
1047:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"JUMP"))
1048:VS4210/monitor.c **** 	{
1049:VS4210/monitor.c **** 		COMMAND_OSD(CMD_OSD_JUMP);
1050:VS4210/monitor.c **** 	}
1051:VS4210/monitor.c **** #if (_DEBUG_MESSAGE_CONSOLE_TEST == ON)
1052:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"CMDR"))
1053:VS4210/monitor.c **** 	{
1054:VS4210/monitor.c **** 		// BYTE ascii[16] = {0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43
1055:VS4210/monitor.c **** 
1056:VS4210/monitor.c **** 		Monitor_I2C = Asc2Bin(argv[1]);
1057:VS4210/monitor.c **** 		ReadAddr = Asc2Bin(argv[2]);
1058:VS4210/monitor.c **** 		if (Monitor_I2C == 0xA0)
1059:VS4210/monitor.c **** 			ret = ReadEEP(Asc2Bin(argv[2]));
1060:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x40)
1061:VS4210/monitor.c **** 			ret = VXISI2CRead(Asc2Bin(argv[2]));
1062:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x12)
1063:VS4210/monitor.c **** 			ret = VS8812Read(Asc2Bin(argv[2]));
1064:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x88)
1065:VS4210/monitor.c **** 			ret = tp28xx_byte_read(Asc2Bin(argv[2]));
1066:VS4210/monitor.c **** 		else
1067:VS4210/monitor.c **** 			Printf("\r\nI2C addr. error");
1068:VS4210/monitor.c **** 
1069:VS4210/monitor.c **** 		Printf("STX");
1070:VS4210/monitor.c **** 		RS_tx(ascii[ReadAddr >> 4]);
1071:VS4210/monitor.c **** 		RS_tx(ascii[ReadAddr & 0x0F]);
1072:VS4210/monitor.c **** 		RS_tx(ascii[ret >> 4]);
1073:VS4210/monitor.c **** 		RS_tx(ascii[ret & 0x0F]);
1074:VS4210/monitor.c **** 		RS_tx(ascii[0x56 >> 4]);
1075:VS4210/monitor.c **** 		RS_tx(ascii[0x56 & 0x0F]);
1076:VS4210/monitor.c **** 		RS_tx(ascii[(ReadAddr ^ ret ^ 0x56) >> 4]);
1077:VS4210/monitor.c **** 		RS_tx(ascii[(ReadAddr ^ ret ^ 0x56) & 0x0F]);
1078:VS4210/monitor.c **** 		Printf("ETX");
1079:VS4210/monitor.c **** 	}
1080:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"CMDW"))
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 64


1081:VS4210/monitor.c **** 	{
1082:VS4210/monitor.c **** 		// BYTE ascii[16] = {0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43
1083:VS4210/monitor.c **** 
1084:VS4210/monitor.c **** 		Monitor_I2C = Asc2Bin(argv[1]);
1085:VS4210/monitor.c **** 		// VXISI2CWrite(Asc2Bin(argv[2]), Asc2Bin(argv[3]));
1086:VS4210/monitor.c **** 		// ret = VXISI2CRead(Asc2Bin(argv[2]));
1087:VS4210/monitor.c **** 		if (Monitor_I2C == 0xA0)
1088:VS4210/monitor.c **** 		{
1089:VS4210/monitor.c **** 			WriteEEP(Asc2Bin(argv[2]), Asc2Bin(argv[3]));
1090:VS4210/monitor.c **** 			ret = ReadEEP(Asc2Bin(argv[2]));
1091:VS4210/monitor.c **** 		}
1092:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x40)
1093:VS4210/monitor.c **** 		{
1094:VS4210/monitor.c **** 			VXISI2CWrite(Asc2Bin(argv[2]), Asc2Bin(argv[3]));
1095:VS4210/monitor.c **** 			ret = VXISI2CRead(Asc2Bin(argv[2]));
1096:VS4210/monitor.c **** 		}
1097:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x12)
1098:VS4210/monitor.c **** 		{
1099:VS4210/monitor.c **** 			VS8812Write(Asc2Bin(argv[2]), Asc2Bin(argv[3]));
1100:VS4210/monitor.c **** 			ret = VS8812Read(Asc2Bin(argv[2]));
1101:VS4210/monitor.c **** 		}
1102:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x88)
1103:VS4210/monitor.c **** 		{
1104:VS4210/monitor.c **** 			tp28xx_byte_write(Asc2Bin(argv[2]), Asc2Bin(argv[3]));
1105:VS4210/monitor.c **** 			ret = tp28xx_byte_read(Asc2Bin(argv[2]));
1106:VS4210/monitor.c **** 		}
1107:VS4210/monitor.c **** 		else
1108:VS4210/monitor.c **** 		{
1109:VS4210/monitor.c **** 			Printf("\r\nI2C addr. error");
1110:VS4210/monitor.c **** 		}
1111:VS4210/monitor.c **** 
1112:VS4210/monitor.c **** 		ReadAddr = Asc2Bin(argv[2]);
1113:VS4210/monitor.c **** 		Printf("STX");
1114:VS4210/monitor.c **** 		RS_tx(ascii[ReadAddr >> 4]);
1115:VS4210/monitor.c **** 		RS_tx(ascii[ReadAddr & 0x0F]);
1116:VS4210/monitor.c **** 		RS_tx(ascii[ret >> 4]);
1117:VS4210/monitor.c **** 		RS_tx(ascii[ret & 0x0F]);
1118:VS4210/monitor.c **** 		RS_tx(ascii[0x56 >> 4]);
1119:VS4210/monitor.c **** 		RS_tx(ascii[0x56 & 0x0F]);
1120:VS4210/monitor.c **** 		RS_tx(ascii[(ReadAddr ^ ret ^ 0x56) >> 4]);
1121:VS4210/monitor.c **** 		RS_tx(ascii[(ReadAddr ^ ret ^ 0x56) & 0x0F]);
1122:VS4210/monitor.c **** 		Printf("ETX");
1123:VS4210/monitor.c **** 	}
1124:VS4210/monitor.c **** #endif
1125:VS4210/monitor.c **** #if (HS_DEBUG == ON)
1126:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"Q"))
1127:VS4210/monitor.c **** 	{
1128:VS4210/monitor.c **** 		Monitor_flag = _FALSE;
1129:VS4210/monitor.c **** 	}
1130:VS4210/monitor.c **** 	else if (!stricmp(argv[0], (BYTE *)"BS"))
1131:VS4210/monitor.c **** 	{ // HDMI input
1132:VS4210/monitor.c **** 		extern tByte bSignal[4];
1133:VS4210/monitor.c **** 		Printf("\r\nbSignal[0] = %d state[0]=%d", (WORD)bSignal[0], (WORD)state[0]);
1134:VS4210/monitor.c **** 		Printf("\r\nbSignal[1] = %d state[1]=%d", (WORD)bSignal[1], (WORD)state[1]);
1135:VS4210/monitor.c **** 		Printf("\r\nbSignal[2] = %d state[2]=%d", (WORD)bSignal[2], (WORD)state[2]);
1136:VS4210/monitor.c **** 		Printf("\r\nbSignal[3] = %d state[3]=%d", (WORD)bSignal[3], (WORD)state[3]);
1137:VS4210/monitor.c **** 
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 65


1138:VS4210/monitor.c **** 		Printf("\r\nVideoChangeFlag=%d", (WORD)VideoChangeFlag);
1139:VS4210/monitor.c **** 
1140:VS4210/monitor.c **** 		Monitor_flag = _FALSE;
1141:VS4210/monitor.c **** 	}
1142:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"DUMP"))
1143:VS4210/monitor.c **** 	{
1144:VS4210/monitor.c **** 		WORD s, e;
1145:VS4210/monitor.c **** 
1146:VS4210/monitor.c **** 		s = Asc2Bin(argv[1]);
1147:VS4210/monitor.c **** 		e = Asc2Bin(argv[2]);
1148:VS4210/monitor.c **** 
1149:VS4210/monitor.c **** 		if (Monitor_I2C == 0xA0)
1150:VS4210/monitor.c **** 			Printf("\r\nDUMP EEPROM");
1151:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x40)
1152:VS4210/monitor.c **** 			Printf("\r\nDUMP VS4210");
1153:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x12)
1154:VS4210/monitor.c **** 			Printf("\r\nDUMP VS8812");
1155:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x88)
1156:VS4210/monitor.c **** 			Printf("\r\nDUMP TP2824");
1157:VS4210/monitor.c **** 		else
1158:VS4210/monitor.c **** 			Printf("\r\nDUMP REG.");
1159:VS4210/monitor.c **** 
1160:VS4210/monitor.c **** 		for (/*s*/; s <= e; s++)
1161:VS4210/monitor.c **** 		{
1162:VS4210/monitor.c **** 			if (Monitor_I2C == 0xA0)
1163:VS4210/monitor.c **** 			{
1164:VS4210/monitor.c **** 				ret = ReadEEP(s);
1165:VS4210/monitor.c **** 				Printf("\r\nA0,%02x,%02x", (WORD)s, (WORD)ret);
1166:VS4210/monitor.c **** 			}
1167:VS4210/monitor.c **** 			else if (Monitor_I2C == 0x40)
1168:VS4210/monitor.c **** 			{
1169:VS4210/monitor.c **** 				ret = VXISI2CRead(s);
1170:VS4210/monitor.c **** 				// Printf("\r\nVS4210  Read addr=%02x  data=%02x",(WORD)s,(WORD)ret);
1171:VS4210/monitor.c **** 				Printf("\r\n40,%02x,%02x", (WORD)s, (WORD)ret);
1172:VS4210/monitor.c **** 			}
1173:VS4210/monitor.c **** 			else if (Monitor_I2C == 0x12)
1174:VS4210/monitor.c **** 			{
1175:VS4210/monitor.c **** 				ret = VS8812Read(s);
1176:VS4210/monitor.c **** 				//			  Printf("\r\nVS8812  Read addr=%02x  data=%02x",(WORD)s,(WORD)ret);
1177:VS4210/monitor.c **** 				Printf("\r\n12,%02x,%02x", (WORD)s, (WORD)ret);
1178:VS4210/monitor.c **** 			}
1179:VS4210/monitor.c **** 			else if (Monitor_I2C == 0x88)
1180:VS4210/monitor.c **** 			{
1181:VS4210/monitor.c **** 				ret = tp28xx_byte_read(s);
1182:VS4210/monitor.c **** 				Printf("\r\n88,%02x,%02x", (WORD)s, (WORD)ret);
1183:VS4210/monitor.c **** 			}
1184:VS4210/monitor.c **** 			else if (Monitor_I2C == 0x28)
1185:VS4210/monitor.c **** 			{
1186:VS4210/monitor.c **** 				addr = Asc2Bin(argv[1]);
1187:VS4210/monitor.c **** 				addr <<= 8;
1188:VS4210/monitor.c **** 				addr |= Asc2Bin(argv[2]);
1189:VS4210/monitor.c **** 
1190:VS4210/monitor.c **** 				GET_nGT911(addr, &temp, 1);
1191:VS4210/monitor.c **** 				Printf("\r\nGT911  Read addr=%02x%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)Asc2Bin(argv[2
1192:VS4210/monitor.c **** 			}
1193:VS4210/monitor.c **** 			else
1194:VS4210/monitor.c **** 			{
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 66


1195:VS4210/monitor.c **** 				Printf("\r\nI2C addr. error");
1196:VS4210/monitor.c **** 			}
1197:VS4210/monitor.c **** 		}
1198:VS4210/monitor.c **** 	}
1199:VS4210/monitor.c **** 	else if (!stricmp(argv[0], (BYTE *)"ECLEAN"))
1200:VS4210/monitor.c **** 	{ // EEPROM Clear to 0xFF
1201:VS4210/monitor.c **** 
1202:VS4210/monitor.c **** 		Printf("\r\nEEPROM CLEAN_START");
1203:VS4210/monitor.c **** 
1204:VS4210/monitor.c **** 		WriteEEP(0, 0xFF);
1205:VS4210/monitor.c **** 		WriteEEP(1, 0xFF);
1206:VS4210/monitor.c **** 		WriteEEP(2, 0xFF);
1207:VS4210/monitor.c **** 		WriteEEP(3, 0xFF);
1208:VS4210/monitor.c **** 		WriteEEP(EEP_FWREV_MAJOR, 0xFF);
1209:VS4210/monitor.c **** 		WriteEEP(EEP_FWREV_MINOR, 0xFF);
1210:VS4210/monitor.c **** 
1211:VS4210/monitor.c **** 		WriteEEP(EEP_AutoMode, 0xFF); // Auto Day&Night...... OFF
1212:VS4210/monitor.c **** 		WriteEEP(EEP_CONTRAST, 0xFF);
1213:VS4210/monitor.c **** 		WriteEEP(EEP_BRIGHTNESS, 0xFF);
1214:VS4210/monitor.c **** 		WriteEEP(EEP_SATURATION_U, 0xFF);
1215:VS4210/monitor.c **** 		WriteEEP(EEP_SHARPNESS, 0xFF);
1216:VS4210/monitor.c **** 		WriteEEP(EEP_HUE, 0xFF);
1217:VS4210/monitor.c **** 		WriteEEP(EEP_BACKLIGHT, 0xFF);
1218:VS4210/monitor.c **** 
1219:VS4210/monitor.c **** 		WriteEEP(EEP_IMAGEMode, 0xFF);	// IMAGEMode..... SINGLE
1220:VS4210/monitor.c **** 		WriteEEP(EEP_RearMode, 0xFF);	// RearMode...... R
1221:VS4210/monitor.c **** 		WriteEEP(EEP_TriggerVGA, 0xFF); // trigger vga...... on
1222:VS4210/monitor.c **** 		WriteEEP(EEP_GAUGEMode, 0xFF);	// �˨�OSD....... ON
1223:VS4210/monitor.c **** 		WriteEEP(EEP_Powerflag, 0xFF);	// POWER FLAG....... ON
1224:VS4210/monitor.c **** 		WriteEEP(EEP_COSDMode, 0xFF);	// Display OSD... ON
1225:VS4210/monitor.c **** 		WriteEEP(EEP_DVRDisplay, 0xFF); // DVR Display OSD... ON
1226:VS4210/monitor.c **** 		WriteEEP(EEP_CAMAMode, 0xFF);	// MirrorA....... OFF
1227:VS4210/monitor.c **** 		WriteEEP(EEP_CAMBMode, 0xFF);	// MirrorB....... OFF
1228:VS4210/monitor.c **** 		WriteEEP(EEP_CAMCMode, 0xFF);	// MirrorC....... OFF
1229:VS4210/monitor.c **** 		WriteEEP(EEP_CAMRMode, 0xFF);	// MirrorR....... ON
1230:VS4210/monitor.c **** 		WriteEEP(EEP_CAMDMode, 0xFF);	// MirrorD....... ON
1231:VS4210/monitor.c **** 
1232:VS4210/monitor.c **** 		WriteEEP(EEP_AUDIOPVOL, 0xFF); // AudioVol
1233:VS4210/monitor.c **** 
1234:VS4210/monitor.c **** 		WriteEEP(EEP_GAUGEMode, 0xFF);
1235:VS4210/monitor.c **** 
1236:VS4210/monitor.c **** 		WriteEEP(EEP_ONOFFChoice, 0xFF); // osd lock oFF
1237:VS4210/monitor.c **** 		WriteEEP(EEP_MenuTouch, 0xFF);	 // Menu Touch select....... OFF
1238:VS4210/monitor.c **** 
1239:VS4210/monitor.c **** 		WriteEEP(EEP_Auto_Sleeping, 0xFF); // Auto sleeping=OFF
1240:VS4210/monitor.c **** 		WriteEEP(EEP_Triple_Screen_Type, 0xFF);
1241:VS4210/monitor.c **** 
1242:VS4210/monitor.c **** 		WriteEEP(EEP_Distance_Gauge_Position, 0xFF);
1243:VS4210/monitor.c **** 		WriteEEP(EEP_Distance_Gauge_Width, 0xFF);
1244:VS4210/monitor.c **** 
1245:VS4210/monitor.c **** 		WriteEEP(EEP_Grabber_Liner, 0xFF); // default OFF
1246:VS4210/monitor.c **** 		WriteEEP(EEP_Grabber_Liner_Position, 0xFF);
1247:VS4210/monitor.c **** 		WriteEEP(EEP_Grabber_Liner_Width, 0xFF);
1248:VS4210/monitor.c **** 
1249:VS4210/monitor.c **** 		//  ChangeVol(0);
1250:VS4210/monitor.c **** 		WriteEEP(EEP_PCAUDIOPVOL, 0xFF);
1251:VS4210/monitor.c **** 		WriteEEP(EEP_AudioRecord, 0xFF); // dvr audio channel
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 67


1252:VS4210/monitor.c **** 
1253:VS4210/monitor.c **** 		WriteEEP(EEP_IMAGE_A_Mode, 0xFF);
1254:VS4210/monitor.c **** 		WriteEEP(EEP_IMAGE_B_Mode, 0xFF);
1255:VS4210/monitor.c **** 		WriteEEP(EEP_IMAGE_C_Mode, 0xFF);
1256:VS4210/monitor.c **** 
1257:VS4210/monitor.c **** 		WriteEEP(EEP_DELAYCAMA, 0xFF); // DELAY CAM A....... 2
1258:VS4210/monitor.c **** 		WriteEEP(EEP_DELAYCAMB, 0xFF); // DELAY CAM B....... 2
1259:VS4210/monitor.c **** 		WriteEEP(EEP_DELAYCAMC, 0xFF); // DELAY CAM C....... 2
1260:VS4210/monitor.c **** 		WriteEEP(EEP_DELAYCAMR, 0xFF); // DELAY CAM R....... 2
1261:VS4210/monitor.c **** 		WriteEEP(EEP_DELAYCAMD, 0xFF); // DELAY CAM D....... 2
1262:VS4210/monitor.c **** 
1263:VS4210/monitor.c **** 		WriteEEP(EEP_JUMPMode, 0xFF);	 // JUMPMode...... QUAL
1264:VS4210/monitor.c **** 		WriteEEP(EEP_ONOFFChoice, 0xFF); // OSD	lock....... off
1265:VS4210/monitor.c **** 		// TP2824 video data reset
1266:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_STD0, 0xFF);
1267:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_MODE0, 0xFF);
1268:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_STD1, 0xFF);
1269:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_MODE1, 0xFF);
1270:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_STD2, 0xFF);
1271:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_MODE2, 0xFF);
1272:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_STD3, 0xFF);
1273:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_MODE3, 0xFF);
1274:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_STD4, 0xFF);
1275:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_MODE4, 0xFF);
1276:VS4210/monitor.c **** 
1277:VS4210/monitor.c **** 		// WriteEEP(EEP_JUMPMode,0);
1278:VS4210/monitor.c **** 
1279:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_STD0 + (0 * 3) + 2, 0xFF);
1280:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_STD0 + (1 * 3) + 2, 0xFF);
1281:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_STD0 + (2 * 3) + 2, 0xFF);
1282:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_STD0 + (3 * 3) + 2, 0xFF);
1283:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_STD0 + (4 * 3) + 2, 0xFF);
1284:VS4210/monitor.c **** 
1285:VS4210/monitor.c **** 		WriteEEP(EEP_FlishCAM1, 0xFF);
1286:VS4210/monitor.c **** 		WriteEEP(EEP_FlishCAM2, 0xFF);
1287:VS4210/monitor.c **** 		WriteEEP(EEP_FlishCAM3, 0xFF);
1288:VS4210/monitor.c **** 		WriteEEP(EEP_FlishCAM4, 0xFF);
1289:VS4210/monitor.c **** 		WriteEEP(EEP_TimeStep, 0xFF);	// TimerStep.....02
1290:VS4210/monitor.c **** 		WriteEEP(EEP_CAMOutMode, 0xFF); // CAMOut........ QUAL
1291:VS4210/monitor.c **** 
1292:VS4210/monitor.c **** 		WriteEEP(EEP_NowModeState, 0xFF);
1293:VS4210/monitor.c **** 
1294:VS4210/monitor.c **** 		WriteEEP(EEP_SelectMode, 0xFF);
1295:VS4210/monitor.c **** 
1296:VS4210/monitor.c **** 		Printf("\r\nEEPROM CLEAN_END");
1297:VS4210/monitor.c **** 	}
1298:VS4210/monitor.c **** #if 0
1299:VS4210/monitor.c **** 	else if( !stricmp( (BYTE *)argv[0],(BYTE *) "INC" ))
1300:VS4210/monitor.c **** 		{
1301:VS4210/monitor.c **** 		BYTE a,d,b0,b1,b2,b3;
1302:VS4210/monitor.c **** 		b0= tp28xx_byte_read(0x30);
1303:VS4210/monitor.c **** 		b1= tp28xx_byte_read(0x31);
1304:VS4210/monitor.c **** 		b2= tp28xx_byte_read(0x32);
1305:VS4210/monitor.c **** 		b3= tp28xx_byte_read(0x33);	
1306:VS4210/monitor.c **** 	
1307:VS4210/monitor.c **** 		// a=Asc2Bin(argv[1]); 
1308:VS4210/monitor.c **** 		// d=Asc2Bin(argv[2]); 
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 68


1309:VS4210/monitor.c **** 		 
1310:VS4210/monitor.c **** 	 for(b1;b0<240;b1+=4)
1311:VS4210/monitor.c **** 	 {
1312:VS4210/monitor.c **** 		if(b1>240)
1313:VS4210/monitor.c **** 			{
1314:VS4210/monitor.c **** 			b1=0;
1315:VS4210/monitor.c **** 			b0++;
1316:VS4210/monitor.c **** 			}
1317:VS4210/monitor.c **** 		
1318:VS4210/monitor.c **** 		
1319:VS4210/monitor.c **** //	        tp28xx_byte_write(0x33,b3);	 
1320:VS4210/monitor.c **** //	 	 tp28xx_byte_write(0x32,b2);	 
1321:VS4210/monitor.c **** 	 	 tp28xx_byte_write(0x31,b1);	 
1322:VS4210/monitor.c **** 	 	tp28xx_byte_write(0x30,b0);	 
1323:VS4210/monitor.c **** 	 
1324:VS4210/monitor.c ****   Printf("\r\nTP2824  Read addr=0x30313233  data=%02x%02x%02x%02x" ,(WORD)tp28xx_byte_read(0x30),(W
1325:VS4210/monitor.c ****   	,(WORD)tp28xx_byte_read(0x32),(WORD)tp28xx_byte_read(0x33));
1326:VS4210/monitor.c **** 
1327:VS4210/monitor.c **** 		msleep(1000);
1328:VS4210/monitor.c **** 	 }
1329:VS4210/monitor.c **** 
1330:VS4210/monitor.c **** 		}
1331:VS4210/monitor.c **** #endif
1332:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"DEC"))
1333:VS4210/monitor.c **** 	{
1334:VS4210/monitor.c **** 	}
1335:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"DTP"))
1336:VS4210/monitor.c **** 	{
1337:VS4210/monitor.c **** 		WORD n, i;
1338:VS4210/monitor.c **** 
1339:VS4210/monitor.c **** 		addr = Asc2Bin(argv[1]);
1340:VS4210/monitor.c **** 		addr <<= 8;
1341:VS4210/monitor.c **** 		addr |= Asc2Bin(argv[2]);
1342:VS4210/monitor.c **** 
1343:VS4210/monitor.c **** 		n = Asc2Bin(argv[3]);
1344:VS4210/monitor.c **** 
1345:VS4210/monitor.c **** 		Printf("\r\nDUMP GT911 Reg..");
1346:VS4210/monitor.c **** 
1347:VS4210/monitor.c **** 		for (i = 0; i < n; i++)
1348:VS4210/monitor.c **** 		{
1349:VS4210/monitor.c **** 			GET_nGT911(addr + i, &temp, 1);
1350:VS4210/monitor.c **** 			Printf("\r\nAddr=%04x Data=%02x", (WORD)addr + i, (WORD)temp);
1351:VS4210/monitor.c **** 		}
1352:VS4210/monitor.c **** 	}
1353:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"SETBOX"))
1354:VS4210/monitor.c **** 	{
1355:VS4210/monitor.c **** 		SetCOCCom(25, Asc2Bin(argv[1]));
1356:VS4210/monitor.c **** 		SetCOCCom(21, 0);
1357:VS4210/monitor.c **** 	}
1358:VS4210/monitor.c **** 
1359:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"DF"))
1360:VS4210/monitor.c **** 	{
1361:VS4210/monitor.c **** 		BYTE i;
1362:VS4210/monitor.c **** 		for (i = 0; i < 4; i++)
1363:VS4210/monitor.c **** 		{
1364:VS4210/monitor.c **** 			Printf("\r\nFlisheye_CAM[%02x]=%02x", (WORD)i, (WORD)Flisheye_CAM[i]);
1365:VS4210/monitor.c **** 		}
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 69


1366:VS4210/monitor.c **** 		Printf("\r\nQuadBoxId=%02x", (WORD)QuadBoxId);
1367:VS4210/monitor.c **** 	}
1368:VS4210/monitor.c **** 	/*
1369:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "i" ) ) {
1370:VS4210/monitor.c **** 		MonIndex = Asc2Bin( argv[1] );
1371:VS4210/monitor.c **** 		WriteI2C(MonAddress, 0xc5, MonIndex);
1372:VS4210/monitor.c **** 		MonRdata = ReadI2C(MonAddress, 0xc6);
1373:VS4210/monitor.c **** 		Printf("\r\n==> Read %2xh:%2xh", (WORD)MonIndex, (WORD)MonRdata);
1374:VS4210/monitor.c **** 
1375:VS4210/monitor.c **** 	}
1376:VS4210/monitor.c **** 	*/
1377:VS4210/monitor.c **** 	/*
1378:VS4210/monitor.c **** 	//---------------- Dump Register --------------------
1379:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "D" ) ) {
1380:VS4210/monitor.c **** 		Puts("\r\ndump start");
1381:VS4210/monitor.c **** 		MonDumpI2C();
1382:VS4210/monitor.c **** 	}
1383:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "&" ) ) {
1384:VS4210/monitor.c **** 		indirect=0;
1385:VS4210/monitor.c **** 		MonNewDumpI2C();
1386:VS4210/monitor.c **** 	}
1387:VS4210/monitor.c **** 
1388:VS4210/monitor.c **** 	//---------------- Bit Operation --------------------
1389:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "B" ) ) {// Write bits - B AA II bb DD
1390:VS4210/monitor.c **** 		MonWriteBit();
1391:VS4210/monitor.c **** 	}
1392:VS4210/monitor.c **** 	//---------------- AD5110 CMD --------------------
1393:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "PSW" ) ) {
1394:VS4210/monitor.c **** 		PSW_Flag=1;
1395:VS4210/monitor.c **** 		Printf("\r\n(PSW_Flag =1)");
1396:VS4210/monitor.c **** 	}
1397:VS4210/monitor.c **** 	//---------------- AD5110 CMD --------------------
1398:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "ADW" ) ) {
1399:VS4210/monitor.c **** 		WriteAD5110(Asc2Bin(argv[1]),Asc2Bin(argv[2]));
1400:VS4210/monitor.c **** 		Printf("\r\nAD5110 Write addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)Asc2Bin(argv[2]));
1401:VS4210/monitor.c **** 	}
1402:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "ADR" ) ) {
1403:VS4210/monitor.c **** 		ReadAD5110(Asc2Bin(argv[1]));
1404:VS4210/monitor.c **** 		Printf("\r\nAD5110 Read addr=%02x  data=%02x",(WORD)Asc2Bin(argv[1]),(WORD)ReadAD5110(Asc2Bin(arg
1405:VS4210/monitor.c **** 	}
1406:VS4210/monitor.c **** */
1407:VS4210/monitor.c **** 	/*	no indirect addressing in TW8816
1408:VS4210/monitor.c **** 	//---------------------------------------------------
1409:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "@" ) ) { // Indirect address bit access
1410:VS4210/monitor.c **** 
1411:VS4210/monitor.c **** 					BYTE Slave, mask, FromBit, ToBit,  MonMask, val,i;
1412:VS4210/monitor.c **** 					// @ 8a iaddr idata index  startbit|endbit  data
1413:VS4210/monitor.c **** 					// 0  1   2    3     4     5                 6
1414:VS4210/monitor.c **** 
1415:VS4210/monitor.c **** 					if( argc<7 ) {
1416:VS4210/monitor.c **** 						Printf("   --> Missing parameter !!!");
1417:VS4210/monitor.c **** 						return;
1418:VS4210/monitor.c **** 					}
1419:VS4210/monitor.c **** 
1420:VS4210/monitor.c **** 					Slave = Asc2Bin(argv[1]);
1421:VS4210/monitor.c **** 
1422:VS4210/monitor.c **** 					FromBit = Asc2Bin( argv[5] );
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 70


1423:VS4210/monitor.c **** 					FromBit  = ( FromBit >> 4) & 0x0f;
1424:VS4210/monitor.c **** 					ToBit = Asc2Bin( argv[5] );
1425:VS4210/monitor.c **** 					ToBit  =  ToBit & 0x0f;
1426:VS4210/monitor.c **** 					MonMask  = Asc2Bin( argv[6] );
1427:VS4210/monitor.c **** 
1428:VS4210/monitor.c **** 					if( FromBit<ToBit || FromBit>7 || ToBit>7) {
1429:VS4210/monitor.c **** 						Printf("\r\n   --> Wrong range of bit operation !!!");
1430:VS4210/monitor.c **** 						return;
1431:VS4210/monitor.c **** 					}
1432:VS4210/monitor.c **** 
1433:VS4210/monitor.c **** 					mask = 0xff;
1434:VS4210/monitor.c **** 					val=0x7f;
1435:VS4210/monitor.c **** 					for(i=7; i>FromBit; i--) {
1436:VS4210/monitor.c **** 						mask &= val;
1437:VS4210/monitor.c **** 						val = val>>1;
1438:VS4210/monitor.c **** 					}
1439:VS4210/monitor.c **** 
1440:VS4210/monitor.c **** 					val=0xfe;
1441:VS4210/monitor.c **** 					for(i=0; i<ToBit; i++) {
1442:VS4210/monitor.c **** 						mask &= val;
1443:VS4210/monitor.c **** 						val = val<<1;
1444:VS4210/monitor.c **** 					}
1445:VS4210/monitor.c **** 
1446:VS4210/monitor.c **** 					// @ 8a iaddr idata index  startbit|endbit  data
1447:VS4210/monitor.c **** 					// 0  1   2    3     4     5                 6
1448:VS4210/monitor.c **** 					MonIndex = Asc2Bin(argv[2]);
1449:VS4210/monitor.c **** 					MonWdata = Asc2Bin(argv[4]);
1450:VS4210/monitor.c **** 					WriteI2C( Slave, MonIndex, MonWdata);
1451:VS4210/monitor.c **** 
1452:VS4210/monitor.c **** 					MonRdata = ReadI2C(Slave, Asc2Bin( argv[3]));
1453:VS4210/monitor.c **** 					MonWdata = (MonRdata & (~mask)) | (MonMask & mask);
1454:VS4210/monitor.c **** 					MonIndex = Asc2Bin(argv[3]);
1455:VS4210/monitor.c **** 					WriteI2C(Slave, MonIndex, MonWdata);
1456:VS4210/monitor.c **** 
1457:VS4210/monitor.c **** 					MonRdata = ReadI2C(Slave, MonIndex);
1458:VS4210/monitor.c **** 
1459:VS4210/monitor.c **** 					Printf("\r\n<R>%2x[%2x]=%2x", (WORD)Slave, (WORD)MonIndex, (WORD)MonRdata);
1460:VS4210/monitor.c **** 
1461:VS4210/monitor.c **** 	}
1462:VS4210/monitor.c **** 	//------------------------------------------------------------------
1463:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "!" ) ) //  Indirect address write access
1464:VS4210/monitor.c **** 	{
1465:VS4210/monitor.c **** 					BYTE Slave;
1466:VS4210/monitor.c **** 					// @ 8a iaddr idata index data
1467:VS4210/monitor.c **** 					if( argc<6 ) {
1468:VS4210/monitor.c **** 						Printf("   --> Missing parameter !!!");
1469:VS4210/monitor.c **** 						return;
1470:VS4210/monitor.c **** 					}
1471:VS4210/monitor.c **** 
1472:VS4210/monitor.c **** 					Slave = Asc2Bin(argv[1]);
1473:VS4210/monitor.c **** 
1474:VS4210/monitor.c **** 					MonIndex = Asc2Bin(argv[2]);
1475:VS4210/monitor.c **** 					MonWdata = Asc2Bin(argv[4]);
1476:VS4210/monitor.c **** 					WriteI2C(Slave, MonIndex, MonWdata);
1477:VS4210/monitor.c **** 
1478:VS4210/monitor.c **** 					MonIndex = Asc2Bin(argv[3]);
1479:VS4210/monitor.c **** 					MonWdata = Asc2Bin(argv[5]);
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 71


1480:VS4210/monitor.c **** 					WriteI2C(Slave, MonIndex, MonWdata);
1481:VS4210/monitor.c **** 
1482:VS4210/monitor.c **** 					MonRdata = ReadI2C(Slave, MonIndex);
1483:VS4210/monitor.c **** 
1484:VS4210/monitor.c **** 					Printf("\r\n<R>%2x[%2x]=%2x", (WORD)Slave, (WORD)MonIndex, (WORD)MonRdata);
1485:VS4210/monitor.c **** 
1486:VS4210/monitor.c **** 	}
1487:VS4210/monitor.c **** 	*/
1488:VS4210/monitor.c **** 
1489:VS4210/monitor.c **** 	//---------------- Change I2C -----------------------
1490:VS4210/monitor.c **** 	/*
1491:VS4210/monitor.c **** 	else if( !stricmp( (BYTE *)argv[0],(BYTE *) "C" ) ) {
1492:VS4210/monitor.c **** 		//Monitor_I2C = Asc2Bin( argv[1] );
1493:VS4210/monitor.c **** 		SetNowMode();
1494:VS4210/monitor.c **** 	}
1495:VS4210/monitor.c **** 	*/
1496:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"PON"))
1497:VS4210/monitor.c **** 	{
1498:VS4210/monitor.c **** 		// Monitor_I2C = Asc2Bin( argv[1] );
1499:VS4210/monitor.c **** 		SetNowMode();
1500:VS4210/monitor.c **** 		LCDPowerON(1);
1501:VS4210/monitor.c **** 	}
1502:VS4210/monitor.c **** 
1503:VS4210/monitor.c **** 	//---------------- Help -----------------------------
1504:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"H") || !stricmp((BYTE *)argv[0], (BYTE *)"HELP") || !s
1505:VS4210/monitor.c **** 	{
1506:VS4210/monitor.c **** 		MonHelp();
1507:VS4210/monitor.c **** 	}
1508:VS4210/monitor.c **** 	else if (!stricmp(argv[0], (BYTE *)"PWM"))
1509:VS4210/monitor.c **** 	{
1510:VS4210/monitor.c **** 
1511:VS4210/monitor.c **** 		user_pwm_setvalue(Asc2Bin(argv[1]) * 15);
1512:VS4210/monitor.c **** 
1513:VS4210/monitor.c **** 		Printf("\r\nPWM=%d", (WORD)(Asc2Bin(argv[1]) * 15));
1514:VS4210/monitor.c **** 	}
1515:VS4210/monitor.c **** 	else if (!stricmp(argv[0], (BYTE *)"ALCR"))
1516:VS4210/monitor.c **** 	{
1517:VS4210/monitor.c **** 
1518:VS4210/monitor.c **** 		Printf("\r\nALCR=%04x", (WORD)GET_ALC122(0x02));
1519:VS4210/monitor.c **** 	}
1520:VS4210/monitor.c **** 	else if (!stricmp(argv[0], (BYTE *)"ALCW"))
1521:VS4210/monitor.c **** 	{
1522:VS4210/monitor.c **** 		WORD val = 0;
1523:VS4210/monitor.c **** 		val = Asc2Bin(argv[1]);
1524:VS4210/monitor.c **** 		val <<= 8;
1525:VS4210/monitor.c **** 		val |= Asc2Bin(argv[1]);
1526:VS4210/monitor.c **** 
1527:VS4210/monitor.c **** 		SET_ALC122(0x02, val);
1528:VS4210/monitor.c **** 
1529:VS4210/monitor.c **** 		Printf("\r\nALCR=%04x", (WORD)GET_ALC122(0x02));
1530:VS4210/monitor.c **** 	}
1531:VS4210/monitor.c **** 	else if (!stricmp(argv[0], (BYTE *)"tri"))
1532:VS4210/monitor.c **** 	{
1533:VS4210/monitor.c **** 
1534:VS4210/monitor.c **** 		TriggerFlag = Asc2Bin(argv[1]);
1535:VS4210/monitor.c **** 
1536:VS4210/monitor.c **** 		Printf("\r\nTriggerFlag=%02x", (WORD)TriggerFlag);
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 72


1537:VS4210/monitor.c **** 	}
1538:VS4210/monitor.c **** 	else if (!stricmp(argv[0], (BYTE *)"triset"))
1539:VS4210/monitor.c **** 	{
1540:VS4210/monitor.c **** 
1541:VS4210/monitor.c **** 		if (Asc2Bin(argv[1]) == 1)
1542:VS4210/monitor.c **** 			bytTriggerTest = 1;
1543:VS4210/monitor.c **** 		else
1544:VS4210/monitor.c **** 			bytTriggerTest = 0;
1545:VS4210/monitor.c **** 
1546:VS4210/monitor.c **** 		Printf("\r\nbytTriggerTest=%02x", (WORD)bytTriggerTest);
1547:VS4210/monitor.c **** 	}
1548:VS4210/monitor.c **** 	else if (!stricmp(argv[0], (BYTE *)"sw"))
1549:VS4210/monitor.c **** 	{
1550:VS4210/monitor.c **** 		BYTE ch, win;
1551:VS4210/monitor.c **** 		ch = Asc2Bin(argv[1]);
1552:VS4210/monitor.c **** 		win = Asc2Bin((BYTE *)argv[2]);
1553:VS4210/monitor.c **** 		VS4210_SwitchChannel(ch, win);
1554:VS4210/monitor.c **** 
1555:VS4210/monitor.c **** 		Printf("\r\n(VS4210_SwitchChannel ch=%02x win=%02x)", (WORD)ch, (WORD)win);
1556:VS4210/monitor.c **** 	}
1557:VS4210/monitor.c **** 	else if (!stricmp(argv[0], (BYTE *)"sel"))
1558:VS4210/monitor.c **** 	{
1559:VS4210/monitor.c **** 		BYTE ch;
1560:VS4210/monitor.c **** 		ch = Asc2Bin(argv[1]);
1561:VS4210/monitor.c **** 
1562:VS4210/monitor.c **** 		if (ch == 3)
1563:VS4210/monitor.c **** 		{
1564:VS4210/monitor.c **** 			CAM_R_SW(ON);
1565:VS4210/monitor.c **** 			CAM_D_SW(OFF);
1566:VS4210/monitor.c **** 			Printf("\r\n(Select CAM R)");
1567:VS4210/monitor.c **** 		}
1568:VS4210/monitor.c **** 		else if (ch == 4)
1569:VS4210/monitor.c **** 		{
1570:VS4210/monitor.c **** 			CAM_R_SW(OFF);
1571:VS4210/monitor.c **** 			CAM_D_SW(ON);
1572:VS4210/monitor.c **** 			Printf("\r\n(Select CAM D)");
1573:VS4210/monitor.c **** 		}
1574:VS4210/monitor.c **** 		else
1575:VS4210/monitor.c **** 		{
1576:VS4210/monitor.c **** 			CAM_R_SW(ON);
1577:VS4210/monitor.c **** 			CAM_D_SW(OFF);
1578:VS4210/monitor.c **** 			Printf("\r\n(CAM D and CAM R for OFF)");
1579:VS4210/monitor.c **** 		}
1580:VS4210/monitor.c **** 	}
1581:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"dpreg"))
1582:VS4210/monitor.c **** 	{
1583:VS4210/monitor.c **** 		BYTE i;
1584:VS4210/monitor.c **** 		for (i = 0; i < 4; i++)
1585:VS4210/monitor.c **** 		{ /*
1586:VS4210/monitor.c **** 			 count[i] = 0;
1587:VS4210/monitor.c **** 			 state[i] = VIDEO_UNPLUG;
1588:VS4210/monitor.c **** 			 std[i] = TVI;
1589:VS4210/monitor.c **** 			 mode[i] = NoDet;
1590:VS4210/monitor.c **** 			 egain[4][4];
1591:VS4210/monitor.c **** 			 */
1592:VS4210/monitor.c **** 			Printf("\r\n(ch=%02x count=%02x state=%02x std=%02x mode=%02x)", (WORD)i, (WORD)count[i], (WORD)
1593:VS4210/monitor.c **** 			Printf("(egain[%02x]  [0]=%02x [1]=%02x [2]=%02x [3]=%02x)", (WORD)i, (WORD)egain[i][0], (WORD)e
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 73


1594:VS4210/monitor.c **** 		}
1595:VS4210/monitor.c **** 	}
1596:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"ACCESS"))
1597:VS4210/monitor.c **** 	{
1598:VS4210/monitor.c **** 		//	if( argc==2 ) {
1599:VS4210/monitor.c **** 		AccessEnable = Asc2Bin(argv[1]);
1600:VS4210/monitor.c **** 		//	}
1601:VS4210/monitor.c **** 		Printf("\r\n2824 AUTO ACCESS = %d", (WORD)AccessEnable);
1602:VS4210/monitor.c **** 	}
1603:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"ptz"))
1604:VS4210/monitor.c **** 	{
1605:VS4210/monitor.c **** 
1606:VS4210/monitor.c **** 		PtzTxChNum = Asc2Bin(argv[1]);
1607:VS4210/monitor.c **** 		Printf("\r\n(bytVideoInput=%d)(PtzTxChNum=%d)", (WORD)bytVideoInput, (WORD)PtzTxChNum);
1608:VS4210/monitor.c **** 	}
1609:VS4210/monitor.c **** 	else if (!stricmp((BYTE *)argv[0], (BYTE *)"getvideo"))
1610:VS4210/monitor.c **** 	{
1611:VS4210/monitor.c **** 
1612:VS4210/monitor.c **** 		Printf("\r\n(bytVideoInput=%d)(PtzTxChNum=%d)", (WORD)bytVideoInput, (WORD)PtzTxChNum);
1613:VS4210/monitor.c **** 	}
1614:VS4210/monitor.c **** #endif
1615:VS4210/monitor.c **** 	/*
1616:VS4210/monitor.c **** //---------------------------------------------------
1617:VS4210/monitor.c **** else if( !stricmp( argv[0], "*" ) ) {
1618:VS4210/monitor.c **** 
1619:VS4210/monitor.c **** 			if( argc==1 ) {
1620:VS4210/monitor.c **** 				Printf("\r\n  * 0 : Program default Loader");
1621:VS4210/monitor.c **** 				Printf("\r\n  * 1 : Program external Loader");
1622:VS4210/monitor.c **** 				Printf("\r\n  * 2 : Execute Loader");
1623:VS4210/monitor.c **** 			}
1624:VS4210/monitor.c **** 			else {
1625:VS4210/monitor.c **** 				BYTE mode;
1626:VS4210/monitor.c **** 				mode = Asc2Bin(argv[1]);
1627:VS4210/monitor.c **** 				//Loader(mode);
1628:VS4210/monitor.c **** 			}
1629:VS4210/monitor.c **** }
1630:VS4210/monitor.c **** 
1631:VS4210/monitor.c **** //---------------------------------------------------
1632:VS4210/monitor.c **** #if defined( SUPPORT_PC ) || defined( SUPPORT_DTV )
1633:VS4210/monitor.c **** else if( !stricmp( argv[0], "PCLK" ) ) {
1634:VS4210/monitor.c **** 	PclkAccess();
1635:VS4210/monitor.c **** }
1636:VS4210/monitor.c **** #endif
1637:VS4210/monitor.c **** 
1638:VS4210/monitor.c **** //---------------------------------------------------
1639:VS4210/monitor.c **** else if( !stricmp( argv[0], "POWER" ) ) {
1640:VS4210/monitor.c **** 	//LCDPower();
1641:VS4210/monitor.c **** }
1642:VS4210/monitor.c **** 
1643:VS4210/monitor.c **** //---------------------------------------------------
1644:VS4210/monitor.c **** #if defined( SUPPORT_PC ) || defined( SUPPORT_DTV )
1645:VS4210/monitor.c **** else if( !stricmp( argv[0], "M" ) ) {
1646:VS4210/monitor.c **** 	if( argc==2 ) {
1647:VS4210/monitor.c **** 		if( !stricmp( argv[1], "?" ) ) {
1648:VS4210/monitor.c **** 			BYTE i;
1649:VS4210/monitor.c **** 			Printf("\r\nCurrent Input:%d \r\n", (WORD)InputSelection);
1650:VS4210/monitor.c **** 			for(i=1; struct_InputSelection[i].Id!=0 ; i++)
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 74


1651:VS4210/monitor.c **** 					Printf("%s:%d  ",struct_InputSelection[i].Name,(WORD)struct_InputSelection[i].Id );
1652:VS4210/monitor.c **** 			Printf("\r\n");
1653:VS4210/monitor.c **** 		}
1654:VS4210/monitor.c **** 		else
1655:VS4210/monitor.c **** 			ChangeInput(Asc2Bin( argv[1] ));
1656:VS4210/monitor.c **** 	}
1657:VS4210/monitor.c **** 	else
1658:VS4210/monitor.c **** 		ChangeInput(GetNextInputSelection());
1659:VS4210/monitor.c **** }
1660:VS4210/monitor.c **** //---------------------------------------------------
1661:VS4210/monitor.c **** else if( !stricmp( argv[0], "ACCESS" ) ) {
1662:VS4210/monitor.c **** 	if( argc==2 ) {
1663:VS4210/monitor.c **** 		AccessEnable = Asc2Bin(argv[1]);
1664:VS4210/monitor.c **** 	}
1665:VS4210/monitor.c **** 	Printf("\r\nTW88xx AUTO ACCESS = %d", (WORD)AccessEnable);
1666:VS4210/monitor.c **** }
1667:VS4210/monitor.c **** #if 0
1668:VS4210/monitor.c **** //---------------------------------------------------
1669:VS4210/monitor.c **** else if( !stricmp( argv[0], "AUTODETECT" ) ) {
1670:VS4210/monitor.c **** 	if( argc==2 ) {
1671:VS4210/monitor.c **** 		AutoDetect = Asc2Bin(argv[1]);
1672:VS4210/monitor.c **** 	}
1673:VS4210/monitor.c **** 	Printf("\r\nPC Auto Detect = %d", (WORD)AutoDetect);
1674:VS4210/monitor.c **** }
1675:VS4210/monitor.c **** #endif
1676:VS4210/monitor.c **** //---------------------------------------------------
1677:VS4210/monitor.c **** else if( !stricmp( argv[0], "PCAUTO" ) ) {
1678:VS4210/monitor.c **** 	Puts("\r\nPC Auto Measurement");
1679:VS4210/monitor.c **** 	AutoAdjust();
1680:VS4210/monitor.c **** }
1681:VS4210/monitor.c **** //---------------------------------------------------
1682:VS4210/monitor.c **** else if( !stricmp( argv[0], "PCCOLOR" ) ) {
1683:VS4210/monitor.c **** 	Puts("\r\nPC Color Auto Measurement");
1684:VS4210/monitor.c **** 	AutoColorAdjust();
1685:VS4210/monitor.c **** }
1686:VS4210/monitor.c **** //---------------------------------------------------
1687:VS4210/monitor.c **** else if( !stricmp( argv[0], "7" ) ) {
1688:VS4210/monitor.c **** 	Puts("\r\nGet HPN / VPN");
1689:VS4210/monitor.c **** 	GetHpnVpn(DebugLevel);
1690:VS4210/monitor.c **** }
1691:VS4210/monitor.c **** #endif
1692:VS4210/monitor.c **** //---------------- Debug Level ---------------------
1693:VS4210/monitor.c **** else if ( !stricmp( argv[0], "DEBUG" ) ) {
1694:VS4210/monitor.c **** 	if( argc==2 ) {
1695:VS4210/monitor.c **** 		DebugLevel = Asc2Bin(argv[1]);
1696:VS4210/monitor.c **** 		SaveDebugLevelEE(DebugLevel);
1697:VS4210/monitor.c **** 	}
1698:VS4210/monitor.c **** 	Printf("\r\nDebug Level = %2x", (WORD)DebugLevel);
1699:VS4210/monitor.c **** }
1700:VS4210/monitor.c **** 
1701:VS4210/monitor.c **** //---------------- Display on/off -------------------
1702:VS4210/monitor.c **** else if ( !stricmp( argv[0], "echo" ) ) {
1703:VS4210/monitor.c **** 	if( !stricmp( argv[1], "off" ) ) {
1704:VS4210/monitor.c **** 		echo = 0;
1705:VS4210/monitor.c **** 		Printf("\r\necho off");
1706:VS4210/monitor.c **** 	}
1707:VS4210/monitor.c **** 	else {
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 75


1708:VS4210/monitor.c **** 		echo = 1;
1709:VS4210/monitor.c **** 		Printf("\r\necho on");
1710:VS4210/monitor.c **** 	}
1711:VS4210/monitor.c **** }
1712:VS4210/monitor.c **** //---------------- RESET/ TEST / POWER_DOWN -------------------
1713:VS4210/monitor.c **** else if ( !stricmp( argv[0], "reset" ) ) {
1714:VS4210/monitor.c **** 	if( !stricmp( argv[1], "0" ) ) {
1715:VS4210/monitor.c **** //			P3_4 = 0;
1716:VS4210/monitor.c **** 		Printf("\r\nTW_reset_pin => 0");
1717:VS4210/monitor.c **** 	}
1718:VS4210/monitor.c **** 	else if( !stricmp( argv[1], "1" ) ) {
1719:VS4210/monitor.c **** //		P3_4 = 1;
1720:VS4210/monitor.c **** 		Printf("\r\nTW_reset_pin => 1");
1721:VS4210/monitor.c **** 	}
1722:VS4210/monitor.c **** 	else {
1723:VS4210/monitor.c **** 		//Printf("\r\nTW_reset_pin = %d", (WORD)P3_4);
1724:VS4210/monitor.c **** 	}
1725:VS4210/monitor.c **** }
1726:VS4210/monitor.c **** else if ( !stricmp( argv[0], "test" ) ) {
1727:VS4210/monitor.c **** 	if( !stricmp( argv[1], "0" ) ) {
1728:VS4210/monitor.c **** 		//P0_7 = 0;
1729:VS4210/monitor.c **** 		Printf("\r\nTW_test_pin => 0");
1730:VS4210/monitor.c **** 	}
1731:VS4210/monitor.c **** 	else if( !stricmp( argv[1], "1" ) ) {
1732:VS4210/monitor.c **** 		//P0_7 = 1;
1733:VS4210/monitor.c **** 		Printf("\r\nTW_test_pin => 1");
1734:VS4210/monitor.c **** 	}
1735:VS4210/monitor.c **** 	else {
1736:VS4210/monitor.c **** 	//	Printf("\r\nTW_test_pin = %d", (WORD)P0_7);
1737:VS4210/monitor.c **** 	}
1738:VS4210/monitor.c **** }
1739:VS4210/monitor.c **** else if ( !stricmp( argv[0], "pdn" ) ) {
1740:VS4210/monitor.c **** 	if( !stricmp( argv[1], "0" ) ) {
1741:VS4210/monitor.c **** 	//	P3_7 = 0;
1742:VS4210/monitor.c **** 		Printf("\r\nTW_PowerDown_pin => 0");
1743:VS4210/monitor.c **** 	}
1744:VS4210/monitor.c **** 	else if( !stricmp( argv[1], "1" ) ) {
1745:VS4210/monitor.c **** 		//P3_7 = 1;
1746:VS4210/monitor.c **** 		Printf("\r\nTW_PowerDown_pin => 1");
1747:VS4210/monitor.c **** 	}
1748:VS4210/monitor.c **** 	else {
1749:VS4210/monitor.c **** 		//Printf("\r\nTW_PowerDown_pin = %d", (WORD)P3_7);
1750:VS4210/monitor.c **** 	}
1751:VS4210/monitor.c **** }
1752:VS4210/monitor.c **** //---------------- OSD test for parallel -----------------------------------
1753:VS4210/monitor.c **** else if( !stricmp( argv[0], "OSD" ) ) {
1754:VS4210/monitor.c **** 	if( !stricmp( argv[1], "logo" ) ) {
1755:VS4210/monitor.c **** //			DisplayLogo();
1756:VS4210/monitor.c **** 	}
1757:VS4210/monitor.c **** 	else if( !stricmp( argv[1], "end" ) ) {
1758:VS4210/monitor.c **** 		Puts("\r\nIf you'd like to exit, press any Key....");
1759:VS4210/monitor.c **** 		while ( !RS_ready() ){
1760:VS4210/monitor.c **** 			P2 = ReadTW88( 0x95 );
1761:VS4210/monitor.c **** 		}
1762:VS4210/monitor.c **** 	}
1763:VS4210/monitor.c **** 	else if( !stricmp( argv[1], "input" ) ) {
1764:VS4210/monitor.c **** //			DisplayInput();
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 76


1765:VS4210/monitor.c **** 	}
1766:VS4210/monitor.c **** 	else if( !stricmp( argv[1], "off" ) ) {
1767:VS4210/monitor.c **** ////			ShowOSDWindowAll(OFF);
1768:VS4210/monitor.c **** 	}
1769:VS4210/monitor.c **** 	//else if( !stricmp( argv[1], "grid" ) ) {
1770:VS4210/monitor.c **** 	//	DisplayGrid();
1771:VS4210/monitor.c **** 	//}
1772:VS4210/monitor.c **** #if 0
1773:VS4210/monitor.c **** #ifndef BANKING
1774:VS4210/monitor.c **** 	else if( !stricmp( argv[1], "cone" ) ) {
1775:VS4210/monitor.c **** 		DisplayCone();
1776:VS4210/monitor.c **** 		DisplayJapanese();
1777:VS4210/monitor.c **** 	}
1778:VS4210/monitor.c **** #endif
1779:VS4210/monitor.c **** #endif
1780:VS4210/monitor.c **** 	#ifdef BANKING
1781:VS4210/monitor.c **** 	else if( !stricmp( argv[1], "agrid" ) ) {
1782:VS4210/monitor.c **** 		BYTE i, j, k;
1783:VS4210/monitor.c **** 		Puts("\r\nIf you'd like to exit, press any Key....");
1784:VS4210/monitor.c **** 		j = 0;
1785:VS4210/monitor.c **** 		k = 0;
1786:VS4210/monitor.c **** 		DisplayMessage();
1787:VS4210/monitor.c **** 		if ( argc == 3 )
1788:VS4210/monitor.c **** 			i = Asc2Bin(argv[2]);
1789:VS4210/monitor.c **** 		else i = 0;
1790:VS4210/monitor.c **** 		while ( !RS_ready() ){
1791:VS4210/monitor.c **** 			if ( j < 9 )
1792:VS4210/monitor.c **** 				DisplayGridBank0(j);
1793:VS4210/monitor.c **** 			else
1794:VS4210/monitor.c **** 				DisplayGridBank1(j);
1795:VS4210/monitor.c **** 			if ( i )
1796:VS4210/monitor.c **** 				delay(10*i);
1797:VS4210/monitor.c **** 			if (k==0) {
1798:VS4210/monitor.c **** 				if (j==16) {
1799:VS4210/monitor.c **** 					k = 1;
1800:VS4210/monitor.c **** 					j--;
1801:VS4210/monitor.c **** 				}
1802:VS4210/monitor.c **** 				else j++;
1803:VS4210/monitor.c **** 			}
1804:VS4210/monitor.c **** 			else {
1805:VS4210/monitor.c **** 				if ( j==0 ) {
1806:VS4210/monitor.c **** 					k = 0;
1807:VS4210/monitor.c **** 					j++;
1808:VS4210/monitor.c **** 				}
1809:VS4210/monitor.c **** 				else j--;
1810:VS4210/monitor.c **** 			}
1811:VS4210/monitor.c **** 		}
1812:VS4210/monitor.c **** 	}
1813:VS4210/monitor.c **** 	else if( !stricmp( argv[1], "cgrid" ) ) {
1814:VS4210/monitor.c **** 		BYTE i, j, k;
1815:VS4210/monitor.c **** 		Puts("\r\nIf you'd like to exit, press any Key....");
1816:VS4210/monitor.c **** 		j = 0;
1817:VS4210/monitor.c **** 		k = 0;
1818:VS4210/monitor.c **** 		DisplayChinese();
1819:VS4210/monitor.c **** 		if ( argc == 3 )
1820:VS4210/monitor.c **** 			i = Asc2Bin(argv[2]);
1821:VS4210/monitor.c **** 		else i = 0;
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 77


1822:VS4210/monitor.c **** 		while ( !RS_ready() ){
1823:VS4210/monitor.c **** 			if ( j < 9 )
1824:VS4210/monitor.c **** 				DisplayGridBank0(j);
1825:VS4210/monitor.c **** 			else
1826:VS4210/monitor.c **** 				DisplayGridBank1(j);
1827:VS4210/monitor.c **** 			if ( i )
1828:VS4210/monitor.c **** 				delay(10*i);
1829:VS4210/monitor.c **** 			if (k==0) {
1830:VS4210/monitor.c **** 				if (j==16) {
1831:VS4210/monitor.c **** 					k = 1;
1832:VS4210/monitor.c **** 					j--;
1833:VS4210/monitor.c **** 				}
1834:VS4210/monitor.c **** 				else j++;
1835:VS4210/monitor.c **** 			}
1836:VS4210/monitor.c **** 			else {
1837:VS4210/monitor.c **** 				if ( j==0 ) {
1838:VS4210/monitor.c **** 					k = 0;
1839:VS4210/monitor.c **** 					j++;
1840:VS4210/monitor.c **** 				}
1841:VS4210/monitor.c **** 				else j--;
1842:VS4210/monitor.c **** 			}
1843:VS4210/monitor.c **** 		}
1844:VS4210/monitor.c **** 	}
1845:VS4210/monitor.c **** 	else if( !stricmp( argv[1], "jgrid" ) ) {
1846:VS4210/monitor.c **** 		BYTE i, j, k;
1847:VS4210/monitor.c **** 		Puts("\r\nIf you'd like to exit, press any Key....");
1848:VS4210/monitor.c **** 		j = 0;
1849:VS4210/monitor.c **** 		k = 0;
1850:VS4210/monitor.c **** 		DisplayJapanese();
1851:VS4210/monitor.c **** 		if ( argc == 3 )
1852:VS4210/monitor.c **** 			i = Asc2Bin(argv[2]);
1853:VS4210/monitor.c **** 		else i = 0;
1854:VS4210/monitor.c **** 		while ( !RS_ready() ){
1855:VS4210/monitor.c **** 			if ( j < 9 )
1856:VS4210/monitor.c **** 				DisplayGridBank0(j);
1857:VS4210/monitor.c **** 			else
1858:VS4210/monitor.c **** 				DisplayGridBank1(j);
1859:VS4210/monitor.c **** 			if ( i )
1860:VS4210/monitor.c **** 				delay(10*i);
1861:VS4210/monitor.c **** 			if (k==0) {
1862:VS4210/monitor.c **** 				if (j==16) {
1863:VS4210/monitor.c **** 					k = 1;
1864:VS4210/monitor.c **** 					j--;
1865:VS4210/monitor.c **** 				}
1866:VS4210/monitor.c **** 				else j++;
1867:VS4210/monitor.c **** 			}
1868:VS4210/monitor.c **** 			else {
1869:VS4210/monitor.c **** 				if ( j==0 ) {
1870:VS4210/monitor.c **** 					k = 0;
1871:VS4210/monitor.c **** 					j++;
1872:VS4210/monitor.c **** 				}
1873:VS4210/monitor.c **** 				else j--;
1874:VS4210/monitor.c **** 			}
1875:VS4210/monitor.c **** 		}
1876:VS4210/monitor.c **** 	}
1877:VS4210/monitor.c **** 	else if( !stricmp( argv[1], "kgrid" ) ) {
1878:VS4210/monitor.c **** 		BYTE i, j, k;
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 78


1879:VS4210/monitor.c **** 		Puts("\r\nIf you'd like to exit, press any Key....");
1880:VS4210/monitor.c **** 		j = 0;
1881:VS4210/monitor.c **** 		k = 0;
1882:VS4210/monitor.c **** 		DisplayKorean();
1883:VS4210/monitor.c **** 		if ( argc == 3 )
1884:VS4210/monitor.c **** 			i = Asc2Bin(argv[2]);
1885:VS4210/monitor.c **** 		else i = 0;
1886:VS4210/monitor.c **** 		while ( !RS_ready() ){
1887:VS4210/monitor.c **** 			if ( j < 9 )
1888:VS4210/monitor.c **** 				DisplayGridBank0(j);
1889:VS4210/monitor.c **** 			else
1890:VS4210/monitor.c **** 				DisplayGridBank1(j);
1891:VS4210/monitor.c **** 			if ( i )
1892:VS4210/monitor.c **** 				delay(10*i);
1893:VS4210/monitor.c **** 			if (k==0) {
1894:VS4210/monitor.c **** 				if (j==16) {
1895:VS4210/monitor.c **** 					k = 1;
1896:VS4210/monitor.c **** 					j--;
1897:VS4210/monitor.c **** 				}
1898:VS4210/monitor.c **** 				else j++;
1899:VS4210/monitor.c **** 			}
1900:VS4210/monitor.c **** 			else {
1901:VS4210/monitor.c **** 				if ( j==0 ) {
1902:VS4210/monitor.c **** 					k = 0;
1903:VS4210/monitor.c **** 					j++;
1904:VS4210/monitor.c **** 				}
1905:VS4210/monitor.c **** 				else j--;
1906:VS4210/monitor.c **** 			}
1907:VS4210/monitor.c **** 		}
1908:VS4210/monitor.c **** 	}
1909:VS4210/monitor.c **** 	#endif
1910:VS4210/monitor.c **** }
1911:VS4210/monitor.c **** //---------------- TELI ML070I Test function -----------------------------------
1912:VS4210/monitor.c **** else if( !stricmp( argv[0], "PWM0" ) ) {
1913:VS4210/monitor.c **** 	SET_PWM(_BL_PWM, Asc2Bin(argv[1]));
1914:VS4210/monitor.c **** 	Puts("\r\nSET PWMP1.4");
1915:VS4210/monitor.c **** }
1916:VS4210/monitor.c **** else if( !stricmp( argv[0], "PWM1" ) ) {
1917:VS4210/monitor.c **** 	SET_PWM(_CHG_CURR, Asc2Bin(argv[1]));
1918:VS4210/monitor.c **** 	Puts("\r\nSET PWMP1.5");
1919:VS4210/monitor.c **** }
1920:VS4210/monitor.c **** else if( !stricmp( argv[0], "PWM" ) ) {
1921:VS4210/monitor.c **** 	if(Asc2Bin(argv[1]))
1922:VS4210/monitor.c **** 		{
1923:VS4210/monitor.c **** 		SET_PWM(_RUN_PWM, _RUN_PWM);
1924:VS4210/monitor.c **** 		Puts("\r\nPOEN PWM");
1925:VS4210/monitor.c **** 		}
1926:VS4210/monitor.c **** 	else
1927:VS4210/monitor.c **** 		{
1928:VS4210/monitor.c **** 		SET_PWM(_STOP_PWM, _STOP_PWM);
1929:VS4210/monitor.c **** 		Puts("\r\nSTOP PWM");
1930:VS4210/monitor.c **** 		}
1931:VS4210/monitor.c **** }
1932:VS4210/monitor.c **** //---------------- serial tx test with some number -----------------------------------
1933:VS4210/monitor.c **** else if( !stricmp( argv[0], "TX" ) ) {
1934:VS4210/monitor.c **** 	MonTxDump();
1935:VS4210/monitor.c **** }
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 79


1936:VS4210/monitor.c **** //---------------- OSD FONTtest for parallel -----------------------------------
1937:VS4210/monitor.c **** else if( !stricmp( argv[0], "FONT" ) ) {
1938:VS4210/monitor.c **** 	if ( !stricmp( argv[1], "RAM" ) ) {
1939:VS4210/monitor.c **** //			DisplayRAMFont( Asc2Bin(argv[2]) );
1940:VS4210/monitor.c **** 	}
1941:VS4210/monitor.c **** 	else if ( !stricmp( argv[1], "ROM" ) ) {
1942:VS4210/monitor.c **** 	//	DisplayROMFont(Asc2Bin(argv[2]));
1943:VS4210/monitor.c **** 	}
1944:VS4210/monitor.c **** 	else {
1945:VS4210/monitor.c **** 		Puts("\r\n Font ROM # or Font RAM # for testing");
1946:VS4210/monitor.c **** 	}
1947:VS4210/monitor.c **** }
1948:VS4210/monitor.c **** */
1949:VS4210/monitor.c **** //---------------- Delta RGB Panel Test -------------------------
1950:VS4210/monitor.c **** #if 0 // def SUPPORT_DELTA_RGB
1951:VS4210/monitor.c **** 
1952:VS4210/monitor.c **** 	else if( !stricmp( argv[0], "delta" ) ) {
1953:VS4210/monitor.c **** 		if( argc==1 )	DeltaRGBPanelInit();
1954:VS4210/monitor.c **** 		else {
1955:VS4210/monitor.c **** 			
1956:VS4210/monitor.c **** 			if( !stricmp( argv[1], "w" ) ) {
1957:VS4210/monitor.c **** 
1958:VS4210/monitor.c **** 				WORD val;
1959:VS4210/monitor.c **** 				val= Asc2Bin(argv[3])<<8 | Asc2Bin(argv[4]);
1960:VS4210/monitor.c **** 				Printf("\r\n SPI Write: Addr:%2x  Data:%4x", (WORD)Asc2Bin(argv[2]), val);
1961:VS4210/monitor.c **** 				WriteSPI(Asc2Bin(argv[2]), val );
1962:VS4210/monitor.c **** 			}
1963:VS4210/monitor.c **** 			else if( !stricmp( argv[1], "r" ) ) {
1964:VS4210/monitor.c **** 				WORD val;
1965:VS4210/monitor.c **** 				val = ReadSPI(Asc2Bin(argv[2]));
1966:VS4210/monitor.c **** 				Printf("\r\n SPI Read: Addr:%2x  Data:%4x", (WORD)Asc2Bin(argv[2]), val);
1967:VS4210/monitor.c **** 			}
1968:VS4210/monitor.c **** 		}
1969:VS4210/monitor.c **** 	}
1970:VS4210/monitor.c **** #endif
1971:VS4210/monitor.c **** 	//----------------------------------------------------
1972:VS4210/monitor.c **** 	else
1973:VS4210/monitor.c **** 	{
1974:VS4210/monitor.c **** 		Printf("\r\nInvalid command...");
1975:VS4210/monitor.c **** 	}
1976:VS4210/monitor.c **** 
1977:VS4210/monitor.c **** #if (HS_DEBUG == ON)
1978:VS4210/monitor.c **** 	Prompt();
1979:VS4210/monitor.c **** #endif
1980:VS4210/monitor.c **** }
 2040              		.loc 1 1980 1 view .LVU413
 2041 0014 09B0     		add	sp, sp, #36
 2042              	.LCFI12:
 2043              		.cfi_remember_state
 2044              		.cfi_def_cfa_offset 20
 2045              		@ sp needed
 2046 0016 F0BD     		pop	{r4, r5, r6, r7, pc}
 2047              	.L210:
 2048              	.LCFI13:
 2049              		.cfi_restore_state
 824:VS4210/monitor.c **** 
 2050              		.loc 1 824 2 is_stmt 1 view .LVU414
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 80


 828:VS4210/monitor.c **** 	{
 2051              		.loc 1 828 2 view .LVU415
 828:VS4210/monitor.c **** 	{
 2052              		.loc 1 828 7 is_stmt 0 view .LVU416
 2053 0018 BA4B     		ldr	r3, .L242+4
 2054 001a 1C68     		ldr	r4, [r3]
 2055 001c BA49     		ldr	r1, .L242+8
 2056 001e 2046     		mov	r0, r4
 2057 0020 FFF7FEFF 		bl	stricmp
 2058              	.LVL128:
 828:VS4210/monitor.c **** 	{
 2059              		.loc 1 828 5 view .LVU417
 2060 0024 0028     		cmp	r0, #0
 2061 0026 40F0C980 		bne	.L124
 831:VS4210/monitor.c **** 		MonWdata = Asc2Bin(argv[2]);
 2062              		.loc 1 831 3 is_stmt 1 view .LVU418
 831:VS4210/monitor.c **** 		MonWdata = Asc2Bin(argv[2]);
 2063              		.loc 1 831 14 is_stmt 0 view .LVU419
 2064 002a B64C     		ldr	r4, .L242+4
 2065 002c 6568     		ldr	r5, [r4, #4]
 2066 002e 2846     		mov	r0, r5
 2067 0030 FFF7FEFF 		bl	Asc2Bin
 2068              	.LVL129:
 831:VS4210/monitor.c **** 		MonWdata = Asc2Bin(argv[2]);
 2069              		.loc 1 831 12 view .LVU420
 2070 0034 B54B     		ldr	r3, .L242+12
 2071 0036 1870     		strb	r0, [r3]
 832:VS4210/monitor.c **** 
 2072              		.loc 1 832 3 is_stmt 1 view .LVU421
 832:VS4210/monitor.c **** 
 2073              		.loc 1 832 14 is_stmt 0 view .LVU422
 2074 0038 A468     		ldr	r4, [r4, #8]
 2075 003a 2046     		mov	r0, r4
 2076 003c FFF7FEFF 		bl	Asc2Bin
 2077              	.LVL130:
 832:VS4210/monitor.c **** 
 2078              		.loc 1 832 12 view .LVU423
 2079 0040 B34B     		ldr	r3, .L242+16
 2080 0042 1870     		strb	r0, [r3]
 841:VS4210/monitor.c **** 		{
 2081              		.loc 1 841 3 is_stmt 1 view .LVU424
 841:VS4210/monitor.c **** 		{
 2082              		.loc 1 841 19 is_stmt 0 view .LVU425
 2083 0044 B34B     		ldr	r3, .L242+20
 2084 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 841:VS4210/monitor.c **** 		{
 2085              		.loc 1 841 6 view .LVU426
 2086 0048 A02B     		cmp	r3, #160
 2087 004a 0CD0     		beq	.L211
 848:VS4210/monitor.c **** 		{
 2088              		.loc 1 848 8 is_stmt 1 view .LVU427
 848:VS4210/monitor.c **** 		{
 2089              		.loc 1 848 11 is_stmt 0 view .LVU428
 2090 004c 402B     		cmp	r3, #64
 2091 004e 27D0     		beq	.L212
 854:VS4210/monitor.c **** 		{
 2092              		.loc 1 854 8 is_stmt 1 view .LVU429
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 81


 854:VS4210/monitor.c **** 		{
 2093              		.loc 1 854 11 is_stmt 0 view .LVU430
 2094 0050 122B     		cmp	r3, #18
 2095 0052 42D0     		beq	.L213
 860:VS4210/monitor.c **** 		{
 2096              		.loc 1 860 8 is_stmt 1 view .LVU431
 860:VS4210/monitor.c **** 		{
 2097              		.loc 1 860 11 is_stmt 0 view .LVU432
 2098 0054 282B     		cmp	r3, #40
 2099 0056 5DD0     		beq	.L214
 876:VS4210/monitor.c **** 		{
 2100              		.loc 1 876 8 is_stmt 1 view .LVU433
 876:VS4210/monitor.c **** 		{
 2101              		.loc 1 876 11 is_stmt 0 view .LVU434
 2102 0058 882B     		cmp	r3, #136
 2103 005a 00F09280 		beq	.L215
 885:VS4210/monitor.c **** 		}
 2104              		.loc 1 885 4 is_stmt 1 view .LVU435
 2105 005e AE48     		ldr	r0, .L242+24
 2106 0060 FFF7FEFF 		bl	Printf
 2107              	.LVL131:
 2108 0064 AFE0     		b	.L126
 2109              	.L211:
 843:VS4210/monitor.c **** 			// tp28xx_byte_write(Asc2Bin(argv[1]), Asc2Bin(argv[2]));
 2110              		.loc 1 843 4 view .LVU436
 843:VS4210/monitor.c **** 			// tp28xx_byte_write(Asc2Bin(argv[1]), Asc2Bin(argv[2]));
 2111              		.loc 1 843 13 is_stmt 0 view .LVU437
 2112 0066 2846     		mov	r0, r5
 2113 0068 FFF7FEFF 		bl	Asc2Bin
 2114              	.LVL132:
 2115 006c 0546     		mov	r5, r0
 843:VS4210/monitor.c **** 			// tp28xx_byte_write(Asc2Bin(argv[1]), Asc2Bin(argv[2]));
 2116              		.loc 1 843 4 view .LVU438
 2117 006e 2046     		mov	r0, r4
 2118 0070 FFF7FEFF 		bl	Asc2Bin
 2119              	.LVL133:
 2120 0074 0146     		mov	r1, r0
 2121 0076 2846     		mov	r0, r5
 2122 0078 FFF7FEFF 		bl	WriteEEP
 2123              	.LVL134:
 845:VS4210/monitor.c **** 			Printf("\r\nEEPROM Write addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2124              		.loc 1 845 4 is_stmt 1 view .LVU439
 845:VS4210/monitor.c **** 			Printf("\r\nEEPROM Write addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2125              		.loc 1 845 18 is_stmt 0 view .LVU440
 2126 007c A14D     		ldr	r5, .L242+4
 2127 007e 6868     		ldr	r0, [r5, #4]
 2128 0080 FFF7FEFF 		bl	Asc2Bin
 2129              	.LVL135:
 845:VS4210/monitor.c **** 			Printf("\r\nEEPROM Write addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2130              		.loc 1 845 10 view .LVU441
 2131 0084 FFF7FEFF 		bl	ReadEEP
 2132              	.LVL136:
 2133 0088 0446     		mov	r4, r0
 845:VS4210/monitor.c **** 			Printf("\r\nEEPROM Write addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2134              		.loc 1 845 8 view .LVU442
 2135 008a 8DF81F00 		strb	r0, [sp, #31]
 846:VS4210/monitor.c **** 		}
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 82


 2136              		.loc 1 846 4 is_stmt 1 view .LVU443
 846:VS4210/monitor.c **** 		}
 2137              		.loc 1 846 58 is_stmt 0 view .LVU444
 2138 008e 6868     		ldr	r0, [r5, #4]
 2139 0090 FFF7FEFF 		bl	Asc2Bin
 2140              	.LVL137:
 2141 0094 0146     		mov	r1, r0
 846:VS4210/monitor.c **** 		}
 2142              		.loc 1 846 4 view .LVU445
 2143 0096 2246     		mov	r2, r4
 2144 0098 A048     		ldr	r0, .L242+28
 2145 009a FFF7FEFF 		bl	Printf
 2146              	.LVL138:
 2147 009e 92E0     		b	.L126
 2148              	.L212:
 850:VS4210/monitor.c **** 			ret = VXISI2CRead(Asc2Bin(argv[1]));
 2149              		.loc 1 850 4 is_stmt 1 view .LVU446
 2150 00a0 2846     		mov	r0, r5
 2151 00a2 FFF7FEFF 		bl	Asc2Bin
 2152              	.LVL139:
 2153 00a6 0546     		mov	r5, r0
 2154 00a8 2046     		mov	r0, r4
 2155 00aa FFF7FEFF 		bl	Asc2Bin
 2156              	.LVL140:
 2157 00ae 0146     		mov	r1, r0
 2158 00b0 2846     		mov	r0, r5
 2159 00b2 FFF7FEFF 		bl	VXISI2CWrite
 2160              	.LVL141:
 851:VS4210/monitor.c **** 			Printf("\r\nVS4210 Write addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2161              		.loc 1 851 4 view .LVU447
 851:VS4210/monitor.c **** 			Printf("\r\nVS4210 Write addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2162              		.loc 1 851 10 is_stmt 0 view .LVU448
 2163 00b6 934D     		ldr	r5, .L242+4
 2164 00b8 6868     		ldr	r0, [r5, #4]
 2165 00ba FFF7FEFF 		bl	Asc2Bin
 2166              	.LVL142:
 2167 00be FFF7FEFF 		bl	VXISI2CRead
 2168              	.LVL143:
 2169 00c2 0446     		mov	r4, r0
 851:VS4210/monitor.c **** 			Printf("\r\nVS4210 Write addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2170              		.loc 1 851 8 view .LVU449
 2171 00c4 8DF81F00 		strb	r0, [sp, #31]
 852:VS4210/monitor.c **** 		}
 2172              		.loc 1 852 4 is_stmt 1 view .LVU450
 852:VS4210/monitor.c **** 		}
 2173              		.loc 1 852 58 is_stmt 0 view .LVU451
 2174 00c8 6868     		ldr	r0, [r5, #4]
 2175 00ca FFF7FEFF 		bl	Asc2Bin
 2176              	.LVL144:
 2177 00ce 0146     		mov	r1, r0
 852:VS4210/monitor.c **** 		}
 2178              		.loc 1 852 4 view .LVU452
 2179 00d0 2246     		mov	r2, r4
 2180 00d2 9348     		ldr	r0, .L242+32
 2181 00d4 FFF7FEFF 		bl	Printf
 2182              	.LVL145:
 2183 00d8 75E0     		b	.L126
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 83


 2184              	.L213:
 856:VS4210/monitor.c **** 			ret = VS8812Read(Asc2Bin(argv[1]));
 2185              		.loc 1 856 4 is_stmt 1 view .LVU453
 2186 00da 2846     		mov	r0, r5
 2187 00dc FFF7FEFF 		bl	Asc2Bin
 2188              	.LVL146:
 2189 00e0 0546     		mov	r5, r0
 2190 00e2 2046     		mov	r0, r4
 2191 00e4 FFF7FEFF 		bl	Asc2Bin
 2192              	.LVL147:
 2193 00e8 0146     		mov	r1, r0
 2194 00ea 2846     		mov	r0, r5
 2195 00ec FFF7FEFF 		bl	VS8812Write
 2196              	.LVL148:
 857:VS4210/monitor.c **** 			Printf("\r\nVS8812 Write addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2197              		.loc 1 857 4 view .LVU454
 857:VS4210/monitor.c **** 			Printf("\r\nVS8812 Write addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2198              		.loc 1 857 10 is_stmt 0 view .LVU455
 2199 00f0 844D     		ldr	r5, .L242+4
 2200 00f2 6868     		ldr	r0, [r5, #4]
 2201 00f4 FFF7FEFF 		bl	Asc2Bin
 2202              	.LVL149:
 2203 00f8 FFF7FEFF 		bl	VS8812Read
 2204              	.LVL150:
 2205 00fc 0446     		mov	r4, r0
 857:VS4210/monitor.c **** 			Printf("\r\nVS8812 Write addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2206              		.loc 1 857 8 view .LVU456
 2207 00fe 8DF81F00 		strb	r0, [sp, #31]
 858:VS4210/monitor.c **** 		}
 2208              		.loc 1 858 4 is_stmt 1 view .LVU457
 858:VS4210/monitor.c **** 		}
 2209              		.loc 1 858 58 is_stmt 0 view .LVU458
 2210 0102 6868     		ldr	r0, [r5, #4]
 2211 0104 FFF7FEFF 		bl	Asc2Bin
 2212              	.LVL151:
 2213 0108 0146     		mov	r1, r0
 858:VS4210/monitor.c **** 		}
 2214              		.loc 1 858 4 view .LVU459
 2215 010a 2246     		mov	r2, r4
 2216 010c 8548     		ldr	r0, .L242+36
 2217 010e FFF7FEFF 		bl	Printf
 2218              	.LVL152:
 2219 0112 58E0     		b	.L126
 2220              	.L214:
 863:VS4210/monitor.c **** 			addr <<= 8;
 2221              		.loc 1 863 4 is_stmt 1 view .LVU460
 863:VS4210/monitor.c **** 			addr <<= 8;
 2222              		.loc 1 863 11 is_stmt 0 view .LVU461
 2223 0114 2846     		mov	r0, r5
 2224 0116 FFF7FEFF 		bl	Asc2Bin
 2225              	.LVL153:
 864:VS4210/monitor.c **** 			addr |= Asc2Bin(argv[2]);
 2226              		.loc 1 864 4 is_stmt 1 view .LVU462
 864:VS4210/monitor.c **** 			addr |= Asc2Bin(argv[2]);
 2227              		.loc 1 864 9 is_stmt 0 view .LVU463
 2228 011a 0502     		lsls	r5, r0, #8
 2229              	.LVL154:
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 84


 865:VS4210/monitor.c **** 
 2230              		.loc 1 865 4 is_stmt 1 view .LVU464
 865:VS4210/monitor.c **** 
 2231              		.loc 1 865 12 is_stmt 0 view .LVU465
 2232 011c 2046     		mov	r0, r4
 2233 011e FFF7FEFF 		bl	Asc2Bin
 2234              	.LVL155:
 865:VS4210/monitor.c **** 
 2235              		.loc 1 865 9 view .LVU466
 2236 0122 0543     		orrs	r5, r5, r0
 2237              	.LVL156:
 867:VS4210/monitor.c **** 			SET_nGT911(addr, &temp, 1);
 2238              		.loc 1 867 4 is_stmt 1 view .LVU467
 867:VS4210/monitor.c **** 			SET_nGT911(addr, &temp, 1);
 2239              		.loc 1 867 11 is_stmt 0 view .LVU468
 2240 0124 774C     		ldr	r4, .L242+4
 2241 0126 E068     		ldr	r0, [r4, #12]
 2242 0128 FFF7FEFF 		bl	Asc2Bin
 2243              	.LVL157:
 867:VS4210/monitor.c **** 			SET_nGT911(addr, &temp, 1);
 2244              		.loc 1 867 9 view .LVU469
 2245 012c 8DF81E00 		strb	r0, [sp, #30]
 868:VS4210/monitor.c **** 
 2246              		.loc 1 868 4 is_stmt 1 view .LVU470
 2247 0130 0122     		movs	r2, #1
 2248 0132 0DF11E01 		add	r1, sp, #30
 2249 0136 2846     		mov	r0, r5
 2250 0138 FFF7FEFF 		bl	SET_nGT911
 2251              	.LVL158:
 870:VS4210/monitor.c **** 
 2252              		.loc 1 870 4 view .LVU471
 870:VS4210/monitor.c **** 
 2253              		.loc 1 870 61 is_stmt 0 view .LVU472
 2254 013c 6068     		ldr	r0, [r4, #4]
 2255 013e FFF7FEFF 		bl	Asc2Bin
 2256              	.LVL159:
 2257 0142 0646     		mov	r6, r0
 870:VS4210/monitor.c **** 
 2258              		.loc 1 870 85 view .LVU473
 2259 0144 A068     		ldr	r0, [r4, #8]
 2260 0146 FFF7FEFF 		bl	Asc2Bin
 2261              	.LVL160:
 2262 014a 0246     		mov	r2, r0
 870:VS4210/monitor.c **** 
 2263              		.loc 1 870 4 view .LVU474
 2264 014c 9DF81E30 		ldrb	r3, [sp, #30]	@ zero_extendqisi2
 2265 0150 3146     		mov	r1, r6
 2266 0152 7548     		ldr	r0, .L242+40
 2267 0154 FFF7FEFF 		bl	Printf
 2268              	.LVL161:
 872:VS4210/monitor.c **** 
 2269              		.loc 1 872 4 is_stmt 1 view .LVU475
 2270 0158 0122     		movs	r2, #1
 2271 015a 0DF11F01 		add	r1, sp, #31
 2272 015e 2846     		mov	r0, r5
 2273 0160 FFF7FEFF 		bl	GET_nGT911
 2274              	.LVL162:
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 85


 874:VS4210/monitor.c **** 		}
 2275              		.loc 1 874 4 view .LVU476
 874:VS4210/monitor.c **** 		}
 2276              		.loc 1 874 60 is_stmt 0 view .LVU477
 2277 0164 6068     		ldr	r0, [r4, #4]
 2278 0166 FFF7FEFF 		bl	Asc2Bin
 2279              	.LVL163:
 2280 016a 0546     		mov	r5, r0
 2281              	.LVL164:
 874:VS4210/monitor.c **** 		}
 2282              		.loc 1 874 84 view .LVU478
 2283 016c A068     		ldr	r0, [r4, #8]
 2284 016e FFF7FEFF 		bl	Asc2Bin
 2285              	.LVL165:
 2286 0172 0246     		mov	r2, r0
 874:VS4210/monitor.c **** 		}
 2287              		.loc 1 874 4 view .LVU479
 2288 0174 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 2289 0178 2946     		mov	r1, r5
 2290 017a 6C48     		ldr	r0, .L242+44
 2291 017c FFF7FEFF 		bl	Printf
 2292              	.LVL166:
 2293 0180 21E0     		b	.L126
 2294              	.L215:
 878:VS4210/monitor.c **** 			ret = tp28xx_byte_read(Asc2Bin(argv[1]));
 2295              		.loc 1 878 4 is_stmt 1 view .LVU480
 2296 0182 2846     		mov	r0, r5
 2297 0184 FFF7FEFF 		bl	Asc2Bin
 2298              	.LVL167:
 2299 0188 0546     		mov	r5, r0
 2300 018a 2046     		mov	r0, r4
 2301 018c FFF7FEFF 		bl	Asc2Bin
 2302              	.LVL168:
 2303 0190 0146     		mov	r1, r0
 2304 0192 2846     		mov	r0, r5
 2305 0194 FFF7FEFF 		bl	tp28xx_byte_write
 2306              	.LVL169:
 879:VS4210/monitor.c **** 			Printf("\r\nTP2824  Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2307              		.loc 1 879 4 view .LVU481
 879:VS4210/monitor.c **** 			Printf("\r\nTP2824  Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2308              		.loc 1 879 10 is_stmt 0 view .LVU482
 2309 0198 5A4D     		ldr	r5, .L242+4
 2310 019a 6868     		ldr	r0, [r5, #4]
 2311 019c FFF7FEFF 		bl	Asc2Bin
 2312              	.LVL170:
 2313 01a0 FFF7FEFF 		bl	tp28xx_byte_read
 2314              	.LVL171:
 2315 01a4 0446     		mov	r4, r0
 879:VS4210/monitor.c **** 			Printf("\r\nTP2824  Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2316              		.loc 1 879 8 view .LVU483
 2317 01a6 8DF81F00 		strb	r0, [sp, #31]
 880:VS4210/monitor.c **** 		}
 2318              		.loc 1 880 4 is_stmt 1 view .LVU484
 880:VS4210/monitor.c **** 		}
 2319              		.loc 1 880 58 is_stmt 0 view .LVU485
 2320 01aa 6868     		ldr	r0, [r5, #4]
 2321 01ac FFF7FEFF 		bl	Asc2Bin
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 86


 2322              	.LVL172:
 2323 01b0 0146     		mov	r1, r0
 880:VS4210/monitor.c **** 		}
 2324              		.loc 1 880 4 view .LVU486
 2325 01b2 2246     		mov	r2, r4
 2326 01b4 5E48     		ldr	r0, .L242+48
 2327 01b6 FFF7FEFF 		bl	Printf
 2328              	.LVL173:
 2329 01ba 04E0     		b	.L126
 2330              	.L124:
 906:VS4210/monitor.c **** 	{
 2331              		.loc 1 906 7 is_stmt 1 view .LVU487
 906:VS4210/monitor.c **** 	{
 2332              		.loc 1 906 12 is_stmt 0 view .LVU488
 2333 01bc 5D49     		ldr	r1, .L242+52
 2334 01be 2046     		mov	r0, r4
 2335 01c0 FFF7FEFF 		bl	stricmp
 2336              	.LVL174:
 906:VS4210/monitor.c **** 	{
 2337              		.loc 1 906 10 view .LVU489
 2338 01c4 10B9     		cbnz	r0, .L216
 2339              	.L126:
1978:VS4210/monitor.c **** #endif
 2340              		.loc 1 1978 2 is_stmt 1 discriminator 1 view .LVU490
 2341 01c6 FFF7FEFF 		bl	Prompt
 2342              	.LVL175:
 2343 01ca 23E7     		b	.L121
 2344              	.L216:
 922:VS4210/monitor.c **** 	{
 2345              		.loc 1 922 7 view .LVU491
 922:VS4210/monitor.c **** 	{
 2346              		.loc 1 922 12 is_stmt 0 view .LVU492
 2347 01cc 5A49     		ldr	r1, .L242+56
 2348 01ce 2046     		mov	r0, r4
 2349 01d0 FFF7FEFF 		bl	stricmp
 2350              	.LVL176:
 922:VS4210/monitor.c **** 	{
 2351              		.loc 1 922 10 view .LVU493
 2352 01d4 0028     		cmp	r0, #0
 2353 01d6 40F0BB80 		bne	.L131
 926:VS4210/monitor.c **** 
 2354              		.loc 1 926 3 is_stmt 1 view .LVU494
 926:VS4210/monitor.c **** 
 2355              		.loc 1 926 14 is_stmt 0 view .LVU495
 2356 01da 4A4B     		ldr	r3, .L242+4
 2357 01dc 5C68     		ldr	r4, [r3, #4]
 2358 01de 2046     		mov	r0, r4
 2359 01e0 FFF7FEFF 		bl	Asc2Bin
 2360              	.LVL177:
 926:VS4210/monitor.c **** 
 2361              		.loc 1 926 12 view .LVU496
 2362 01e4 494B     		ldr	r3, .L242+12
 2363 01e6 1870     		strb	r0, [r3]
 933:VS4210/monitor.c **** 		{
 2364              		.loc 1 933 3 is_stmt 1 view .LVU497
 933:VS4210/monitor.c **** 		{
 2365              		.loc 1 933 19 is_stmt 0 view .LVU498
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 87


 2366 01e8 4A4B     		ldr	r3, .L242+20
 2367 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 933:VS4210/monitor.c **** 		{
 2368              		.loc 1 933 6 view .LVU499
 2369 01ec A02B     		cmp	r3, #160
 2370 01ee 11D0     		beq	.L217
 938:VS4210/monitor.c **** 		{
 2371              		.loc 1 938 8 is_stmt 1 view .LVU500
 938:VS4210/monitor.c **** 		{
 2372              		.loc 1 938 11 is_stmt 0 view .LVU501
 2373 01f0 402B     		cmp	r3, #64
 2374 01f2 21D0     		beq	.L218
 943:VS4210/monitor.c **** 		{
 2375              		.loc 1 943 8 is_stmt 1 view .LVU502
 943:VS4210/monitor.c **** 		{
 2376              		.loc 1 943 11 is_stmt 0 view .LVU503
 2377 01f4 122B     		cmp	r3, #18
 2378 01f6 31D0     		beq	.L219
 948:VS4210/monitor.c **** 		{
 2379              		.loc 1 948 8 is_stmt 1 view .LVU504
 948:VS4210/monitor.c **** 		{
 2380              		.loc 1 948 11 is_stmt 0 view .LVU505
 2381 01f8 282B     		cmp	r3, #40
 2382 01fa 41D0     		beq	.L220
 958:VS4210/monitor.c **** 		{
 2383              		.loc 1 958 8 is_stmt 1 view .LVU506
 958:VS4210/monitor.c **** 		{
 2384              		.loc 1 958 11 is_stmt 0 view .LVU507
 2385 01fc 882B     		cmp	r3, #136
 2386 01fe 5CD0     		beq	.L221
 963:VS4210/monitor.c **** 		{
 2387              		.loc 1 963 8 is_stmt 1 view .LVU508
 963:VS4210/monitor.c **** 		{
 2388              		.loc 1 963 11 is_stmt 0 view .LVU509
 2389 0200 292B     		cmp	r3, #41
 2390 0202 6CD0     		beq	.L222
 971:VS4210/monitor.c **** 		}
 2391              		.loc 1 971 4 is_stmt 1 view .LVU510
 2392 0204 4448     		ldr	r0, .L242+24
 2393 0206 FFF7FEFF 		bl	Printf
 2394              	.LVL178:
 2395              	.L133:
 974:VS4210/monitor.c **** 
 2396              		.loc 1 974 3 view .LVU511
 974:VS4210/monitor.c **** 
 2397              		.loc 1 974 12 is_stmt 0 view .LVU512
 2398 020a 9DF81F20 		ldrb	r2, [sp, #31]	@ zero_extendqisi2
 2399 020e 404B     		ldr	r3, .L242+16
 2400 0210 1A70     		strb	r2, [r3]
 2401 0212 D8E7     		b	.L126
 2402              	.L217:
 935:VS4210/monitor.c **** 			Printf("\r\nEEPROM  Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2403              		.loc 1 935 4 is_stmt 1 view .LVU513
 935:VS4210/monitor.c **** 			Printf("\r\nEEPROM  Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2404              		.loc 1 935 18 is_stmt 0 view .LVU514
 2405 0214 2046     		mov	r0, r4
 2406 0216 FFF7FEFF 		bl	Asc2Bin
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 88


 2407              	.LVL179:
 935:VS4210/monitor.c **** 			Printf("\r\nEEPROM  Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2408              		.loc 1 935 10 view .LVU515
 2409 021a FFF7FEFF 		bl	ReadEEP
 2410              	.LVL180:
 2411 021e 0446     		mov	r4, r0
 935:VS4210/monitor.c **** 			Printf("\r\nEEPROM  Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2412              		.loc 1 935 8 view .LVU516
 2413 0220 8DF81F00 		strb	r0, [sp, #31]
 936:VS4210/monitor.c **** 		}
 2414              		.loc 1 936 4 is_stmt 1 view .LVU517
 936:VS4210/monitor.c **** 		}
 2415              		.loc 1 936 58 is_stmt 0 view .LVU518
 2416 0224 374B     		ldr	r3, .L242+4
 2417 0226 5868     		ldr	r0, [r3, #4]
 2418 0228 FFF7FEFF 		bl	Asc2Bin
 2419              	.LVL181:
 2420 022c 0146     		mov	r1, r0
 936:VS4210/monitor.c **** 		}
 2421              		.loc 1 936 4 view .LVU519
 2422 022e 2246     		mov	r2, r4
 2423 0230 4248     		ldr	r0, .L242+60
 2424 0232 FFF7FEFF 		bl	Printf
 2425              	.LVL182:
 2426 0236 E8E7     		b	.L133
 2427              	.L218:
 940:VS4210/monitor.c **** 			Printf("\r\nVS4210  Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2428              		.loc 1 940 4 is_stmt 1 view .LVU520
 940:VS4210/monitor.c **** 			Printf("\r\nVS4210  Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2429              		.loc 1 940 10 is_stmt 0 view .LVU521
 2430 0238 2046     		mov	r0, r4
 2431 023a FFF7FEFF 		bl	Asc2Bin
 2432              	.LVL183:
 2433 023e FFF7FEFF 		bl	VXISI2CRead
 2434              	.LVL184:
 2435 0242 0446     		mov	r4, r0
 940:VS4210/monitor.c **** 			Printf("\r\nVS4210  Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2436              		.loc 1 940 8 view .LVU522
 2437 0244 8DF81F00 		strb	r0, [sp, #31]
 941:VS4210/monitor.c **** 		}
 2438              		.loc 1 941 4 is_stmt 1 view .LVU523
 941:VS4210/monitor.c **** 		}
 2439              		.loc 1 941 58 is_stmt 0 view .LVU524
 2440 0248 2E4B     		ldr	r3, .L242+4
 2441 024a 5868     		ldr	r0, [r3, #4]
 2442 024c FFF7FEFF 		bl	Asc2Bin
 2443              	.LVL185:
 2444 0250 0146     		mov	r1, r0
 941:VS4210/monitor.c **** 		}
 2445              		.loc 1 941 4 view .LVU525
 2446 0252 2246     		mov	r2, r4
 2447 0254 3A48     		ldr	r0, .L242+64
 2448 0256 FFF7FEFF 		bl	Printf
 2449              	.LVL186:
 2450 025a D6E7     		b	.L133
 2451              	.L219:
 945:VS4210/monitor.c **** 			Printf("\r\nVS8812  Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 89


 2452              		.loc 1 945 4 is_stmt 1 view .LVU526
 945:VS4210/monitor.c **** 			Printf("\r\nVS8812  Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2453              		.loc 1 945 10 is_stmt 0 view .LVU527
 2454 025c 2046     		mov	r0, r4
 2455 025e FFF7FEFF 		bl	Asc2Bin
 2456              	.LVL187:
 2457 0262 FFF7FEFF 		bl	VS8812Read
 2458              	.LVL188:
 2459 0266 0446     		mov	r4, r0
 945:VS4210/monitor.c **** 			Printf("\r\nVS8812  Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2460              		.loc 1 945 8 view .LVU528
 2461 0268 8DF81F00 		strb	r0, [sp, #31]
 946:VS4210/monitor.c **** 		}
 2462              		.loc 1 946 4 is_stmt 1 view .LVU529
 946:VS4210/monitor.c **** 		}
 2463              		.loc 1 946 58 is_stmt 0 view .LVU530
 2464 026c 254B     		ldr	r3, .L242+4
 2465 026e 5868     		ldr	r0, [r3, #4]
 2466 0270 FFF7FEFF 		bl	Asc2Bin
 2467              	.LVL189:
 2468 0274 0146     		mov	r1, r0
 946:VS4210/monitor.c **** 		}
 2469              		.loc 1 946 4 view .LVU531
 2470 0276 2246     		mov	r2, r4
 2471 0278 3248     		ldr	r0, .L242+68
 2472 027a FFF7FEFF 		bl	Printf
 2473              	.LVL190:
 2474 027e C4E7     		b	.L133
 2475              	.L220:
 951:VS4210/monitor.c **** 			addr <<= 8;
 2476              		.loc 1 951 4 is_stmt 1 view .LVU532
 951:VS4210/monitor.c **** 			addr <<= 8;
 2477              		.loc 1 951 11 is_stmt 0 view .LVU533
 2478 0280 2046     		mov	r0, r4
 2479 0282 FFF7FEFF 		bl	Asc2Bin
 2480              	.LVL191:
 952:VS4210/monitor.c **** 			addr |= Asc2Bin(argv[2]);
 2481              		.loc 1 952 4 is_stmt 1 view .LVU534
 952:VS4210/monitor.c **** 			addr |= Asc2Bin(argv[2]);
 2482              		.loc 1 952 9 is_stmt 0 view .LVU535
 2483 0286 0402     		lsls	r4, r0, #8
 2484              	.LVL192:
 953:VS4210/monitor.c **** 
 2485              		.loc 1 953 4 is_stmt 1 view .LVU536
 953:VS4210/monitor.c **** 
 2486              		.loc 1 953 12 is_stmt 0 view .LVU537
 2487 0288 1E4D     		ldr	r5, .L242+4
 2488 028a A868     		ldr	r0, [r5, #8]
 2489 028c FFF7FEFF 		bl	Asc2Bin
 2490              	.LVL193:
 955:VS4210/monitor.c **** 			Printf("\r\nGT911  Read addr=%02x%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)Asc2Bin(argv[2]
 2491              		.loc 1 955 4 is_stmt 1 view .LVU538
 2492 0290 0122     		movs	r2, #1
 2493 0292 0DF11E01 		add	r1, sp, #30
 2494 0296 2043     		orrs	r0, r0, r4
 2495              	.LVL194:
 955:VS4210/monitor.c **** 			Printf("\r\nGT911  Read addr=%02x%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)Asc2Bin(argv[2]
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 90


 2496              		.loc 1 955 4 is_stmt 0 view .LVU539
 2497 0298 FFF7FEFF 		bl	GET_nGT911
 2498              	.LVL195:
 956:VS4210/monitor.c **** 		}
 2499              		.loc 1 956 4 is_stmt 1 view .LVU540
 956:VS4210/monitor.c **** 		}
 2500              		.loc 1 956 61 is_stmt 0 view .LVU541
 2501 029c 6868     		ldr	r0, [r5, #4]
 2502 029e FFF7FEFF 		bl	Asc2Bin
 2503              	.LVL196:
 2504 02a2 0446     		mov	r4, r0
 956:VS4210/monitor.c **** 		}
 2505              		.loc 1 956 85 view .LVU542
 2506 02a4 A868     		ldr	r0, [r5, #8]
 2507 02a6 FFF7FEFF 		bl	Asc2Bin
 2508              	.LVL197:
 2509 02aa 0246     		mov	r2, r0
 956:VS4210/monitor.c **** 		}
 2510              		.loc 1 956 4 view .LVU543
 2511 02ac 9DF81E30 		ldrb	r3, [sp, #30]	@ zero_extendqisi2
 2512 02b0 2146     		mov	r1, r4
 2513 02b2 2548     		ldr	r0, .L242+72
 2514 02b4 FFF7FEFF 		bl	Printf
 2515              	.LVL198:
 2516 02b8 A7E7     		b	.L133
 2517              	.L221:
 960:VS4210/monitor.c **** 			Printf("\r\nTP2824  Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2518              		.loc 1 960 4 is_stmt 1 view .LVU544
 960:VS4210/monitor.c **** 			Printf("\r\nTP2824  Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2519              		.loc 1 960 10 is_stmt 0 view .LVU545
 2520 02ba 2046     		mov	r0, r4
 2521 02bc FFF7FEFF 		bl	Asc2Bin
 2522              	.LVL199:
 2523 02c0 FFF7FEFF 		bl	tp28xx_byte_read
 2524              	.LVL200:
 2525 02c4 0446     		mov	r4, r0
 960:VS4210/monitor.c **** 			Printf("\r\nTP2824  Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2526              		.loc 1 960 8 view .LVU546
 2527 02c6 8DF81F00 		strb	r0, [sp, #31]
 961:VS4210/monitor.c **** 		}
 2528              		.loc 1 961 4 is_stmt 1 view .LVU547
 961:VS4210/monitor.c **** 		}
 2529              		.loc 1 961 58 is_stmt 0 view .LVU548
 2530 02ca 0E4B     		ldr	r3, .L242+4
 2531 02cc 5868     		ldr	r0, [r3, #4]
 2532 02ce FFF7FEFF 		bl	Asc2Bin
 2533              	.LVL201:
 2534 02d2 0146     		mov	r1, r0
 961:VS4210/monitor.c **** 		}
 2535              		.loc 1 961 4 view .LVU549
 2536 02d4 2246     		mov	r2, r4
 2537 02d6 1648     		ldr	r0, .L242+48
 2538 02d8 FFF7FEFF 		bl	Printf
 2539              	.LVL202:
 2540 02dc 95E7     		b	.L133
 2541              	.L222:
 965:VS4210/monitor.c **** 			Printf("\r\nLTC2451  Read addr=%02x  data=%04x", (WORD)Asc2Bin(argv[1]), (WORD)retw);
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 91


 2542              		.loc 1 965 4 is_stmt 1 view .LVU550
 965:VS4210/monitor.c **** 			Printf("\r\nLTC2451  Read addr=%02x  data=%04x", (WORD)Asc2Bin(argv[1]), (WORD)retw);
 2543              		.loc 1 965 11 is_stmt 0 view .LVU551
 2544 02de 2046     		mov	r0, r4
 2545 02e0 FFF7FEFF 		bl	Asc2Bin
 2546              	.LVL203:
 2547 02e4 FFF7FEFF 		bl	GET_LTC2451
 2548              	.LVL204:
 2549 02e8 0446     		mov	r4, r0
 2550              	.LVL205:
 966:VS4210/monitor.c **** 		}
 2551              		.loc 1 966 4 is_stmt 1 view .LVU552
 966:VS4210/monitor.c **** 		}
 2552              		.loc 1 966 59 is_stmt 0 view .LVU553
 2553 02ea 064B     		ldr	r3, .L242+4
 2554 02ec 5868     		ldr	r0, [r3, #4]
 2555              	.LVL206:
 966:VS4210/monitor.c **** 		}
 2556              		.loc 1 966 59 view .LVU554
 2557 02ee FFF7FEFF 		bl	Asc2Bin
 2558              	.LVL207:
 2559 02f2 0146     		mov	r1, r0
 966:VS4210/monitor.c **** 		}
 2560              		.loc 1 966 4 view .LVU555
 2561 02f4 2246     		mov	r2, r4
 2562 02f6 1548     		ldr	r0, .L242+76
 2563 02f8 FFF7FEFF 		bl	Printf
 2564              	.LVL208:
 2565 02fc 85E7     		b	.L133
 2566              	.L243:
 2567 02fe 00BF     		.align	2
 2568              	.L242:
 2569 0300 74050000 		.word	.LC26
 2570 0304 00000000 		.word	argv
 2571 0308 00000000 		.word	.LC27
 2572 030c 00000000 		.word	MonIndex
 2573 0310 00000000 		.word	MonWdata
 2574 0314 00000000 		.word	.LANCHOR2
 2575 0318 54000000 		.word	.LC30
 2576 031c 00000000 		.word	.LC4
 2577 0320 24000000 		.word	.LC5
 2578 0324 48000000 		.word	.LC6
 2579 0328 04000000 		.word	.LC28
 2580 032c 2C000000 		.word	.LC29
 2581 0330 6C000000 		.word	.LC7
 2582 0334 68000000 		.word	.LC31
 2583 0338 6C000000 		.word	.LC32
 2584 033c 70000000 		.word	.LC33
 2585 0340 94000000 		.word	.LC34
 2586 0344 B8000000 		.word	.LC35
 2587 0348 DC000000 		.word	.LC36
 2588 034c 04010000 		.word	.LC37
 2589              	.LVL209:
 2590              	.L131:
 991:VS4210/monitor.c **** 	{
 2591              		.loc 1 991 7 is_stmt 1 view .LVU556
 991:VS4210/monitor.c **** 	{
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 92


 2592              		.loc 1 991 12 is_stmt 0 view .LVU557
 2593 0350 C549     		ldr	r1, .L244
 2594 0352 2046     		mov	r0, r4
 2595 0354 FFF7FEFF 		bl	stricmp
 2596              	.LVL210:
 991:VS4210/monitor.c **** 	{
 2597              		.loc 1 991 10 view .LVU558
 2598 0358 88B9     		cbnz	r0, .L139
 994:VS4210/monitor.c **** 		Printf("\r\nVS4210 Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2599              		.loc 1 994 3 is_stmt 1 view .LVU559
 994:VS4210/monitor.c **** 		Printf("\r\nVS4210 Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2600              		.loc 1 994 9 is_stmt 0 view .LVU560
 2601 035a C44D     		ldr	r5, .L244+4
 2602 035c 6868     		ldr	r0, [r5, #4]
 2603 035e FFF7FEFF 		bl	Asc2Bin
 2604              	.LVL211:
 2605 0362 FFF7FEFF 		bl	VXISI2CRead
 2606              	.LVL212:
 2607 0366 0446     		mov	r4, r0
 994:VS4210/monitor.c **** 		Printf("\r\nVS4210 Read addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2608              		.loc 1 994 7 view .LVU561
 2609 0368 8DF81F00 		strb	r0, [sp, #31]
 995:VS4210/monitor.c **** 	}
 2610              		.loc 1 995 3 is_stmt 1 view .LVU562
 995:VS4210/monitor.c **** 	}
 2611              		.loc 1 995 56 is_stmt 0 view .LVU563
 2612 036c 6868     		ldr	r0, [r5, #4]
 2613 036e FFF7FEFF 		bl	Asc2Bin
 2614              	.LVL213:
 2615 0372 0146     		mov	r1, r0
 995:VS4210/monitor.c **** 	}
 2616              		.loc 1 995 3 view .LVU564
 2617 0374 2246     		mov	r2, r4
 2618 0376 BE48     		ldr	r0, .L244+8
 2619 0378 FFF7FEFF 		bl	Printf
 2620              	.LVL214:
 2621 037c 23E7     		b	.L126
 2622              	.L139:
 997:VS4210/monitor.c **** 	{
 2623              		.loc 1 997 7 is_stmt 1 view .LVU565
 997:VS4210/monitor.c **** 	{
 2624              		.loc 1 997 12 is_stmt 0 view .LVU566
 2625 037e BD49     		ldr	r1, .L244+12
 2626 0380 2046     		mov	r0, r4
 2627 0382 FFF7FEFF 		bl	stricmp
 2628              	.LVL215:
 997:VS4210/monitor.c **** 	{
 2629              		.loc 1 997 10 view .LVU567
 2630 0386 E0B9     		cbnz	r0, .L140
 999:VS4210/monitor.c **** 		ret = VXISI2CRead(Asc2Bin(argv[1]));
 2631              		.loc 1 999 3 is_stmt 1 view .LVU568
 2632 0388 B84D     		ldr	r5, .L244+4
 2633 038a 6868     		ldr	r0, [r5, #4]
 2634 038c FFF7FEFF 		bl	Asc2Bin
 2635              	.LVL216:
 2636 0390 0446     		mov	r4, r0
 2637 0392 A868     		ldr	r0, [r5, #8]
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 93


 2638 0394 FFF7FEFF 		bl	Asc2Bin
 2639              	.LVL217:
 2640 0398 0146     		mov	r1, r0
 2641 039a 2046     		mov	r0, r4
 2642 039c FFF7FEFF 		bl	VXISI2CWrite
 2643              	.LVL218:
1000:VS4210/monitor.c **** 		Printf("\r\nVS4210 Write addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2644              		.loc 1 1000 3 view .LVU569
1000:VS4210/monitor.c **** 		Printf("\r\nVS4210 Write addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2645              		.loc 1 1000 9 is_stmt 0 view .LVU570
 2646 03a0 6868     		ldr	r0, [r5, #4]
 2647 03a2 FFF7FEFF 		bl	Asc2Bin
 2648              	.LVL219:
 2649 03a6 FFF7FEFF 		bl	VXISI2CRead
 2650              	.LVL220:
 2651 03aa 0446     		mov	r4, r0
1000:VS4210/monitor.c **** 		Printf("\r\nVS4210 Write addr=%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)ret);
 2652              		.loc 1 1000 7 view .LVU571
 2653 03ac 8DF81F00 		strb	r0, [sp, #31]
1001:VS4210/monitor.c **** 	}
 2654              		.loc 1 1001 3 is_stmt 1 view .LVU572
1001:VS4210/monitor.c **** 	}
 2655              		.loc 1 1001 57 is_stmt 0 view .LVU573
 2656 03b0 6868     		ldr	r0, [r5, #4]
 2657 03b2 FFF7FEFF 		bl	Asc2Bin
 2658              	.LVL221:
 2659 03b6 0146     		mov	r1, r0
1001:VS4210/monitor.c **** 	}
 2660              		.loc 1 1001 3 view .LVU574
 2661 03b8 2246     		mov	r2, r4
 2662 03ba AF48     		ldr	r0, .L244+16
 2663 03bc FFF7FEFF 		bl	Printf
 2664              	.LVL222:
 2665 03c0 01E7     		b	.L126
 2666              	.L140:
1003:VS4210/monitor.c **** 	{
 2667              		.loc 1 1003 7 is_stmt 1 view .LVU575
1003:VS4210/monitor.c **** 	{
 2668              		.loc 1 1003 12 is_stmt 0 view .LVU576
 2669 03c2 AE49     		ldr	r1, .L244+20
 2670 03c4 2046     		mov	r0, r4
 2671 03c6 FFF7FEFF 		bl	stricmp
 2672              	.LVL223:
1003:VS4210/monitor.c **** 	{
 2673              		.loc 1 1003 10 view .LVU577
 2674 03ca 0028     		cmp	r0, #0
 2675 03cc 3FF4FBAE 		beq	.L126
1008:VS4210/monitor.c **** 	{
 2676              		.loc 1 1008 7 is_stmt 1 view .LVU578
1008:VS4210/monitor.c **** 	{
 2677              		.loc 1 1008 12 is_stmt 0 view .LVU579
 2678 03d0 AB49     		ldr	r1, .L244+24
 2679 03d2 2046     		mov	r0, r4
 2680 03d4 FFF7FEFF 		bl	stricmp
 2681              	.LVL224:
1008:VS4210/monitor.c **** 	{
 2682              		.loc 1 1008 10 view .LVU580
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 94


 2683 03d8 78B9     		cbnz	r0, .L141
1010:VS4210/monitor.c **** 		Printf("\r\nChange I2C addr. from %02x to %02x", (WORD)Monitor_I2C, (WORD)ret);
 2684              		.loc 1 1010 3 is_stmt 1 view .LVU581
1010:VS4210/monitor.c **** 		Printf("\r\nChange I2C addr. from %02x to %02x", (WORD)Monitor_I2C, (WORD)ret);
 2685              		.loc 1 1010 9 is_stmt 0 view .LVU582
 2686 03da A44B     		ldr	r3, .L244+4
 2687 03dc 5868     		ldr	r0, [r3, #4]
 2688 03de FFF7FEFF 		bl	Asc2Bin
 2689              	.LVL225:
 2690 03e2 0246     		mov	r2, r0
1010:VS4210/monitor.c **** 		Printf("\r\nChange I2C addr. from %02x to %02x", (WORD)Monitor_I2C, (WORD)ret);
 2691              		.loc 1 1010 7 view .LVU583
 2692 03e4 8DF81F00 		strb	r0, [sp, #31]
1011:VS4210/monitor.c **** 		Monitor_I2C = ret;
 2693              		.loc 1 1011 3 is_stmt 1 view .LVU584
 2694 03e8 A64C     		ldr	r4, .L244+28
 2695 03ea 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 2696 03ec A648     		ldr	r0, .L244+32
 2697 03ee FFF7FEFF 		bl	Printf
 2698              	.LVL226:
1012:VS4210/monitor.c **** 	}
 2699              		.loc 1 1012 3 view .LVU585
1012:VS4210/monitor.c **** 	}
 2700              		.loc 1 1012 15 is_stmt 0 view .LVU586
 2701 03f2 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 2702 03f6 2370     		strb	r3, [r4]
 2703 03f8 E5E6     		b	.L126
 2704              	.L141:
1014:VS4210/monitor.c **** 	{
 2705              		.loc 1 1014 7 is_stmt 1 view .LVU587
1014:VS4210/monitor.c **** 	{
 2706              		.loc 1 1014 12 is_stmt 0 view .LVU588
 2707 03fa A449     		ldr	r1, .L244+36
 2708 03fc 2046     		mov	r0, r4
 2709 03fe FFF7FEFF 		bl	stricmp
 2710              	.LVL227:
1014:VS4210/monitor.c **** 	{
 2711              		.loc 1 1014 10 view .LVU589
 2712 0402 A8B9     		cbnz	r0, .L142
1016:VS4210/monitor.c **** 		msleep(300);
 2713              		.loc 1 1016 3 is_stmt 1 view .LVU590
 2714 0404 A24C     		ldr	r4, .L244+40
 2715 0406 0022     		movs	r2, #0
 2716 0408 0221     		movs	r1, #2
 2717 040a 2046     		mov	r0, r4
 2718 040c FFF7FEFF 		bl	HAL_GPIO_WritePin
 2719              	.LVL228:
1017:VS4210/monitor.c **** 		HAL_GPIO_WritePin(TP2824_RST_GPIO_Port, TP2824_RST_Pin, 1); // TP2824 RST
 2720              		.loc 1 1017 3 view .LVU591
 2721 0410 4FF49670 		mov	r0, #300
 2722 0414 FFF7FEFF 		bl	msleep
 2723              	.LVL229:
1018:VS4210/monitor.c **** 		msleep(300);
 2724              		.loc 1 1018 3 view .LVU592
 2725 0418 0122     		movs	r2, #1
 2726 041a 0221     		movs	r1, #2
 2727 041c 2046     		mov	r0, r4
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 95


 2728 041e FFF7FEFF 		bl	HAL_GPIO_WritePin
 2729              	.LVL230:
1019:VS4210/monitor.c **** 		Init_TP280x_RegSet();
 2730              		.loc 1 1019 3 view .LVU593
 2731 0422 4FF49670 		mov	r0, #300
 2732 0426 FFF7FEFF 		bl	msleep
 2733              	.LVL231:
1020:VS4210/monitor.c **** 	}
 2734              		.loc 1 1020 3 view .LVU594
 2735 042a FFF7FEFF 		bl	Init_TP280x_RegSet
 2736              	.LVL232:
 2737 042e CAE6     		b	.L126
 2738              	.L142:
1024:VS4210/monitor.c **** #else
 2739              		.loc 1 1024 7 view .LVU595
1024:VS4210/monitor.c **** #else
 2740              		.loc 1 1024 12 is_stmt 0 view .LVU596
 2741 0430 9849     		ldr	r1, .L244+44
 2742 0432 2046     		mov	r0, r4
 2743 0434 FFF7FEFF 		bl	stricmp
 2744              	.LVL233:
1024:VS4210/monitor.c **** #else
 2745              		.loc 1 1024 10 view .LVU597
 2746 0438 18B9     		cbnz	r0, .L143
1029:VS4210/monitor.c **** 	}
 2747              		.loc 1 1029 3 is_stmt 1 view .LVU598
 2748 043a 0220     		movs	r0, #2
 2749 043c FFF7FEFF 		bl	COMMAND_OSD
 2750              	.LVL234:
 2751 0440 C1E6     		b	.L126
 2752              	.L143:
1031:VS4210/monitor.c **** 	{
 2753              		.loc 1 1031 7 view .LVU599
1031:VS4210/monitor.c **** 	{
 2754              		.loc 1 1031 12 is_stmt 0 view .LVU600
 2755 0442 9549     		ldr	r1, .L244+48
 2756 0444 2046     		mov	r0, r4
 2757 0446 FFF7FEFF 		bl	stricmp
 2758              	.LVL235:
1031:VS4210/monitor.c **** 	{
 2759              		.loc 1 1031 10 view .LVU601
 2760 044a 18B9     		cbnz	r0, .L144
1033:VS4210/monitor.c **** 	}
 2761              		.loc 1 1033 3 is_stmt 1 view .LVU602
 2762 044c 0120     		movs	r0, #1
 2763 044e FFF7FEFF 		bl	COMMAND_OSD
 2764              	.LVL236:
 2765 0452 B8E6     		b	.L126
 2766              	.L144:
1035:VS4210/monitor.c **** 	{
 2767              		.loc 1 1035 7 view .LVU603
1035:VS4210/monitor.c **** 	{
 2768              		.loc 1 1035 12 is_stmt 0 view .LVU604
 2769 0454 9149     		ldr	r1, .L244+52
 2770 0456 2046     		mov	r0, r4
 2771 0458 FFF7FEFF 		bl	stricmp
 2772              	.LVL237:
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 96


1035:VS4210/monitor.c **** 	{
 2773              		.loc 1 1035 10 view .LVU605
 2774 045c 18B9     		cbnz	r0, .L145
1037:VS4210/monitor.c **** 	}
 2775              		.loc 1 1037 3 is_stmt 1 view .LVU606
 2776 045e 0320     		movs	r0, #3
 2777 0460 FFF7FEFF 		bl	COMMAND_OSD
 2778              	.LVL238:
 2779 0464 AFE6     		b	.L126
 2780              	.L145:
1039:VS4210/monitor.c **** 	{
 2781              		.loc 1 1039 7 view .LVU607
1039:VS4210/monitor.c **** 	{
 2782              		.loc 1 1039 12 is_stmt 0 view .LVU608
 2783 0466 8E49     		ldr	r1, .L244+56
 2784 0468 2046     		mov	r0, r4
 2785 046a FFF7FEFF 		bl	stricmp
 2786              	.LVL239:
1039:VS4210/monitor.c **** 	{
 2787              		.loc 1 1039 10 view .LVU609
 2788 046e 18B9     		cbnz	r0, .L146
1041:VS4210/monitor.c **** 	}
 2789              		.loc 1 1041 3 is_stmt 1 view .LVU610
 2790 0470 0420     		movs	r0, #4
 2791 0472 FFF7FEFF 		bl	COMMAND_OSD
 2792              	.LVL240:
 2793 0476 A6E6     		b	.L126
 2794              	.L146:
1043:VS4210/monitor.c **** 	{
 2795              		.loc 1 1043 7 view .LVU611
1043:VS4210/monitor.c **** 	{
 2796              		.loc 1 1043 12 is_stmt 0 view .LVU612
 2797 0478 8A49     		ldr	r1, .L244+60
 2798 047a 2046     		mov	r0, r4
 2799 047c FFF7FEFF 		bl	stricmp
 2800              	.LVL241:
1043:VS4210/monitor.c **** 	{
 2801              		.loc 1 1043 10 view .LVU613
 2802 0480 18B9     		cbnz	r0, .L147
1045:VS4210/monitor.c **** 	}
 2803              		.loc 1 1045 3 is_stmt 1 view .LVU614
 2804 0482 0720     		movs	r0, #7
 2805 0484 FFF7FEFF 		bl	COMMAND_OSD
 2806              	.LVL242:
 2807 0488 9DE6     		b	.L126
 2808              	.L147:
1047:VS4210/monitor.c **** 	{
 2809              		.loc 1 1047 7 view .LVU615
1047:VS4210/monitor.c **** 	{
 2810              		.loc 1 1047 12 is_stmt 0 view .LVU616
 2811 048a 8749     		ldr	r1, .L244+64
 2812 048c 2046     		mov	r0, r4
 2813 048e FFF7FEFF 		bl	stricmp
 2814              	.LVL243:
1047:VS4210/monitor.c **** 	{
 2815              		.loc 1 1047 10 view .LVU617
 2816 0492 18B9     		cbnz	r0, .L148
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 97


1049:VS4210/monitor.c **** 	}
 2817              		.loc 1 1049 3 is_stmt 1 view .LVU618
 2818 0494 0820     		movs	r0, #8
 2819 0496 FFF7FEFF 		bl	COMMAND_OSD
 2820              	.LVL244:
 2821 049a 94E6     		b	.L126
 2822              	.L148:
1052:VS4210/monitor.c **** 	{
 2823              		.loc 1 1052 7 view .LVU619
1052:VS4210/monitor.c **** 	{
 2824              		.loc 1 1052 12 is_stmt 0 view .LVU620
 2825 049c 8349     		ldr	r1, .L244+68
 2826 049e 2046     		mov	r0, r4
 2827 04a0 FFF7FEFF 		bl	stricmp
 2828              	.LVL245:
1052:VS4210/monitor.c **** 	{
 2829              		.loc 1 1052 10 view .LVU621
 2830 04a4 0028     		cmp	r0, #0
 2831 04a6 73D1     		bne	.L149
1056:VS4210/monitor.c **** 		ReadAddr = Asc2Bin(argv[2]);
 2832              		.loc 1 1056 3 is_stmt 1 view .LVU622
1056:VS4210/monitor.c **** 		ReadAddr = Asc2Bin(argv[2]);
 2833              		.loc 1 1056 17 is_stmt 0 view .LVU623
 2834 04a8 704C     		ldr	r4, .L244+4
 2835 04aa 6068     		ldr	r0, [r4, #4]
 2836 04ac FFF7FEFF 		bl	Asc2Bin
 2837              	.LVL246:
 2838 04b0 0546     		mov	r5, r0
1056:VS4210/monitor.c **** 		ReadAddr = Asc2Bin(argv[2]);
 2839              		.loc 1 1056 15 view .LVU624
 2840 04b2 744B     		ldr	r3, .L244+28
 2841 04b4 1870     		strb	r0, [r3]
1057:VS4210/monitor.c **** 		if (Monitor_I2C == 0xA0)
 2842              		.loc 1 1057 3 is_stmt 1 view .LVU625
1057:VS4210/monitor.c **** 		if (Monitor_I2C == 0xA0)
 2843              		.loc 1 1057 14 is_stmt 0 view .LVU626
 2844 04b6 A068     		ldr	r0, [r4, #8]
 2845 04b8 FFF7FEFF 		bl	Asc2Bin
 2846              	.LVL247:
 2847 04bc 0446     		mov	r4, r0
 2848              	.LVL248:
1058:VS4210/monitor.c **** 			ret = ReadEEP(Asc2Bin(argv[2]));
 2849              		.loc 1 1058 3 is_stmt 1 view .LVU627
1058:VS4210/monitor.c **** 			ret = ReadEEP(Asc2Bin(argv[2]));
 2850              		.loc 1 1058 6 is_stmt 0 view .LVU628
 2851 04be A02D     		cmp	r5, #160
 2852 04c0 52D0     		beq	.L223
1060:VS4210/monitor.c **** 			ret = VXISI2CRead(Asc2Bin(argv[2]));
 2853              		.loc 1 1060 8 is_stmt 1 view .LVU629
1060:VS4210/monitor.c **** 			ret = VXISI2CRead(Asc2Bin(argv[2]));
 2854              		.loc 1 1060 11 is_stmt 0 view .LVU630
 2855 04c2 402D     		cmp	r5, #64
 2856 04c4 55D0     		beq	.L224
1062:VS4210/monitor.c **** 			ret = VS8812Read(Asc2Bin(argv[2]));
 2857              		.loc 1 1062 8 is_stmt 1 view .LVU631
1062:VS4210/monitor.c **** 			ret = VS8812Read(Asc2Bin(argv[2]));
 2858              		.loc 1 1062 11 is_stmt 0 view .LVU632
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 98


 2859 04c6 122D     		cmp	r5, #18
 2860 04c8 58D0     		beq	.L225
1064:VS4210/monitor.c **** 			ret = tp28xx_byte_read(Asc2Bin(argv[2]));
 2861              		.loc 1 1064 8 is_stmt 1 view .LVU633
1064:VS4210/monitor.c **** 			ret = tp28xx_byte_read(Asc2Bin(argv[2]));
 2862              		.loc 1 1064 11 is_stmt 0 view .LVU634
 2863 04ca 882D     		cmp	r5, #136
 2864 04cc 5BD0     		beq	.L226
1067:VS4210/monitor.c **** 
 2865              		.loc 1 1067 4 is_stmt 1 view .LVU635
 2866 04ce 7848     		ldr	r0, .L244+72
 2867              	.LVL249:
1067:VS4210/monitor.c **** 
 2868              		.loc 1 1067 4 is_stmt 0 view .LVU636
 2869 04d0 FFF7FEFF 		bl	Printf
 2870              	.LVL250:
 2871              	.L151:
1069:VS4210/monitor.c **** 		RS_tx(ascii[ReadAddr >> 4]);
 2872              		.loc 1 1069 3 is_stmt 1 view .LVU637
 2873 04d4 7748     		ldr	r0, .L244+76
 2874 04d6 FFF7FEFF 		bl	Printf
 2875              	.LVL251:
1070:VS4210/monitor.c **** 		RS_tx(ascii[ReadAddr & 0x0F]);
 2876              		.loc 1 1070 3 view .LVU638
1070:VS4210/monitor.c **** 		RS_tx(ascii[ReadAddr & 0x0F]);
 2877              		.loc 1 1070 24 is_stmt 0 view .LVU639
 2878 04da C4F30713 		ubfx	r3, r4, #4, #8
1070:VS4210/monitor.c **** 		RS_tx(ascii[ReadAddr & 0x0F]);
 2879              		.loc 1 1070 3 view .LVU640
 2880 04de 08AA     		add	r2, sp, #32
 2881 04e0 1344     		add	r3, r3, r2
 2882 04e2 13F8140C 		ldrb	r0, [r3, #-20]	@ zero_extendqisi2
 2883 04e6 FFF7FEFF 		bl	RS_tx
 2884              	.LVL252:
1071:VS4210/monitor.c **** 		RS_tx(ascii[ret >> 4]);
 2885              		.loc 1 1071 3 is_stmt 1 view .LVU641
1071:VS4210/monitor.c **** 		RS_tx(ascii[ret >> 4]);
 2886              		.loc 1 1071 24 is_stmt 0 view .LVU642
 2887 04ea 04F00F03 		and	r3, r4, #15
1071:VS4210/monitor.c **** 		RS_tx(ascii[ret >> 4]);
 2888              		.loc 1 1071 3 view .LVU643
 2889 04ee 08AA     		add	r2, sp, #32
 2890 04f0 1344     		add	r3, r3, r2
 2891 04f2 13F8140C 		ldrb	r0, [r3, #-20]	@ zero_extendqisi2
 2892 04f6 FFF7FEFF 		bl	RS_tx
 2893              	.LVL253:
1072:VS4210/monitor.c **** 		RS_tx(ascii[ret & 0x0F]);
 2894              		.loc 1 1072 3 is_stmt 1 view .LVU644
1072:VS4210/monitor.c **** 		RS_tx(ascii[ret & 0x0F]);
 2895              		.loc 1 1072 19 is_stmt 0 view .LVU645
 2896 04fa 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
1072:VS4210/monitor.c **** 		RS_tx(ascii[ret & 0x0F]);
 2897              		.loc 1 1072 3 view .LVU646
 2898 04fe 08AA     		add	r2, sp, #32
 2899 0500 02EB1313 		add	r3, r2, r3, lsr #4
 2900 0504 13F8140C 		ldrb	r0, [r3, #-20]	@ zero_extendqisi2
 2901 0508 FFF7FEFF 		bl	RS_tx
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 99


 2902              	.LVL254:
1073:VS4210/monitor.c **** 		RS_tx(ascii[0x56 >> 4]);
 2903              		.loc 1 1073 3 is_stmt 1 view .LVU647
1073:VS4210/monitor.c **** 		RS_tx(ascii[0x56 >> 4]);
 2904              		.loc 1 1073 19 is_stmt 0 view .LVU648
 2905 050c 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 2906 0510 03F00F03 		and	r3, r3, #15
1073:VS4210/monitor.c **** 		RS_tx(ascii[0x56 >> 4]);
 2907              		.loc 1 1073 3 view .LVU649
 2908 0514 08AA     		add	r2, sp, #32
 2909 0516 1344     		add	r3, r3, r2
 2910 0518 13F8140C 		ldrb	r0, [r3, #-20]	@ zero_extendqisi2
 2911 051c FFF7FEFF 		bl	RS_tx
 2912              	.LVL255:
1074:VS4210/monitor.c **** 		RS_tx(ascii[0x56 & 0x0F]);
 2913              		.loc 1 1074 3 is_stmt 1 view .LVU650
 2914 0520 3520     		movs	r0, #53
 2915 0522 FFF7FEFF 		bl	RS_tx
 2916              	.LVL256:
1075:VS4210/monitor.c **** 		RS_tx(ascii[(ReadAddr ^ ret ^ 0x56) >> 4]);
 2917              		.loc 1 1075 3 view .LVU651
 2918 0526 3620     		movs	r0, #54
 2919 0528 FFF7FEFF 		bl	RS_tx
 2920              	.LVL257:
1076:VS4210/monitor.c **** 		RS_tx(ascii[(ReadAddr ^ ret ^ 0x56) & 0x0F]);
 2921              		.loc 1 1076 3 view .LVU652
1076:VS4210/monitor.c **** 		RS_tx(ascii[(ReadAddr ^ ret ^ 0x56) & 0x0F]);
 2922              		.loc 1 1076 39 is_stmt 0 view .LVU653
 2923 052c 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 2924 0530 6340     		eors	r3, r3, r4
 2925 0532 C3F30313 		ubfx	r3, r3, #4, #4
 2926 0536 83F00503 		eor	r3, r3, #5
1076:VS4210/monitor.c **** 		RS_tx(ascii[(ReadAddr ^ ret ^ 0x56) & 0x0F]);
 2927              		.loc 1 1076 3 view .LVU654
 2928 053a 08AA     		add	r2, sp, #32
 2929 053c 1344     		add	r3, r3, r2
 2930 053e 13F8140C 		ldrb	r0, [r3, #-20]	@ zero_extendqisi2
 2931 0542 FFF7FEFF 		bl	RS_tx
 2932              	.LVL258:
1077:VS4210/monitor.c **** 		Printf("ETX");
 2933              		.loc 1 1077 3 is_stmt 1 view .LVU655
1077:VS4210/monitor.c **** 		Printf("ETX");
 2934              		.loc 1 1077 39 is_stmt 0 view .LVU656
 2935 0546 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 2936 054a 6340     		eors	r3, r3, r4
 2937 054c 83F05603 		eor	r3, r3, #86
 2938 0550 03F00F03 		and	r3, r3, #15
1077:VS4210/monitor.c **** 		Printf("ETX");
 2939              		.loc 1 1077 3 view .LVU657
 2940 0554 08AA     		add	r2, sp, #32
 2941 0556 1344     		add	r3, r3, r2
 2942 0558 13F8140C 		ldrb	r0, [r3, #-20]	@ zero_extendqisi2
 2943 055c FFF7FEFF 		bl	RS_tx
 2944              	.LVL259:
1078:VS4210/monitor.c **** 	}
 2945              		.loc 1 1078 3 is_stmt 1 view .LVU658
 2946 0560 5548     		ldr	r0, .L244+80
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 100


 2947 0562 FFF7FEFF 		bl	Printf
 2948              	.LVL260:
 2949 0566 2EE6     		b	.L126
 2950              	.LVL261:
 2951              	.L223:
1059:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x40)
 2952              		.loc 1 1059 4 view .LVU659
1059:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x40)
 2953              		.loc 1 1059 10 is_stmt 0 view .LVU660
 2954 0568 FFF7FEFF 		bl	ReadEEP
 2955              	.LVL262:
1059:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x40)
 2956              		.loc 1 1059 8 view .LVU661
 2957 056c 8DF81F00 		strb	r0, [sp, #31]
 2958 0570 B0E7     		b	.L151
 2959              	.LVL263:
 2960              	.L224:
1061:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x12)
 2961              		.loc 1 1061 4 is_stmt 1 view .LVU662
1061:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x12)
 2962              		.loc 1 1061 10 is_stmt 0 view .LVU663
 2963 0572 FFF7FEFF 		bl	VXISI2CRead
 2964              	.LVL264:
1061:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x12)
 2965              		.loc 1 1061 8 view .LVU664
 2966 0576 8DF81F00 		strb	r0, [sp, #31]
 2967 057a ABE7     		b	.L151
 2968              	.LVL265:
 2969              	.L225:
1063:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x88)
 2970              		.loc 1 1063 4 is_stmt 1 view .LVU665
1063:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x88)
 2971              		.loc 1 1063 10 is_stmt 0 view .LVU666
 2972 057c FFF7FEFF 		bl	VS8812Read
 2973              	.LVL266:
1063:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x88)
 2974              		.loc 1 1063 8 view .LVU667
 2975 0580 8DF81F00 		strb	r0, [sp, #31]
 2976 0584 A6E7     		b	.L151
 2977              	.LVL267:
 2978              	.L226:
1065:VS4210/monitor.c **** 		else
 2979              		.loc 1 1065 4 is_stmt 1 view .LVU668
1065:VS4210/monitor.c **** 		else
 2980              		.loc 1 1065 10 is_stmt 0 view .LVU669
 2981 0586 FFF7FEFF 		bl	tp28xx_byte_read
 2982              	.LVL268:
1065:VS4210/monitor.c **** 		else
 2983              		.loc 1 1065 8 view .LVU670
 2984 058a 8DF81F00 		strb	r0, [sp, #31]
 2985 058e A1E7     		b	.L151
 2986              	.L149:
1080:VS4210/monitor.c **** 	{
 2987              		.loc 1 1080 7 is_stmt 1 view .LVU671
1080:VS4210/monitor.c **** 	{
 2988              		.loc 1 1080 12 is_stmt 0 view .LVU672
 2989 0590 4A49     		ldr	r1, .L244+84
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 101


 2990 0592 2046     		mov	r0, r4
 2991 0594 FFF7FEFF 		bl	stricmp
 2992              	.LVL269:
1080:VS4210/monitor.c **** 	{
 2993              		.loc 1 1080 10 view .LVU673
 2994 0598 0028     		cmp	r0, #0
 2995 059a 40F0E180 		bne	.L155
1084:VS4210/monitor.c **** 		// VXISI2CWrite(Asc2Bin(argv[2]), Asc2Bin(argv[3]));
 2996              		.loc 1 1084 3 is_stmt 1 view .LVU674
1084:VS4210/monitor.c **** 		// VXISI2CWrite(Asc2Bin(argv[2]), Asc2Bin(argv[3]));
 2997              		.loc 1 1084 17 is_stmt 0 view .LVU675
 2998 059e 334B     		ldr	r3, .L244+4
 2999 05a0 5868     		ldr	r0, [r3, #4]
 3000 05a2 FFF7FEFF 		bl	Asc2Bin
 3001              	.LVL270:
1084:VS4210/monitor.c **** 		// VXISI2CWrite(Asc2Bin(argv[2]), Asc2Bin(argv[3]));
 3002              		.loc 1 1084 15 view .LVU676
 3003 05a6 374A     		ldr	r2, .L244+28
 3004 05a8 1070     		strb	r0, [r2]
1087:VS4210/monitor.c **** 		{
 3005              		.loc 1 1087 3 is_stmt 1 view .LVU677
1087:VS4210/monitor.c **** 		{
 3006              		.loc 1 1087 6 is_stmt 0 view .LVU678
 3007 05aa A028     		cmp	r0, #160
 3008 05ac 00F08880 		beq	.L227
1092:VS4210/monitor.c **** 		{
 3009              		.loc 1 1092 8 is_stmt 1 view .LVU679
1092:VS4210/monitor.c **** 		{
 3010              		.loc 1 1092 11 is_stmt 0 view .LVU680
 3011 05b0 4028     		cmp	r0, #64
 3012 05b2 00F09980 		beq	.L228
1097:VS4210/monitor.c **** 		{
 3013              		.loc 1 1097 8 is_stmt 1 view .LVU681
1097:VS4210/monitor.c **** 		{
 3014              		.loc 1 1097 11 is_stmt 0 view .LVU682
 3015 05b6 1228     		cmp	r0, #18
 3016 05b8 00F0AA80 		beq	.L229
1102:VS4210/monitor.c **** 		{
 3017              		.loc 1 1102 8 is_stmt 1 view .LVU683
1102:VS4210/monitor.c **** 		{
 3018              		.loc 1 1102 11 is_stmt 0 view .LVU684
 3019 05bc 8828     		cmp	r0, #136
 3020 05be 00F0BB80 		beq	.L230
1109:VS4210/monitor.c **** 		}
 3021              		.loc 1 1109 4 is_stmt 1 view .LVU685
 3022 05c2 3B48     		ldr	r0, .L244+72
 3023 05c4 FFF7FEFF 		bl	Printf
 3024              	.LVL271:
 3025              	.L157:
1112:VS4210/monitor.c **** 		Printf("STX");
 3026              		.loc 1 1112 3 view .LVU686
1112:VS4210/monitor.c **** 		Printf("STX");
 3027              		.loc 1 1112 14 is_stmt 0 view .LVU687
 3028 05c8 284B     		ldr	r3, .L244+4
 3029 05ca 9868     		ldr	r0, [r3, #8]
 3030 05cc FFF7FEFF 		bl	Asc2Bin
 3031              	.LVL272:
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 102


 3032 05d0 0446     		mov	r4, r0
 3033              	.LVL273:
1113:VS4210/monitor.c **** 		RS_tx(ascii[ReadAddr >> 4]);
 3034              		.loc 1 1113 3 is_stmt 1 view .LVU688
 3035 05d2 3848     		ldr	r0, .L244+76
 3036 05d4 FFF7FEFF 		bl	Printf
 3037              	.LVL274:
1114:VS4210/monitor.c **** 		RS_tx(ascii[ReadAddr & 0x0F]);
 3038              		.loc 1 1114 3 view .LVU689
1114:VS4210/monitor.c **** 		RS_tx(ascii[ReadAddr & 0x0F]);
 3039              		.loc 1 1114 24 is_stmt 0 view .LVU690
 3040 05d8 C4F30713 		ubfx	r3, r4, #4, #8
1114:VS4210/monitor.c **** 		RS_tx(ascii[ReadAddr & 0x0F]);
 3041              		.loc 1 1114 3 view .LVU691
 3042 05dc 08AA     		add	r2, sp, #32
 3043 05de 1344     		add	r3, r3, r2
 3044 05e0 13F8140C 		ldrb	r0, [r3, #-20]	@ zero_extendqisi2
 3045 05e4 FFF7FEFF 		bl	RS_tx
 3046              	.LVL275:
1115:VS4210/monitor.c **** 		RS_tx(ascii[ret >> 4]);
 3047              		.loc 1 1115 3 is_stmt 1 view .LVU692
1115:VS4210/monitor.c **** 		RS_tx(ascii[ret >> 4]);
 3048              		.loc 1 1115 24 is_stmt 0 view .LVU693
 3049 05e8 04F00F03 		and	r3, r4, #15
1115:VS4210/monitor.c **** 		RS_tx(ascii[ret >> 4]);
 3050              		.loc 1 1115 3 view .LVU694
 3051 05ec 08AA     		add	r2, sp, #32
 3052 05ee 1344     		add	r3, r3, r2
 3053 05f0 13F8140C 		ldrb	r0, [r3, #-20]	@ zero_extendqisi2
 3054 05f4 FFF7FEFF 		bl	RS_tx
 3055              	.LVL276:
1116:VS4210/monitor.c **** 		RS_tx(ascii[ret & 0x0F]);
 3056              		.loc 1 1116 3 is_stmt 1 view .LVU695
1116:VS4210/monitor.c **** 		RS_tx(ascii[ret & 0x0F]);
 3057              		.loc 1 1116 19 is_stmt 0 view .LVU696
 3058 05f8 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
1116:VS4210/monitor.c **** 		RS_tx(ascii[ret & 0x0F]);
 3059              		.loc 1 1116 3 view .LVU697
 3060 05fc 08AA     		add	r2, sp, #32
 3061 05fe 02EB1313 		add	r3, r2, r3, lsr #4
 3062 0602 13F8140C 		ldrb	r0, [r3, #-20]	@ zero_extendqisi2
 3063 0606 FFF7FEFF 		bl	RS_tx
 3064              	.LVL277:
1117:VS4210/monitor.c **** 		RS_tx(ascii[0x56 >> 4]);
 3065              		.loc 1 1117 3 is_stmt 1 view .LVU698
1117:VS4210/monitor.c **** 		RS_tx(ascii[0x56 >> 4]);
 3066              		.loc 1 1117 19 is_stmt 0 view .LVU699
 3067 060a 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 3068 060e 03F00F03 		and	r3, r3, #15
1117:VS4210/monitor.c **** 		RS_tx(ascii[0x56 >> 4]);
 3069              		.loc 1 1117 3 view .LVU700
 3070 0612 08AA     		add	r2, sp, #32
 3071 0614 1344     		add	r3, r3, r2
 3072 0616 13F8140C 		ldrb	r0, [r3, #-20]	@ zero_extendqisi2
 3073 061a FFF7FEFF 		bl	RS_tx
 3074              	.LVL278:
1118:VS4210/monitor.c **** 		RS_tx(ascii[0x56 & 0x0F]);
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 103


 3075              		.loc 1 1118 3 is_stmt 1 view .LVU701
 3076 061e 3520     		movs	r0, #53
 3077 0620 FFF7FEFF 		bl	RS_tx
 3078              	.LVL279:
1119:VS4210/monitor.c **** 		RS_tx(ascii[(ReadAddr ^ ret ^ 0x56) >> 4]);
 3079              		.loc 1 1119 3 view .LVU702
 3080 0624 3620     		movs	r0, #54
 3081 0626 FFF7FEFF 		bl	RS_tx
 3082              	.LVL280:
1120:VS4210/monitor.c **** 		RS_tx(ascii[(ReadAddr ^ ret ^ 0x56) & 0x0F]);
 3083              		.loc 1 1120 3 view .LVU703
1120:VS4210/monitor.c **** 		RS_tx(ascii[(ReadAddr ^ ret ^ 0x56) & 0x0F]);
 3084              		.loc 1 1120 39 is_stmt 0 view .LVU704
 3085 062a 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 3086 062e 6340     		eors	r3, r3, r4
 3087 0630 C3F30313 		ubfx	r3, r3, #4, #4
 3088 0634 83F00503 		eor	r3, r3, #5
1120:VS4210/monitor.c **** 		RS_tx(ascii[(ReadAddr ^ ret ^ 0x56) & 0x0F]);
 3089              		.loc 1 1120 3 view .LVU705
 3090 0638 08AA     		add	r2, sp, #32
 3091 063a 1344     		add	r3, r3, r2
 3092 063c 13F8140C 		ldrb	r0, [r3, #-20]	@ zero_extendqisi2
 3093 0640 FFF7FEFF 		bl	RS_tx
 3094              	.LVL281:
1121:VS4210/monitor.c **** 		Printf("ETX");
 3095              		.loc 1 1121 3 is_stmt 1 view .LVU706
1121:VS4210/monitor.c **** 		Printf("ETX");
 3096              		.loc 1 1121 39 is_stmt 0 view .LVU707
 3097 0644 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 3098 0648 6340     		eors	r3, r3, r4
 3099 064a 83F05603 		eor	r3, r3, #86
 3100 064e 03F00F03 		and	r3, r3, #15
1121:VS4210/monitor.c **** 		Printf("ETX");
 3101              		.loc 1 1121 3 view .LVU708
 3102 0652 08AA     		add	r2, sp, #32
 3103 0654 1344     		add	r3, r3, r2
 3104 0656 13F8140C 		ldrb	r0, [r3, #-20]	@ zero_extendqisi2
 3105 065a FFF7FEFF 		bl	RS_tx
 3106              	.LVL282:
1122:VS4210/monitor.c **** 	}
 3107              		.loc 1 1122 3 is_stmt 1 view .LVU709
 3108 065e 1648     		ldr	r0, .L244+80
 3109 0660 FFF7FEFF 		bl	Printf
 3110              	.LVL283:
 3111 0664 AFE5     		b	.L126
 3112              	.L245:
 3113 0666 00BF     		.align	2
 3114              	.L244:
 3115 0668 2C010000 		.word	.LC38
 3116 066c 00000000 		.word	argv
 3117 0670 30010000 		.word	.LC39
 3118 0674 54010000 		.word	.LC40
 3119 0678 24000000 		.word	.LC5
 3120 067c 58010000 		.word	.LC41
 3121 0680 5C010000 		.word	.LC42
 3122 0684 00000000 		.word	.LANCHOR2
 3123 0688 60010000 		.word	.LC43
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 104


 3124 068c 88010000 		.word	.LC44
 3125 0690 00080140 		.word	1073809408
 3126 0694 8C010000 		.word	.LC45
 3127 0698 94010000 		.word	.LC46
 3128 069c 98010000 		.word	.LC47
 3129 06a0 9C010000 		.word	.LC48
 3130 06a4 A4010000 		.word	.LC49
 3131 06a8 AC010000 		.word	.LC50
 3132 06ac B4010000 		.word	.LC51
 3133 06b0 54000000 		.word	.LC30
 3134 06b4 BC010000 		.word	.LC52
 3135 06b8 C0010000 		.word	.LC53
 3136 06bc C4010000 		.word	.LC54
 3137              	.LVL284:
 3138              	.L227:
1089:VS4210/monitor.c **** 			ret = ReadEEP(Asc2Bin(argv[2]));
 3139              		.loc 1 1089 4 view .LVU710
1089:VS4210/monitor.c **** 			ret = ReadEEP(Asc2Bin(argv[2]));
 3140              		.loc 1 1089 13 is_stmt 0 view .LVU711
 3141 06c0 834C     		ldr	r4, .L246
 3142 06c2 A068     		ldr	r0, [r4, #8]
 3143 06c4 FFF7FEFF 		bl	Asc2Bin
 3144              	.LVL285:
 3145 06c8 0546     		mov	r5, r0
1089:VS4210/monitor.c **** 			ret = ReadEEP(Asc2Bin(argv[2]));
 3146              		.loc 1 1089 4 view .LVU712
 3147 06ca E068     		ldr	r0, [r4, #12]
 3148 06cc FFF7FEFF 		bl	Asc2Bin
 3149              	.LVL286:
 3150 06d0 0146     		mov	r1, r0
 3151 06d2 2846     		mov	r0, r5
 3152 06d4 FFF7FEFF 		bl	WriteEEP
 3153              	.LVL287:
1090:VS4210/monitor.c **** 		}
 3154              		.loc 1 1090 4 is_stmt 1 view .LVU713
1090:VS4210/monitor.c **** 		}
 3155              		.loc 1 1090 18 is_stmt 0 view .LVU714
 3156 06d8 A068     		ldr	r0, [r4, #8]
 3157 06da FFF7FEFF 		bl	Asc2Bin
 3158              	.LVL288:
1090:VS4210/monitor.c **** 		}
 3159              		.loc 1 1090 10 view .LVU715
 3160 06de FFF7FEFF 		bl	ReadEEP
 3161              	.LVL289:
1090:VS4210/monitor.c **** 		}
 3162              		.loc 1 1090 8 view .LVU716
 3163 06e2 8DF81F00 		strb	r0, [sp, #31]
 3164 06e6 6FE7     		b	.L157
 3165              	.L228:
1094:VS4210/monitor.c **** 			ret = VXISI2CRead(Asc2Bin(argv[2]));
 3166              		.loc 1 1094 4 is_stmt 1 view .LVU717
 3167 06e8 794C     		ldr	r4, .L246
 3168 06ea A068     		ldr	r0, [r4, #8]
 3169 06ec FFF7FEFF 		bl	Asc2Bin
 3170              	.LVL290:
 3171 06f0 0546     		mov	r5, r0
 3172 06f2 E068     		ldr	r0, [r4, #12]
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 105


 3173 06f4 FFF7FEFF 		bl	Asc2Bin
 3174              	.LVL291:
 3175 06f8 0146     		mov	r1, r0
 3176 06fa 2846     		mov	r0, r5
 3177 06fc FFF7FEFF 		bl	VXISI2CWrite
 3178              	.LVL292:
1095:VS4210/monitor.c **** 		}
 3179              		.loc 1 1095 4 view .LVU718
1095:VS4210/monitor.c **** 		}
 3180              		.loc 1 1095 10 is_stmt 0 view .LVU719
 3181 0700 A068     		ldr	r0, [r4, #8]
 3182 0702 FFF7FEFF 		bl	Asc2Bin
 3183              	.LVL293:
 3184 0706 FFF7FEFF 		bl	VXISI2CRead
 3185              	.LVL294:
1095:VS4210/monitor.c **** 		}
 3186              		.loc 1 1095 8 view .LVU720
 3187 070a 8DF81F00 		strb	r0, [sp, #31]
 3188 070e 5BE7     		b	.L157
 3189              	.L229:
1099:VS4210/monitor.c **** 			ret = VS8812Read(Asc2Bin(argv[2]));
 3190              		.loc 1 1099 4 is_stmt 1 view .LVU721
 3191 0710 6F4C     		ldr	r4, .L246
 3192 0712 A068     		ldr	r0, [r4, #8]
 3193 0714 FFF7FEFF 		bl	Asc2Bin
 3194              	.LVL295:
 3195 0718 0546     		mov	r5, r0
 3196 071a E068     		ldr	r0, [r4, #12]
 3197 071c FFF7FEFF 		bl	Asc2Bin
 3198              	.LVL296:
 3199 0720 0146     		mov	r1, r0
 3200 0722 2846     		mov	r0, r5
 3201 0724 FFF7FEFF 		bl	VS8812Write
 3202              	.LVL297:
1100:VS4210/monitor.c **** 		}
 3203              		.loc 1 1100 4 view .LVU722
1100:VS4210/monitor.c **** 		}
 3204              		.loc 1 1100 10 is_stmt 0 view .LVU723
 3205 0728 A068     		ldr	r0, [r4, #8]
 3206 072a FFF7FEFF 		bl	Asc2Bin
 3207              	.LVL298:
 3208 072e FFF7FEFF 		bl	VS8812Read
 3209              	.LVL299:
1100:VS4210/monitor.c **** 		}
 3210              		.loc 1 1100 8 view .LVU724
 3211 0732 8DF81F00 		strb	r0, [sp, #31]
 3212 0736 47E7     		b	.L157
 3213              	.L230:
1104:VS4210/monitor.c **** 			ret = tp28xx_byte_read(Asc2Bin(argv[2]));
 3214              		.loc 1 1104 4 is_stmt 1 view .LVU725
 3215 0738 654C     		ldr	r4, .L246
 3216 073a A068     		ldr	r0, [r4, #8]
 3217 073c FFF7FEFF 		bl	Asc2Bin
 3218              	.LVL300:
 3219 0740 0546     		mov	r5, r0
 3220 0742 E068     		ldr	r0, [r4, #12]
 3221 0744 FFF7FEFF 		bl	Asc2Bin
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 106


 3222              	.LVL301:
 3223 0748 0146     		mov	r1, r0
 3224 074a 2846     		mov	r0, r5
 3225 074c FFF7FEFF 		bl	tp28xx_byte_write
 3226              	.LVL302:
1105:VS4210/monitor.c **** 		}
 3227              		.loc 1 1105 4 view .LVU726
1105:VS4210/monitor.c **** 		}
 3228              		.loc 1 1105 10 is_stmt 0 view .LVU727
 3229 0750 A068     		ldr	r0, [r4, #8]
 3230 0752 FFF7FEFF 		bl	Asc2Bin
 3231              	.LVL303:
 3232 0756 FFF7FEFF 		bl	tp28xx_byte_read
 3233              	.LVL304:
1105:VS4210/monitor.c **** 		}
 3234              		.loc 1 1105 8 view .LVU728
 3235 075a 8DF81F00 		strb	r0, [sp, #31]
 3236 075e 33E7     		b	.L157
 3237              	.L155:
1126:VS4210/monitor.c **** 	{
 3238              		.loc 1 1126 7 is_stmt 1 view .LVU729
1126:VS4210/monitor.c **** 	{
 3239              		.loc 1 1126 12 is_stmt 0 view .LVU730
 3240 0760 5C49     		ldr	r1, .L246+4
 3241 0762 2046     		mov	r0, r4
 3242 0764 FFF7FEFF 		bl	stricmp
 3243              	.LVL305:
1126:VS4210/monitor.c **** 	{
 3244              		.loc 1 1126 10 view .LVU731
 3245 0768 18B9     		cbnz	r0, .L161
1128:VS4210/monitor.c **** 	}
 3246              		.loc 1 1128 3 is_stmt 1 view .LVU732
1128:VS4210/monitor.c **** 	}
 3247              		.loc 1 1128 16 is_stmt 0 view .LVU733
 3248 076a 5B4B     		ldr	r3, .L246+8
 3249 076c 0022     		movs	r2, #0
 3250 076e 1A70     		strb	r2, [r3]
 3251 0770 29E5     		b	.L126
 3252              	.L161:
1130:VS4210/monitor.c **** 	{ // HDMI input
 3253              		.loc 1 1130 7 is_stmt 1 view .LVU734
1130:VS4210/monitor.c **** 	{ // HDMI input
 3254              		.loc 1 1130 12 is_stmt 0 view .LVU735
 3255 0772 5A49     		ldr	r1, .L246+12
 3256 0774 2046     		mov	r0, r4
 3257 0776 FFF7FEFF 		bl	stricmp
 3258              	.LVL306:
1130:VS4210/monitor.c **** 	{ // HDMI input
 3259              		.loc 1 1130 10 view .LVU736
 3260 077a F0B9     		cbnz	r0, .L162
 3261              	.LBB2:
1132:VS4210/monitor.c **** 		Printf("\r\nbSignal[0] = %d state[0]=%d", (WORD)bSignal[0], (WORD)state[0]);
 3262              		.loc 1 1132 3 is_stmt 1 view .LVU737
1133:VS4210/monitor.c **** 		Printf("\r\nbSignal[1] = %d state[1]=%d", (WORD)bSignal[1], (WORD)state[1]);
 3263              		.loc 1 1133 3 view .LVU738
1133:VS4210/monitor.c **** 		Printf("\r\nbSignal[1] = %d state[1]=%d", (WORD)bSignal[1], (WORD)state[1]);
 3264              		.loc 1 1133 58 is_stmt 0 view .LVU739
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 107


 3265 077c 584C     		ldr	r4, .L246+16
1133:VS4210/monitor.c **** 		Printf("\r\nbSignal[1] = %d state[1]=%d", (WORD)bSignal[1], (WORD)state[1]);
 3266              		.loc 1 1133 74 view .LVU740
 3267 077e 594D     		ldr	r5, .L246+20
1133:VS4210/monitor.c **** 		Printf("\r\nbSignal[1] = %d state[1]=%d", (WORD)bSignal[1], (WORD)state[1]);
 3268              		.loc 1 1133 3 view .LVU741
 3269 0780 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 3270 0782 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 3271 0784 5848     		ldr	r0, .L246+24
 3272 0786 FFF7FEFF 		bl	Printf
 3273              	.LVL307:
1134:VS4210/monitor.c **** 		Printf("\r\nbSignal[2] = %d state[2]=%d", (WORD)bSignal[2], (WORD)state[2]);
 3274              		.loc 1 1134 3 is_stmt 1 view .LVU742
 3275 078a 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 3276 078c 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 3277 078e 5748     		ldr	r0, .L246+28
 3278 0790 FFF7FEFF 		bl	Printf
 3279              	.LVL308:
1135:VS4210/monitor.c **** 		Printf("\r\nbSignal[3] = %d state[3]=%d", (WORD)bSignal[3], (WORD)state[3]);
 3280              		.loc 1 1135 3 view .LVU743
 3281 0794 AA78     		ldrb	r2, [r5, #2]	@ zero_extendqisi2
 3282 0796 A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 3283 0798 5548     		ldr	r0, .L246+32
 3284 079a FFF7FEFF 		bl	Printf
 3285              	.LVL309:
1136:VS4210/monitor.c **** 
 3286              		.loc 1 1136 3 view .LVU744
 3287 079e EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
 3288 07a0 E178     		ldrb	r1, [r4, #3]	@ zero_extendqisi2
 3289 07a2 5448     		ldr	r0, .L246+36
 3290 07a4 FFF7FEFF 		bl	Printf
 3291              	.LVL310:
1138:VS4210/monitor.c **** 
 3292              		.loc 1 1138 3 view .LVU745
 3293 07a8 534B     		ldr	r3, .L246+40
 3294 07aa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3295 07ac 5348     		ldr	r0, .L246+44
 3296 07ae FFF7FEFF 		bl	Printf
 3297              	.LVL311:
1140:VS4210/monitor.c **** 	}
 3298              		.loc 1 1140 3 view .LVU746
1140:VS4210/monitor.c **** 	}
 3299              		.loc 1 1140 16 is_stmt 0 view .LVU747
 3300 07b2 494B     		ldr	r3, .L246+8
 3301 07b4 0022     		movs	r2, #0
 3302 07b6 1A70     		strb	r2, [r3]
 3303              	.LBE2:
 3304 07b8 05E5     		b	.L126
 3305              	.L162:
1142:VS4210/monitor.c **** 	{
 3306              		.loc 1 1142 7 is_stmt 1 view .LVU748
1142:VS4210/monitor.c **** 	{
 3307              		.loc 1 1142 12 is_stmt 0 view .LVU749
 3308 07ba 5149     		ldr	r1, .L246+48
 3309 07bc 2046     		mov	r0, r4
 3310 07be FFF7FEFF 		bl	stricmp
 3311              	.LVL312:
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 108


1142:VS4210/monitor.c **** 	{
 3312              		.loc 1 1142 10 view .LVU750
 3313 07c2 0028     		cmp	r0, #0
 3314 07c4 40F0B680 		bne	.L163
 3315              	.LBB3:
1144:VS4210/monitor.c **** 
 3316              		.loc 1 1144 3 is_stmt 1 view .LVU751
1146:VS4210/monitor.c **** 		e = Asc2Bin(argv[2]);
 3317              		.loc 1 1146 3 view .LVU752
1146:VS4210/monitor.c **** 		e = Asc2Bin(argv[2]);
 3318              		.loc 1 1146 7 is_stmt 0 view .LVU753
 3319 07c8 414D     		ldr	r5, .L246
 3320 07ca 6868     		ldr	r0, [r5, #4]
 3321 07cc FFF7FEFF 		bl	Asc2Bin
 3322              	.LVL313:
1146:VS4210/monitor.c **** 		e = Asc2Bin(argv[2]);
 3323              		.loc 1 1146 5 view .LVU754
 3324 07d0 0446     		mov	r4, r0
 3325              	.LVL314:
1147:VS4210/monitor.c **** 
 3326              		.loc 1 1147 3 is_stmt 1 view .LVU755
1147:VS4210/monitor.c **** 
 3327              		.loc 1 1147 7 is_stmt 0 view .LVU756
 3328 07d2 A868     		ldr	r0, [r5, #8]
 3329              	.LVL315:
1147:VS4210/monitor.c **** 
 3330              		.loc 1 1147 7 view .LVU757
 3331 07d4 FFF7FEFF 		bl	Asc2Bin
 3332              	.LVL316:
1147:VS4210/monitor.c **** 
 3333              		.loc 1 1147 5 view .LVU758
 3334 07d8 0646     		mov	r6, r0
 3335              	.LVL317:
1149:VS4210/monitor.c **** 			Printf("\r\nDUMP EEPROM");
 3336              		.loc 1 1149 3 is_stmt 1 view .LVU759
1149:VS4210/monitor.c **** 			Printf("\r\nDUMP EEPROM");
 3337              		.loc 1 1149 19 is_stmt 0 view .LVU760
 3338 07da 4A4B     		ldr	r3, .L246+52
 3339 07dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1149:VS4210/monitor.c **** 			Printf("\r\nDUMP EEPROM");
 3340              		.loc 1 1149 6 view .LVU761
 3341 07de A02B     		cmp	r3, #160
 3342 07e0 09D0     		beq	.L231
1151:VS4210/monitor.c **** 			Printf("\r\nDUMP VS4210");
 3343              		.loc 1 1151 8 is_stmt 1 view .LVU762
1151:VS4210/monitor.c **** 			Printf("\r\nDUMP VS4210");
 3344              		.loc 1 1151 11 is_stmt 0 view .LVU763
 3345 07e2 402B     		cmp	r3, #64
 3346 07e4 0BD0     		beq	.L232
1153:VS4210/monitor.c **** 			Printf("\r\nDUMP VS8812");
 3347              		.loc 1 1153 8 is_stmt 1 view .LVU764
1153:VS4210/monitor.c **** 			Printf("\r\nDUMP VS8812");
 3348              		.loc 1 1153 11 is_stmt 0 view .LVU765
 3349 07e6 122B     		cmp	r3, #18
 3350 07e8 0DD0     		beq	.L233
1155:VS4210/monitor.c **** 			Printf("\r\nDUMP TP2824");
 3351              		.loc 1 1155 8 is_stmt 1 view .LVU766
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 109


1155:VS4210/monitor.c **** 			Printf("\r\nDUMP TP2824");
 3352              		.loc 1 1155 11 is_stmt 0 view .LVU767
 3353 07ea 882B     		cmp	r3, #136
 3354 07ec 0FD0     		beq	.L234
1158:VS4210/monitor.c **** 
 3355              		.loc 1 1158 4 is_stmt 1 view .LVU768
 3356 07ee 4648     		ldr	r0, .L246+56
 3357              	.LVL318:
1158:VS4210/monitor.c **** 
 3358              		.loc 1 1158 4 is_stmt 0 view .LVU769
 3359 07f0 FFF7FEFF 		bl	Printf
 3360              	.LVL319:
 3361 07f4 1AE0     		b	.L175
 3362              	.LVL320:
 3363              	.L231:
1150:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x40)
 3364              		.loc 1 1150 4 is_stmt 1 view .LVU770
 3365 07f6 4548     		ldr	r0, .L246+60
 3366              	.LVL321:
1150:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x40)
 3367              		.loc 1 1150 4 is_stmt 0 view .LVU771
 3368 07f8 FFF7FEFF 		bl	Printf
 3369              	.LVL322:
 3370 07fc 16E0     		b	.L175
 3371              	.LVL323:
 3372              	.L232:
1152:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x12)
 3373              		.loc 1 1152 4 is_stmt 1 view .LVU772
 3374 07fe 4448     		ldr	r0, .L246+64
 3375              	.LVL324:
1152:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x12)
 3376              		.loc 1 1152 4 is_stmt 0 view .LVU773
 3377 0800 FFF7FEFF 		bl	Printf
 3378              	.LVL325:
 3379 0804 12E0     		b	.L175
 3380              	.LVL326:
 3381              	.L233:
1154:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x88)
 3382              		.loc 1 1154 4 is_stmt 1 view .LVU774
 3383 0806 4348     		ldr	r0, .L246+68
 3384              	.LVL327:
1154:VS4210/monitor.c **** 		else if (Monitor_I2C == 0x88)
 3385              		.loc 1 1154 4 is_stmt 0 view .LVU775
 3386 0808 FFF7FEFF 		bl	Printf
 3387              	.LVL328:
 3388 080c 0EE0     		b	.L175
 3389              	.LVL329:
 3390              	.L234:
1156:VS4210/monitor.c **** 		else
 3391              		.loc 1 1156 4 is_stmt 1 view .LVU776
 3392 080e 4248     		ldr	r0, .L246+72
 3393              	.LVL330:
1156:VS4210/monitor.c **** 		else
 3394              		.loc 1 1156 4 is_stmt 0 view .LVU777
 3395 0810 FFF7FEFF 		bl	Printf
 3396              	.LVL331:
 3397 0814 0AE0     		b	.L175
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 110


 3398              	.L235:
1164:VS4210/monitor.c **** 				Printf("\r\nA0,%02x,%02x", (WORD)s, (WORD)ret);
 3399              		.loc 1 1164 5 is_stmt 1 view .LVU778
1164:VS4210/monitor.c **** 				Printf("\r\nA0,%02x,%02x", (WORD)s, (WORD)ret);
 3400              		.loc 1 1164 11 is_stmt 0 view .LVU779
 3401 0816 2046     		mov	r0, r4
 3402 0818 FFF7FEFF 		bl	ReadEEP
 3403              	.LVL332:
 3404 081c 0246     		mov	r2, r0
1164:VS4210/monitor.c **** 				Printf("\r\nA0,%02x,%02x", (WORD)s, (WORD)ret);
 3405              		.loc 1 1164 9 view .LVU780
 3406 081e 8DF81F00 		strb	r0, [sp, #31]
1165:VS4210/monitor.c **** 			}
 3407              		.loc 1 1165 5 is_stmt 1 view .LVU781
 3408 0822 2146     		mov	r1, r4
 3409 0824 3D48     		ldr	r0, .L246+76
 3410 0826 FFF7FEFF 		bl	Printf
 3411              	.LVL333:
 3412              	.L170:
1160:VS4210/monitor.c **** 		{
 3413              		.loc 1 1160 23 view .LVU782
1160:VS4210/monitor.c **** 		{
 3414              		.loc 1 1160 24 is_stmt 0 view .LVU783
 3415 082a 0134     		adds	r4, r4, #1
 3416              	.LVL334:
 3417              	.L175:
1160:VS4210/monitor.c **** 		{
 3418              		.loc 1 1160 15 is_stmt 1 discriminator 1 view .LVU784
1160:VS4210/monitor.c **** 		{
 3419              		.loc 1 1160 3 is_stmt 0 discriminator 1 view .LVU785
 3420 082c B442     		cmp	r4, r6
 3421 082e 3FF6CAAC 		bhi	.L126
1162:VS4210/monitor.c **** 			{
 3422              		.loc 1 1162 4 is_stmt 1 view .LVU786
1162:VS4210/monitor.c **** 			{
 3423              		.loc 1 1162 20 is_stmt 0 view .LVU787
 3424 0832 344B     		ldr	r3, .L246+52
 3425 0834 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1162:VS4210/monitor.c **** 			{
 3426              		.loc 1 1162 7 view .LVU788
 3427 0836 A02B     		cmp	r3, #160
 3428 0838 EDD0     		beq	.L235
1167:VS4210/monitor.c **** 			{
 3429              		.loc 1 1167 9 is_stmt 1 view .LVU789
1167:VS4210/monitor.c **** 			{
 3430              		.loc 1 1167 12 is_stmt 0 view .LVU790
 3431 083a 402B     		cmp	r3, #64
 3432 083c 09D0     		beq	.L236
1173:VS4210/monitor.c **** 			{
 3433              		.loc 1 1173 9 is_stmt 1 view .LVU791
1173:VS4210/monitor.c **** 			{
 3434              		.loc 1 1173 12 is_stmt 0 view .LVU792
 3435 083e 122B     		cmp	r3, #18
 3436 0840 12D0     		beq	.L237
1179:VS4210/monitor.c **** 			{
 3437              		.loc 1 1179 9 is_stmt 1 view .LVU793
1179:VS4210/monitor.c **** 			{
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 111


 3438              		.loc 1 1179 12 is_stmt 0 view .LVU794
 3439 0842 882B     		cmp	r3, #136
 3440 0844 1BD0     		beq	.L238
1184:VS4210/monitor.c **** 			{
 3441              		.loc 1 1184 9 is_stmt 1 view .LVU795
1184:VS4210/monitor.c **** 			{
 3442              		.loc 1 1184 12 is_stmt 0 view .LVU796
 3443 0846 282B     		cmp	r3, #40
 3444 0848 24D0     		beq	.L239
1195:VS4210/monitor.c **** 			}
 3445              		.loc 1 1195 5 is_stmt 1 view .LVU797
 3446 084a 3548     		ldr	r0, .L246+80
 3447 084c FFF7FEFF 		bl	Printf
 3448              	.LVL335:
 3449 0850 EBE7     		b	.L170
 3450              	.L236:
1169:VS4210/monitor.c **** 				// Printf("\r\nVS4210  Read addr=%02x  data=%02x",(WORD)s,(WORD)ret);
 3451              		.loc 1 1169 5 view .LVU798
1169:VS4210/monitor.c **** 				// Printf("\r\nVS4210  Read addr=%02x  data=%02x",(WORD)s,(WORD)ret);
 3452              		.loc 1 1169 11 is_stmt 0 view .LVU799
 3453 0852 E0B2     		uxtb	r0, r4
 3454 0854 FFF7FEFF 		bl	VXISI2CRead
 3455              	.LVL336:
 3456 0858 0246     		mov	r2, r0
1169:VS4210/monitor.c **** 				// Printf("\r\nVS4210  Read addr=%02x  data=%02x",(WORD)s,(WORD)ret);
 3457              		.loc 1 1169 9 view .LVU800
 3458 085a 8DF81F00 		strb	r0, [sp, #31]
1171:VS4210/monitor.c **** 			}
 3459              		.loc 1 1171 5 is_stmt 1 view .LVU801
 3460 085e 2146     		mov	r1, r4
 3461 0860 3048     		ldr	r0, .L246+84
 3462 0862 FFF7FEFF 		bl	Printf
 3463              	.LVL337:
 3464 0866 E0E7     		b	.L170
 3465              	.L237:
1175:VS4210/monitor.c **** 				//			  Printf("\r\nVS8812  Read addr=%02x  data=%02x",(WORD)s,(WORD)ret);
 3466              		.loc 1 1175 5 view .LVU802
1175:VS4210/monitor.c **** 				//			  Printf("\r\nVS8812  Read addr=%02x  data=%02x",(WORD)s,(WORD)ret);
 3467              		.loc 1 1175 11 is_stmt 0 view .LVU803
 3468 0868 E0B2     		uxtb	r0, r4
 3469 086a FFF7FEFF 		bl	VS8812Read
 3470              	.LVL338:
 3471 086e 0246     		mov	r2, r0
1175:VS4210/monitor.c **** 				//			  Printf("\r\nVS8812  Read addr=%02x  data=%02x",(WORD)s,(WORD)ret);
 3472              		.loc 1 1175 9 view .LVU804
 3473 0870 8DF81F00 		strb	r0, [sp, #31]
1177:VS4210/monitor.c **** 			}
 3474              		.loc 1 1177 5 is_stmt 1 view .LVU805
 3475 0874 2146     		mov	r1, r4
 3476 0876 2C48     		ldr	r0, .L246+88
 3477 0878 FFF7FEFF 		bl	Printf
 3478              	.LVL339:
 3479 087c D5E7     		b	.L170
 3480              	.L238:
1181:VS4210/monitor.c **** 				Printf("\r\n88,%02x,%02x", (WORD)s, (WORD)ret);
 3481              		.loc 1 1181 5 view .LVU806
1181:VS4210/monitor.c **** 				Printf("\r\n88,%02x,%02x", (WORD)s, (WORD)ret);
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 112


 3482              		.loc 1 1181 11 is_stmt 0 view .LVU807
 3483 087e E0B2     		uxtb	r0, r4
 3484 0880 FFF7FEFF 		bl	tp28xx_byte_read
 3485              	.LVL340:
 3486 0884 0246     		mov	r2, r0
1181:VS4210/monitor.c **** 				Printf("\r\n88,%02x,%02x", (WORD)s, (WORD)ret);
 3487              		.loc 1 1181 9 view .LVU808
 3488 0886 8DF81F00 		strb	r0, [sp, #31]
1182:VS4210/monitor.c **** 			}
 3489              		.loc 1 1182 5 is_stmt 1 view .LVU809
 3490 088a 2146     		mov	r1, r4
 3491 088c 2748     		ldr	r0, .L246+92
 3492 088e FFF7FEFF 		bl	Printf
 3493              	.LVL341:
 3494 0892 CAE7     		b	.L170
 3495              	.L239:
1186:VS4210/monitor.c **** 				addr <<= 8;
 3496              		.loc 1 1186 5 view .LVU810
1186:VS4210/monitor.c **** 				addr <<= 8;
 3497              		.loc 1 1186 12 is_stmt 0 view .LVU811
 3498 0894 0E4D     		ldr	r5, .L246
 3499 0896 6868     		ldr	r0, [r5, #4]
 3500 0898 FFF7FEFF 		bl	Asc2Bin
 3501              	.LVL342:
1187:VS4210/monitor.c **** 				addr |= Asc2Bin(argv[2]);
 3502              		.loc 1 1187 5 is_stmt 1 view .LVU812
1187:VS4210/monitor.c **** 				addr |= Asc2Bin(argv[2]);
 3503              		.loc 1 1187 10 is_stmt 0 view .LVU813
 3504 089c 0702     		lsls	r7, r0, #8
 3505              	.LVL343:
1188:VS4210/monitor.c **** 
 3506              		.loc 1 1188 5 is_stmt 1 view .LVU814
1188:VS4210/monitor.c **** 
 3507              		.loc 1 1188 13 is_stmt 0 view .LVU815
 3508 089e A868     		ldr	r0, [r5, #8]
 3509 08a0 FFF7FEFF 		bl	Asc2Bin
 3510              	.LVL344:
1190:VS4210/monitor.c **** 				Printf("\r\nGT911  Read addr=%02x%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)Asc2Bin(argv[2
 3511              		.loc 1 1190 5 is_stmt 1 view .LVU816
 3512 08a4 0122     		movs	r2, #1
 3513 08a6 0DF11E01 		add	r1, sp, #30
 3514 08aa 3843     		orrs	r0, r0, r7
 3515              	.LVL345:
1190:VS4210/monitor.c **** 				Printf("\r\nGT911  Read addr=%02x%02x  data=%02x", (WORD)Asc2Bin(argv[1]), (WORD)Asc2Bin(argv[2
 3516              		.loc 1 1190 5 is_stmt 0 view .LVU817
 3517 08ac FFF7FEFF 		bl	GET_nGT911
 3518              	.LVL346:
1191:VS4210/monitor.c **** 			}
 3519              		.loc 1 1191 5 is_stmt 1 view .LVU818
1191:VS4210/monitor.c **** 			}
 3520              		.loc 1 1191 62 is_stmt 0 view .LVU819
 3521 08b0 6868     		ldr	r0, [r5, #4]
 3522 08b2 FFF7FEFF 		bl	Asc2Bin
 3523              	.LVL347:
 3524 08b6 0746     		mov	r7, r0
1191:VS4210/monitor.c **** 			}
 3525              		.loc 1 1191 86 view .LVU820
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 113


 3526 08b8 A868     		ldr	r0, [r5, #8]
 3527 08ba FFF7FEFF 		bl	Asc2Bin
 3528              	.LVL348:
 3529 08be 0246     		mov	r2, r0
1191:VS4210/monitor.c **** 			}
 3530              		.loc 1 1191 5 view .LVU821
 3531 08c0 9DF81E30 		ldrb	r3, [sp, #30]	@ zero_extendqisi2
 3532 08c4 3946     		mov	r1, r7
 3533 08c6 1A48     		ldr	r0, .L246+96
 3534 08c8 FFF7FEFF 		bl	Printf
 3535              	.LVL349:
 3536 08cc ADE7     		b	.L170
 3537              	.L247:
 3538 08ce 00BF     		.align	2
 3539              	.L246:
 3540 08d0 00000000 		.word	argv
 3541 08d4 CC010000 		.word	.LC55
 3542 08d8 00000000 		.word	.LANCHOR3
 3543 08dc D0010000 		.word	.LC56
 3544 08e0 00000000 		.word	bSignal
 3545 08e4 00000000 		.word	state
 3546 08e8 D4010000 		.word	.LC57
 3547 08ec F4010000 		.word	.LC58
 3548 08f0 14020000 		.word	.LC59
 3549 08f4 34020000 		.word	.LC60
 3550 08f8 00000000 		.word	VideoChangeFlag
 3551 08fc 54020000 		.word	.LC61
 3552 0900 6C020000 		.word	.LC62
 3553 0904 00000000 		.word	.LANCHOR2
 3554 0908 B4020000 		.word	.LC67
 3555 090c 74020000 		.word	.LC63
 3556 0910 84020000 		.word	.LC64
 3557 0914 94020000 		.word	.LC65
 3558 0918 A4020000 		.word	.LC66
 3559 091c C0020000 		.word	.LC68
 3560 0920 54000000 		.word	.LC30
 3561 0924 D0020000 		.word	.LC69
 3562 0928 E0020000 		.word	.LC70
 3563 092c F0020000 		.word	.LC71
 3564 0930 DC000000 		.word	.LC36
 3565              	.LVL350:
 3566              	.L163:
1191:VS4210/monitor.c **** 			}
 3567              		.loc 1 1191 5 view .LVU822
 3568              	.LBE3:
1199:VS4210/monitor.c **** 	{ // EEPROM Clear to 0xFF
 3569              		.loc 1 1199 7 is_stmt 1 view .LVU823
1199:VS4210/monitor.c **** 	{ // EEPROM Clear to 0xFF
 3570              		.loc 1 1199 12 is_stmt 0 view .LVU824
 3571 0934 DF49     		ldr	r1, .L248
 3572 0936 2046     		mov	r0, r4
 3573 0938 FFF7FEFF 		bl	stricmp
 3574              	.LVL351:
1199:VS4210/monitor.c **** 	{ // EEPROM Clear to 0xFF
 3575              		.loc 1 1199 10 view .LVU825
 3576 093c 0028     		cmp	r0, #0
 3577 093e 40F02481 		bne	.L177
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 114


1202:VS4210/monitor.c **** 
 3578              		.loc 1 1202 3 is_stmt 1 view .LVU826
 3579 0942 DD48     		ldr	r0, .L248+4
 3580 0944 FFF7FEFF 		bl	Printf
 3581              	.LVL352:
1204:VS4210/monitor.c **** 		WriteEEP(1, 0xFF);
 3582              		.loc 1 1204 3 view .LVU827
 3583 0948 FF21     		movs	r1, #255
 3584 094a 0020     		movs	r0, #0
 3585 094c FFF7FEFF 		bl	WriteEEP
 3586              	.LVL353:
1205:VS4210/monitor.c **** 		WriteEEP(2, 0xFF);
 3587              		.loc 1 1205 3 view .LVU828
 3588 0950 FF21     		movs	r1, #255
 3589 0952 0120     		movs	r0, #1
 3590 0954 FFF7FEFF 		bl	WriteEEP
 3591              	.LVL354:
1206:VS4210/monitor.c **** 		WriteEEP(3, 0xFF);
 3592              		.loc 1 1206 3 view .LVU829
 3593 0958 FF21     		movs	r1, #255
 3594 095a 0220     		movs	r0, #2
 3595 095c FFF7FEFF 		bl	WriteEEP
 3596              	.LVL355:
1207:VS4210/monitor.c **** 		WriteEEP(EEP_FWREV_MAJOR, 0xFF);
 3597              		.loc 1 1207 3 view .LVU830
 3598 0960 FF21     		movs	r1, #255
 3599 0962 0320     		movs	r0, #3
 3600 0964 FFF7FEFF 		bl	WriteEEP
 3601              	.LVL356:
1208:VS4210/monitor.c **** 		WriteEEP(EEP_FWREV_MINOR, 0xFF);
 3602              		.loc 1 1208 3 view .LVU831
 3603 0968 FF21     		movs	r1, #255
 3604 096a 0420     		movs	r0, #4
 3605 096c FFF7FEFF 		bl	WriteEEP
 3606              	.LVL357:
1209:VS4210/monitor.c **** 
 3607              		.loc 1 1209 3 view .LVU832
 3608 0970 FF21     		movs	r1, #255
 3609 0972 0520     		movs	r0, #5
 3610 0974 FFF7FEFF 		bl	WriteEEP
 3611              	.LVL358:
1211:VS4210/monitor.c **** 		WriteEEP(EEP_CONTRAST, 0xFF);
 3612              		.loc 1 1211 3 view .LVU833
 3613 0978 FF21     		movs	r1, #255
 3614 097a A020     		movs	r0, #160
 3615 097c FFF7FEFF 		bl	WriteEEP
 3616              	.LVL359:
1212:VS4210/monitor.c **** 		WriteEEP(EEP_BRIGHTNESS, 0xFF);
 3617              		.loc 1 1212 3 view .LVU834
 3618 0980 FF21     		movs	r1, #255
 3619 0982 1220     		movs	r0, #18
 3620 0984 FFF7FEFF 		bl	WriteEEP
 3621              	.LVL360:
1213:VS4210/monitor.c **** 		WriteEEP(EEP_SATURATION_U, 0xFF);
 3622              		.loc 1 1213 3 view .LVU835
 3623 0988 FF21     		movs	r1, #255
 3624 098a 1320     		movs	r0, #19
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 115


 3625 098c FFF7FEFF 		bl	WriteEEP
 3626              	.LVL361:
1214:VS4210/monitor.c **** 		WriteEEP(EEP_SHARPNESS, 0xFF);
 3627              		.loc 1 1214 3 view .LVU836
 3628 0990 FF21     		movs	r1, #255
 3629 0992 1420     		movs	r0, #20
 3630 0994 FFF7FEFF 		bl	WriteEEP
 3631              	.LVL362:
1215:VS4210/monitor.c **** 		WriteEEP(EEP_HUE, 0xFF);
 3632              		.loc 1 1215 3 view .LVU837
 3633 0998 FF21     		movs	r1, #255
 3634 099a 1620     		movs	r0, #22
 3635 099c FFF7FEFF 		bl	WriteEEP
 3636              	.LVL363:
1216:VS4210/monitor.c **** 		WriteEEP(EEP_BACKLIGHT, 0xFF);
 3637              		.loc 1 1216 3 view .LVU838
 3638 09a0 FF21     		movs	r1, #255
 3639 09a2 1720     		movs	r0, #23
 3640 09a4 FFF7FEFF 		bl	WriteEEP
 3641              	.LVL364:
1217:VS4210/monitor.c **** 
 3642              		.loc 1 1217 3 view .LVU839
 3643 09a8 FF21     		movs	r1, #255
 3644 09aa 1820     		movs	r0, #24
 3645 09ac FFF7FEFF 		bl	WriteEEP
 3646              	.LVL365:
1219:VS4210/monitor.c **** 		WriteEEP(EEP_RearMode, 0xFF);	// RearMode...... R
 3647              		.loc 1 1219 3 view .LVU840
 3648 09b0 FF21     		movs	r1, #255
 3649 09b2 A120     		movs	r0, #161
 3650 09b4 FFF7FEFF 		bl	WriteEEP
 3651              	.LVL366:
1220:VS4210/monitor.c **** 		WriteEEP(EEP_TriggerVGA, 0xFF); // trigger vga...... on
 3652              		.loc 1 1220 3 view .LVU841
 3653 09b8 FF21     		movs	r1, #255
 3654 09ba A220     		movs	r0, #162
 3655 09bc FFF7FEFF 		bl	WriteEEP
 3656              	.LVL367:
1221:VS4210/monitor.c **** 		WriteEEP(EEP_GAUGEMode, 0xFF);	// �˨�OSD....... ON
 3657              		.loc 1 1221 3 view .LVU842
 3658 09c0 FF21     		movs	r1, #255
 3659 09c2 BA20     		movs	r0, #186
 3660 09c4 FFF7FEFF 		bl	WriteEEP
 3661              	.LVL368:
1222:VS4210/monitor.c **** 		WriteEEP(EEP_Powerflag, 0xFF);	// POWER FLAG....... ON
 3662              		.loc 1 1222 3 view .LVU843
 3663 09c8 FF21     		movs	r1, #255
 3664 09ca A420     		movs	r0, #164
 3665 09cc FFF7FEFF 		bl	WriteEEP
 3666              	.LVL369:
1223:VS4210/monitor.c **** 		WriteEEP(EEP_COSDMode, 0xFF);	// Display OSD... ON
 3667              		.loc 1 1223 3 view .LVU844
 3668 09d0 FF21     		movs	r1, #255
 3669 09d2 AB20     		movs	r0, #171
 3670 09d4 FFF7FEFF 		bl	WriteEEP
 3671              	.LVL370:
1224:VS4210/monitor.c **** 		WriteEEP(EEP_DVRDisplay, 0xFF); // DVR Display OSD... ON
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 116


 3672              		.loc 1 1224 3 view .LVU845
 3673 09d8 FF21     		movs	r1, #255
 3674 09da A320     		movs	r0, #163
 3675 09dc FFF7FEFF 		bl	WriteEEP
 3676              	.LVL371:
1225:VS4210/monitor.c **** 		WriteEEP(EEP_CAMAMode, 0xFF);	// MirrorA....... OFF
 3677              		.loc 1 1225 3 view .LVU846
 3678 09e0 FF21     		movs	r1, #255
 3679 09e2 BB20     		movs	r0, #187
 3680 09e4 FFF7FEFF 		bl	WriteEEP
 3681              	.LVL372:
1226:VS4210/monitor.c **** 		WriteEEP(EEP_CAMBMode, 0xFF);	// MirrorB....... OFF
 3682              		.loc 1 1226 3 view .LVU847
 3683 09e8 FF21     		movs	r1, #255
 3684 09ea A520     		movs	r0, #165
 3685 09ec FFF7FEFF 		bl	WriteEEP
 3686              	.LVL373:
1227:VS4210/monitor.c **** 		WriteEEP(EEP_CAMCMode, 0xFF);	// MirrorC....... OFF
 3687              		.loc 1 1227 3 view .LVU848
 3688 09f0 FF21     		movs	r1, #255
 3689 09f2 A620     		movs	r0, #166
 3690 09f4 FFF7FEFF 		bl	WriteEEP
 3691              	.LVL374:
1228:VS4210/monitor.c **** 		WriteEEP(EEP_CAMRMode, 0xFF);	// MirrorR....... ON
 3692              		.loc 1 1228 3 view .LVU849
 3693 09f8 FF21     		movs	r1, #255
 3694 09fa A720     		movs	r0, #167
 3695 09fc FFF7FEFF 		bl	WriteEEP
 3696              	.LVL375:
1229:VS4210/monitor.c **** 		WriteEEP(EEP_CAMDMode, 0xFF);	// MirrorD....... ON
 3697              		.loc 1 1229 3 view .LVU850
 3698 0a00 FF21     		movs	r1, #255
 3699 0a02 A820     		movs	r0, #168
 3700 0a04 FFF7FEFF 		bl	WriteEEP
 3701              	.LVL376:
1230:VS4210/monitor.c **** 
 3702              		.loc 1 1230 3 view .LVU851
 3703 0a08 FF21     		movs	r1, #255
 3704 0a0a 1920     		movs	r0, #25
 3705 0a0c FFF7FEFF 		bl	WriteEEP
 3706              	.LVL377:
1232:VS4210/monitor.c **** 
 3707              		.loc 1 1232 3 view .LVU852
 3708 0a10 FF21     		movs	r1, #255
 3709 0a12 3820     		movs	r0, #56
 3710 0a14 FFF7FEFF 		bl	WriteEEP
 3711              	.LVL378:
1234:VS4210/monitor.c **** 
 3712              		.loc 1 1234 3 view .LVU853
 3713 0a18 FF21     		movs	r1, #255
 3714 0a1a A420     		movs	r0, #164
 3715 0a1c FFF7FEFF 		bl	WriteEEP
 3716              	.LVL379:
1236:VS4210/monitor.c **** 		WriteEEP(EEP_MenuTouch, 0xFF);	 // Menu Touch select....... OFF
 3717              		.loc 1 1236 3 view .LVU854
 3718 0a20 FF21     		movs	r1, #255
 3719 0a22 AC20     		movs	r0, #172
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 117


 3720 0a24 FFF7FEFF 		bl	WriteEEP
 3721              	.LVL380:
1237:VS4210/monitor.c **** 
 3722              		.loc 1 1237 3 view .LVU855
 3723 0a28 FF21     		movs	r1, #255
 3724 0a2a 2020     		movs	r0, #32
 3725 0a2c FFF7FEFF 		bl	WriteEEP
 3726              	.LVL381:
1239:VS4210/monitor.c **** 		WriteEEP(EEP_Triple_Screen_Type, 0xFF);
 3727              		.loc 1 1239 3 view .LVU856
 3728 0a30 FF21     		movs	r1, #255
 3729 0a32 BF20     		movs	r0, #191
 3730 0a34 FFF7FEFF 		bl	WriteEEP
 3731              	.LVL382:
1240:VS4210/monitor.c **** 
 3732              		.loc 1 1240 3 view .LVU857
 3733 0a38 FF21     		movs	r1, #255
 3734 0a3a 2020     		movs	r0, #32
 3735 0a3c FFF7FEFF 		bl	WriteEEP
 3736              	.LVL383:
1242:VS4210/monitor.c **** 		WriteEEP(EEP_Distance_Gauge_Width, 0xFF);
 3737              		.loc 1 1242 3 view .LVU858
 3738 0a40 FF21     		movs	r1, #255
 3739 0a42 2120     		movs	r0, #33
 3740 0a44 FFF7FEFF 		bl	WriteEEP
 3741              	.LVL384:
1243:VS4210/monitor.c **** 
 3742              		.loc 1 1243 3 view .LVU859
 3743 0a48 FF21     		movs	r1, #255
 3744 0a4a 2220     		movs	r0, #34
 3745 0a4c FFF7FEFF 		bl	WriteEEP
 3746              	.LVL385:
1245:VS4210/monitor.c **** 		WriteEEP(EEP_Grabber_Liner_Position, 0xFF);
 3747              		.loc 1 1245 3 view .LVU860
 3748 0a50 FF21     		movs	r1, #255
 3749 0a52 2320     		movs	r0, #35
 3750 0a54 FFF7FEFF 		bl	WriteEEP
 3751              	.LVL386:
1246:VS4210/monitor.c **** 		WriteEEP(EEP_Grabber_Liner_Width, 0xFF);
 3752              		.loc 1 1246 3 view .LVU861
 3753 0a58 FF21     		movs	r1, #255
 3754 0a5a 2520     		movs	r0, #37
 3755 0a5c FFF7FEFF 		bl	WriteEEP
 3756              	.LVL387:
1247:VS4210/monitor.c **** 
 3757              		.loc 1 1247 3 view .LVU862
 3758 0a60 FF21     		movs	r1, #255
 3759 0a62 2420     		movs	r0, #36
 3760 0a64 FFF7FEFF 		bl	WriteEEP
 3761              	.LVL388:
1250:VS4210/monitor.c **** 		WriteEEP(EEP_AudioRecord, 0xFF); // dvr audio channel
 3762              		.loc 1 1250 3 view .LVU863
 3763 0a68 FF21     		movs	r1, #255
 3764 0a6a 3720     		movs	r0, #55
 3765 0a6c FFF7FEFF 		bl	WriteEEP
 3766              	.LVL389:
1251:VS4210/monitor.c **** 
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 118


 3767              		.loc 1 1251 3 view .LVU864
 3768 0a70 FF21     		movs	r1, #255
 3769 0a72 B220     		movs	r0, #178
 3770 0a74 FFF7FEFF 		bl	WriteEEP
 3771              	.LVL390:
1253:VS4210/monitor.c **** 		WriteEEP(EEP_IMAGE_B_Mode, 0xFF);
 3772              		.loc 1 1253 3 view .LVU865
 3773 0a78 FF21     		movs	r1, #255
 3774 0a7a BC20     		movs	r0, #188
 3775 0a7c FFF7FEFF 		bl	WriteEEP
 3776              	.LVL391:
1254:VS4210/monitor.c **** 		WriteEEP(EEP_IMAGE_C_Mode, 0xFF);
 3777              		.loc 1 1254 3 view .LVU866
 3778 0a80 FF21     		movs	r1, #255
 3779 0a82 BD20     		movs	r0, #189
 3780 0a84 FFF7FEFF 		bl	WriteEEP
 3781              	.LVL392:
1255:VS4210/monitor.c **** 
 3782              		.loc 1 1255 3 view .LVU867
 3783 0a88 FF21     		movs	r1, #255
 3784 0a8a BE20     		movs	r0, #190
 3785 0a8c FFF7FEFF 		bl	WriteEEP
 3786              	.LVL393:
1257:VS4210/monitor.c **** 		WriteEEP(EEP_DELAYCAMB, 0xFF); // DELAY CAM B....... 2
 3787              		.loc 1 1257 3 view .LVU868
 3788 0a90 FF21     		movs	r1, #255
 3789 0a92 C020     		movs	r0, #192
 3790 0a94 FFF7FEFF 		bl	WriteEEP
 3791              	.LVL394:
1258:VS4210/monitor.c **** 		WriteEEP(EEP_DELAYCAMC, 0xFF); // DELAY CAM C....... 2
 3792              		.loc 1 1258 3 view .LVU869
 3793 0a98 FF21     		movs	r1, #255
 3794 0a9a C120     		movs	r0, #193
 3795 0a9c FFF7FEFF 		bl	WriteEEP
 3796              	.LVL395:
1259:VS4210/monitor.c **** 		WriteEEP(EEP_DELAYCAMR, 0xFF); // DELAY CAM R....... 2
 3797              		.loc 1 1259 3 view .LVU870
 3798 0aa0 FF21     		movs	r1, #255
 3799 0aa2 C220     		movs	r0, #194
 3800 0aa4 FFF7FEFF 		bl	WriteEEP
 3801              	.LVL396:
1260:VS4210/monitor.c **** 		WriteEEP(EEP_DELAYCAMD, 0xFF); // DELAY CAM D....... 2
 3802              		.loc 1 1260 3 view .LVU871
 3803 0aa8 FF21     		movs	r1, #255
 3804 0aaa C320     		movs	r0, #195
 3805 0aac FFF7FEFF 		bl	WriteEEP
 3806              	.LVL397:
1261:VS4210/monitor.c **** 
 3807              		.loc 1 1261 3 view .LVU872
 3808 0ab0 FF21     		movs	r1, #255
 3809 0ab2 C420     		movs	r0, #196
 3810 0ab4 FFF7FEFF 		bl	WriteEEP
 3811              	.LVL398:
1263:VS4210/monitor.c **** 		WriteEEP(EEP_ONOFFChoice, 0xFF); // OSD	lock....... off
 3812              		.loc 1 1263 3 view .LVU873
 3813 0ab8 FF21     		movs	r1, #255
 3814 0aba AE20     		movs	r0, #174
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 119


 3815 0abc FFF7FEFF 		bl	WriteEEP
 3816              	.LVL399:
1264:VS4210/monitor.c **** 		// TP2824 video data reset
 3817              		.loc 1 1264 3 view .LVU874
 3818 0ac0 FF21     		movs	r1, #255
 3819 0ac2 AC20     		movs	r0, #172
 3820 0ac4 FFF7FEFF 		bl	WriteEEP
 3821              	.LVL400:
1266:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_MODE0, 0xFF);
 3822              		.loc 1 1266 3 view .LVU875
 3823 0ac8 FF21     		movs	r1, #255
 3824 0aca C720     		movs	r0, #199
 3825 0acc FFF7FEFF 		bl	WriteEEP
 3826              	.LVL401:
1267:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_STD1, 0xFF);
 3827              		.loc 1 1267 3 view .LVU876
 3828 0ad0 FF21     		movs	r1, #255
 3829 0ad2 C820     		movs	r0, #200
 3830 0ad4 FFF7FEFF 		bl	WriteEEP
 3831              	.LVL402:
1268:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_MODE1, 0xFF);
 3832              		.loc 1 1268 3 view .LVU877
 3833 0ad8 FF21     		movs	r1, #255
 3834 0ada CA20     		movs	r0, #202
 3835 0adc FFF7FEFF 		bl	WriteEEP
 3836              	.LVL403:
1269:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_STD2, 0xFF);
 3837              		.loc 1 1269 3 view .LVU878
 3838 0ae0 FF21     		movs	r1, #255
 3839 0ae2 CB20     		movs	r0, #203
 3840 0ae4 FFF7FEFF 		bl	WriteEEP
 3841              	.LVL404:
1270:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_MODE2, 0xFF);
 3842              		.loc 1 1270 3 view .LVU879
 3843 0ae8 FF21     		movs	r1, #255
 3844 0aea CD20     		movs	r0, #205
 3845 0aec FFF7FEFF 		bl	WriteEEP
 3846              	.LVL405:
1271:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_STD3, 0xFF);
 3847              		.loc 1 1271 3 view .LVU880
 3848 0af0 FF21     		movs	r1, #255
 3849 0af2 CE20     		movs	r0, #206
 3850 0af4 FFF7FEFF 		bl	WriteEEP
 3851              	.LVL406:
1272:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_MODE3, 0xFF);
 3852              		.loc 1 1272 3 view .LVU881
 3853 0af8 FF21     		movs	r1, #255
 3854 0afa D020     		movs	r0, #208
 3855 0afc FFF7FEFF 		bl	WriteEEP
 3856              	.LVL407:
1273:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_STD4, 0xFF);
 3857              		.loc 1 1273 3 view .LVU882
 3858 0b00 FF21     		movs	r1, #255
 3859 0b02 D120     		movs	r0, #209
 3860 0b04 FFF7FEFF 		bl	WriteEEP
 3861              	.LVL408:
1274:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_MODE4, 0xFF);
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 120


 3862              		.loc 1 1274 3 view .LVU883
 3863 0b08 FF21     		movs	r1, #255
 3864 0b0a D320     		movs	r0, #211
 3865 0b0c FFF7FEFF 		bl	WriteEEP
 3866              	.LVL409:
1275:VS4210/monitor.c **** 
 3867              		.loc 1 1275 3 view .LVU884
 3868 0b10 FF21     		movs	r1, #255
 3869 0b12 D420     		movs	r0, #212
 3870 0b14 FFF7FEFF 		bl	WriteEEP
 3871              	.LVL410:
1279:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_STD0 + (1 * 3) + 2, 0xFF);
 3872              		.loc 1 1279 3 view .LVU885
 3873 0b18 FF21     		movs	r1, #255
 3874 0b1a C920     		movs	r0, #201
 3875 0b1c FFF7FEFF 		bl	WriteEEP
 3876              	.LVL411:
1280:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_STD0 + (2 * 3) + 2, 0xFF);
 3877              		.loc 1 1280 3 view .LVU886
 3878 0b20 FF21     		movs	r1, #255
 3879 0b22 CC20     		movs	r0, #204
 3880 0b24 FFF7FEFF 		bl	WriteEEP
 3881              	.LVL412:
1281:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_STD0 + (3 * 3) + 2, 0xFF);
 3882              		.loc 1 1281 3 view .LVU887
 3883 0b28 FF21     		movs	r1, #255
 3884 0b2a CF20     		movs	r0, #207
 3885 0b2c FFF7FEFF 		bl	WriteEEP
 3886              	.LVL413:
1282:VS4210/monitor.c **** 		WriteEEP(EEP_TP2824_STD0 + (4 * 3) + 2, 0xFF);
 3887              		.loc 1 1282 3 view .LVU888
 3888 0b30 FF21     		movs	r1, #255
 3889 0b32 D220     		movs	r0, #210
 3890 0b34 FFF7FEFF 		bl	WriteEEP
 3891              	.LVL414:
1283:VS4210/monitor.c **** 
 3892              		.loc 1 1283 3 view .LVU889
 3893 0b38 FF21     		movs	r1, #255
 3894 0b3a D520     		movs	r0, #213
 3895 0b3c FFF7FEFF 		bl	WriteEEP
 3896              	.LVL415:
1285:VS4210/monitor.c **** 		WriteEEP(EEP_FlishCAM2, 0xFF);
 3897              		.loc 1 1285 3 view .LVU890
 3898 0b40 FF21     		movs	r1, #255
 3899 0b42 D820     		movs	r0, #216
 3900 0b44 FFF7FEFF 		bl	WriteEEP
 3901              	.LVL416:
1286:VS4210/monitor.c **** 		WriteEEP(EEP_FlishCAM3, 0xFF);
 3902              		.loc 1 1286 3 view .LVU891
 3903 0b48 FF21     		movs	r1, #255
 3904 0b4a D920     		movs	r0, #217
 3905 0b4c FFF7FEFF 		bl	WriteEEP
 3906              	.LVL417:
1287:VS4210/monitor.c **** 		WriteEEP(EEP_FlishCAM4, 0xFF);
 3907              		.loc 1 1287 3 view .LVU892
 3908 0b50 FF21     		movs	r1, #255
 3909 0b52 DA20     		movs	r0, #218
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 121


 3910 0b54 FFF7FEFF 		bl	WriteEEP
 3911              	.LVL418:
1288:VS4210/monitor.c **** 		WriteEEP(EEP_TimeStep, 0xFF);	// TimerStep.....02
 3912              		.loc 1 1288 3 view .LVU893
 3913 0b58 FF21     		movs	r1, #255
 3914 0b5a DB20     		movs	r0, #219
 3915 0b5c FFF7FEFF 		bl	WriteEEP
 3916              	.LVL419:
1289:VS4210/monitor.c **** 		WriteEEP(EEP_CAMOutMode, 0xFF); // CAMOut........ QUAL
 3917              		.loc 1 1289 3 view .LVU894
 3918 0b60 FF21     		movs	r1, #255
 3919 0b62 AA20     		movs	r0, #170
 3920 0b64 FFF7FEFF 		bl	WriteEEP
 3921              	.LVL420:
1290:VS4210/monitor.c **** 
 3922              		.loc 1 1290 3 view .LVU895
 3923 0b68 FF21     		movs	r1, #255
 3924 0b6a A920     		movs	r0, #169
 3925 0b6c FFF7FEFF 		bl	WriteEEP
 3926              	.LVL421:
1292:VS4210/monitor.c **** 
 3927              		.loc 1 1292 3 view .LVU896
 3928 0b70 FF21     		movs	r1, #255
 3929 0b72 AF20     		movs	r0, #175
 3930 0b74 FFF7FEFF 		bl	WriteEEP
 3931              	.LVL422:
1294:VS4210/monitor.c **** 
 3932              		.loc 1 1294 3 view .LVU897
 3933 0b78 FF21     		movs	r1, #255
 3934 0b7a B020     		movs	r0, #176
 3935 0b7c FFF7FEFF 		bl	WriteEEP
 3936              	.LVL423:
1296:VS4210/monitor.c **** 	}
 3937              		.loc 1 1296 3 view .LVU898
 3938 0b80 4E48     		ldr	r0, .L248+8
 3939 0b82 FFF7FEFF 		bl	Printf
 3940              	.LVL424:
 3941 0b86 FFF71EBB 		b	.L126
 3942              	.L177:
1332:VS4210/monitor.c **** 	{
 3943              		.loc 1 1332 7 view .LVU899
1332:VS4210/monitor.c **** 	{
 3944              		.loc 1 1332 12 is_stmt 0 view .LVU900
 3945 0b8a 4D49     		ldr	r1, .L248+12
 3946 0b8c 2046     		mov	r0, r4
 3947 0b8e FFF7FEFF 		bl	stricmp
 3948              	.LVL425:
1332:VS4210/monitor.c **** 	{
 3949              		.loc 1 1332 10 view .LVU901
 3950 0b92 0028     		cmp	r0, #0
 3951 0b94 3FF417AB 		beq	.L126
1335:VS4210/monitor.c **** 	{
 3952              		.loc 1 1335 7 is_stmt 1 view .LVU902
1335:VS4210/monitor.c **** 	{
 3953              		.loc 1 1335 12 is_stmt 0 view .LVU903
 3954 0b98 4A49     		ldr	r1, .L248+16
 3955 0b9a 2046     		mov	r0, r4
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 122


 3956 0b9c FFF7FEFF 		bl	stricmp
 3957              	.LVL426:
1335:VS4210/monitor.c **** 	{
 3958              		.loc 1 1335 10 view .LVU904
 3959 0ba0 18BB     		cbnz	r0, .L178
 3960              	.LBB4:
1337:VS4210/monitor.c **** 
 3961              		.loc 1 1337 3 is_stmt 1 view .LVU905
1339:VS4210/monitor.c **** 		addr <<= 8;
 3962              		.loc 1 1339 3 view .LVU906
1339:VS4210/monitor.c **** 		addr <<= 8;
 3963              		.loc 1 1339 10 is_stmt 0 view .LVU907
 3964 0ba2 494C     		ldr	r4, .L248+20
 3965 0ba4 6068     		ldr	r0, [r4, #4]
 3966 0ba6 FFF7FEFF 		bl	Asc2Bin
 3967              	.LVL427:
1340:VS4210/monitor.c **** 		addr |= Asc2Bin(argv[2]);
 3968              		.loc 1 1340 3 is_stmt 1 view .LVU908
1340:VS4210/monitor.c **** 		addr |= Asc2Bin(argv[2]);
 3969              		.loc 1 1340 8 is_stmt 0 view .LVU909
 3970 0baa 0602     		lsls	r6, r0, #8
 3971              	.LVL428:
1341:VS4210/monitor.c **** 
 3972              		.loc 1 1341 3 is_stmt 1 view .LVU910
1341:VS4210/monitor.c **** 
 3973              		.loc 1 1341 11 is_stmt 0 view .LVU911
 3974 0bac A068     		ldr	r0, [r4, #8]
 3975 0bae FFF7FEFF 		bl	Asc2Bin
 3976              	.LVL429:
1341:VS4210/monitor.c **** 
 3977              		.loc 1 1341 8 view .LVU912
 3978 0bb2 0643     		orrs	r6, r6, r0
 3979              	.LVL430:
1343:VS4210/monitor.c **** 
 3980              		.loc 1 1343 3 is_stmt 1 view .LVU913
1343:VS4210/monitor.c **** 
 3981              		.loc 1 1343 7 is_stmt 0 view .LVU914
 3982 0bb4 E068     		ldr	r0, [r4, #12]
 3983 0bb6 FFF7FEFF 		bl	Asc2Bin
 3984              	.LVL431:
1343:VS4210/monitor.c **** 
 3985              		.loc 1 1343 5 view .LVU915
 3986 0bba 0546     		mov	r5, r0
 3987              	.LVL432:
1345:VS4210/monitor.c **** 
 3988              		.loc 1 1345 3 is_stmt 1 view .LVU916
 3989 0bbc 4348     		ldr	r0, .L248+24
 3990              	.LVL433:
1345:VS4210/monitor.c **** 
 3991              		.loc 1 1345 3 is_stmt 0 view .LVU917
 3992 0bbe FFF7FEFF 		bl	Printf
 3993              	.LVL434:
1347:VS4210/monitor.c **** 		{
 3994              		.loc 1 1347 3 is_stmt 1 view .LVU918
1347:VS4210/monitor.c **** 		{
 3995              		.loc 1 1347 10 is_stmt 0 view .LVU919
 3996 0bc2 0024     		movs	r4, #0
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 123


1347:VS4210/monitor.c **** 		{
 3997              		.loc 1 1347 3 view .LVU920
 3998 0bc4 0DE0     		b	.L179
 3999              	.LVL435:
 4000              	.L180:
1349:VS4210/monitor.c **** 			Printf("\r\nAddr=%04x Data=%02x", (WORD)addr + i, (WORD)temp);
 4001              		.loc 1 1349 4 is_stmt 1 discriminator 3 view .LVU921
 4002 0bc6 A719     		adds	r7, r4, r6
 4003 0bc8 0122     		movs	r2, #1
 4004 0bca 0DF11E01 		add	r1, sp, #30
 4005 0bce 3846     		mov	r0, r7
 4006 0bd0 FFF7FEFF 		bl	GET_nGT911
 4007              	.LVL436:
1350:VS4210/monitor.c **** 		}
 4008              		.loc 1 1350 4 discriminator 3 view .LVU922
 4009 0bd4 9DF81E20 		ldrb	r2, [sp, #30]	@ zero_extendqisi2
 4010 0bd8 3946     		mov	r1, r7
 4011 0bda 3D48     		ldr	r0, .L248+28
 4012 0bdc FFF7FEFF 		bl	Printf
 4013              	.LVL437:
1347:VS4210/monitor.c **** 		{
 4014              		.loc 1 1347 22 discriminator 3 view .LVU923
1347:VS4210/monitor.c **** 		{
 4015              		.loc 1 1347 23 is_stmt 0 discriminator 3 view .LVU924
 4016 0be0 0134     		adds	r4, r4, #1
 4017              	.LVL438:
 4018              	.L179:
1347:VS4210/monitor.c **** 		{
 4019              		.loc 1 1347 15 is_stmt 1 discriminator 1 view .LVU925
1347:VS4210/monitor.c **** 		{
 4020              		.loc 1 1347 3 is_stmt 0 discriminator 1 view .LVU926
 4021 0be2 AC42     		cmp	r4, r5
 4022 0be4 EFD3     		bcc	.L180
 4023 0be6 FFF7EEBA 		b	.L126
 4024              	.LVL439:
 4025              	.L178:
1347:VS4210/monitor.c **** 		{
 4026              		.loc 1 1347 3 discriminator 1 view .LVU927
 4027              	.LBE4:
1353:VS4210/monitor.c **** 	{
 4028              		.loc 1 1353 7 is_stmt 1 view .LVU928
1353:VS4210/monitor.c **** 	{
 4029              		.loc 1 1353 12 is_stmt 0 view .LVU929
 4030 0bea 3A49     		ldr	r1, .L248+32
 4031 0bec 2046     		mov	r0, r4
 4032 0bee FFF7FEFF 		bl	stricmp
 4033              	.LVL440:
1353:VS4210/monitor.c **** 	{
 4034              		.loc 1 1353 10 view .LVU930
 4035 0bf2 68B9     		cbnz	r0, .L181
1355:VS4210/monitor.c **** 		SetCOCCom(21, 0);
 4036              		.loc 1 1355 3 is_stmt 1 view .LVU931
 4037 0bf4 344B     		ldr	r3, .L248+20
 4038 0bf6 5868     		ldr	r0, [r3, #4]
 4039 0bf8 FFF7FEFF 		bl	Asc2Bin
 4040              	.LVL441:
 4041 0bfc 0146     		mov	r1, r0
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 124


 4042 0bfe 1920     		movs	r0, #25
 4043 0c00 FFF7FEFF 		bl	SetCOCCom
 4044              	.LVL442:
1356:VS4210/monitor.c **** 	}
 4045              		.loc 1 1356 3 view .LVU932
 4046 0c04 0021     		movs	r1, #0
 4047 0c06 1520     		movs	r0, #21
 4048 0c08 FFF7FEFF 		bl	SetCOCCom
 4049              	.LVL443:
 4050 0c0c FFF7DBBA 		b	.L126
 4051              	.L181:
1359:VS4210/monitor.c **** 	{
 4052              		.loc 1 1359 7 view .LVU933
1359:VS4210/monitor.c **** 	{
 4053              		.loc 1 1359 12 is_stmt 0 view .LVU934
 4054 0c10 3149     		ldr	r1, .L248+36
 4055 0c12 2046     		mov	r0, r4
 4056 0c14 FFF7FEFF 		bl	stricmp
 4057              	.LVL444:
1359:VS4210/monitor.c **** 	{
 4058              		.loc 1 1359 10 view .LVU935
 4059 0c18 90B9     		cbnz	r0, .L240
 4060              	.LBB5:
1362:VS4210/monitor.c **** 		{
 4061              		.loc 1 1362 10 view .LVU936
 4062 0c1a 0024     		movs	r4, #0
 4063 0c1c 07E0     		b	.L182
 4064              	.LVL445:
 4065              	.L184:
1364:VS4210/monitor.c **** 		}
 4066              		.loc 1 1364 4 is_stmt 1 discriminator 3 view .LVU937
 4067 0c1e 2F4B     		ldr	r3, .L248+40
 4068 0c20 1A5D     		ldrb	r2, [r3, r4]	@ zero_extendqisi2
 4069 0c22 2146     		mov	r1, r4
 4070 0c24 2E48     		ldr	r0, .L248+44
 4071 0c26 FFF7FEFF 		bl	Printf
 4072              	.LVL446:
1362:VS4210/monitor.c **** 		{
 4073              		.loc 1 1362 22 discriminator 3 view .LVU938
1362:VS4210/monitor.c **** 		{
 4074              		.loc 1 1362 23 is_stmt 0 discriminator 3 view .LVU939
 4075 0c2a 0134     		adds	r4, r4, #1
 4076              	.LVL447:
1362:VS4210/monitor.c **** 		{
 4077              		.loc 1 1362 23 discriminator 3 view .LVU940
 4078 0c2c E4B2     		uxtb	r4, r4
 4079              	.LVL448:
 4080              	.L182:
1362:VS4210/monitor.c **** 		{
 4081              		.loc 1 1362 15 is_stmt 1 discriminator 1 view .LVU941
1362:VS4210/monitor.c **** 		{
 4082              		.loc 1 1362 3 is_stmt 0 discriminator 1 view .LVU942
 4083 0c2e 032C     		cmp	r4, #3
 4084 0c30 F5D9     		bls	.L184
1366:VS4210/monitor.c **** 	}
 4085              		.loc 1 1366 3 is_stmt 1 view .LVU943
 4086 0c32 2C4B     		ldr	r3, .L248+48
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 125


 4087 0c34 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4088 0c36 2C48     		ldr	r0, .L248+52
 4089 0c38 FFF7FEFF 		bl	Printf
 4090              	.LVL449:
 4091              	.LBE5:
 4092 0c3c FFF7C3BA 		b	.L126
 4093              	.LVL450:
 4094              	.L240:
1496:VS4210/monitor.c **** 	{
 4095              		.loc 1 1496 7 view .LVU944
1496:VS4210/monitor.c **** 	{
 4096              		.loc 1 1496 12 is_stmt 0 view .LVU945
 4097 0c40 2A49     		ldr	r1, .L248+56
 4098 0c42 2046     		mov	r0, r4
 4099 0c44 FFF7FEFF 		bl	stricmp
 4100              	.LVL451:
1496:VS4210/monitor.c **** 	{
 4101              		.loc 1 1496 10 view .LVU946
 4102 0c48 30B9     		cbnz	r0, .L185
1499:VS4210/monitor.c **** 		LCDPowerON(1);
 4103              		.loc 1 1499 3 is_stmt 1 view .LVU947
 4104 0c4a FFF7FEFF 		bl	SetNowMode
 4105              	.LVL452:
1500:VS4210/monitor.c **** 	}
 4106              		.loc 1 1500 3 view .LVU948
 4107 0c4e 0120     		movs	r0, #1
 4108 0c50 FFF7FEFF 		bl	LCDPowerON
 4109              	.LVL453:
 4110 0c54 FFF7B7BA 		b	.L126
 4111              	.L185:
1504:VS4210/monitor.c **** 	{
 4112              		.loc 1 1504 7 view .LVU949
1504:VS4210/monitor.c **** 	{
 4113              		.loc 1 1504 12 is_stmt 0 view .LVU950
 4114 0c58 2549     		ldr	r1, .L248+60
 4115 0c5a 2046     		mov	r0, r4
 4116 0c5c FFF7FEFF 		bl	stricmp
 4117              	.LVL454:
1504:VS4210/monitor.c **** 	{
 4118              		.loc 1 1504 10 view .LVU951
 4119 0c60 20B1     		cbz	r0, .L186
1504:VS4210/monitor.c **** 	{
 4120              		.loc 1 1504 54 discriminator 1 view .LVU952
 4121 0c62 2449     		ldr	r1, .L248+64
 4122 0c64 2046     		mov	r0, r4
 4123 0c66 FFF7FEFF 		bl	stricmp
 4124              	.LVL455:
1504:VS4210/monitor.c **** 	{
 4125              		.loc 1 1504 50 discriminator 1 view .LVU953
 4126 0c6a 18B9     		cbnz	r0, .L241
 4127              	.L186:
1506:VS4210/monitor.c **** 	}
 4128              		.loc 1 1506 3 is_stmt 1 view .LVU954
 4129 0c6c FFF7FEFF 		bl	MonHelp
 4130              	.LVL456:
 4131 0c70 FFF7A9BA 		b	.L126
 4132              	.L241:
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 126


1504:VS4210/monitor.c **** 	{
 4133              		.loc 1 1504 99 is_stmt 0 discriminator 2 view .LVU955
 4134 0c74 2049     		ldr	r1, .L248+68
 4135 0c76 2046     		mov	r0, r4
 4136 0c78 FFF7FEFF 		bl	stricmp
 4137              	.LVL457:
1504:VS4210/monitor.c **** 	{
 4138              		.loc 1 1504 95 discriminator 2 view .LVU956
 4139 0c7c 0028     		cmp	r0, #0
 4140 0c7e F5D0     		beq	.L186
1508:VS4210/monitor.c **** 	{
 4141              		.loc 1 1508 7 is_stmt 1 view .LVU957
1508:VS4210/monitor.c **** 	{
 4142              		.loc 1 1508 12 is_stmt 0 view .LVU958
 4143 0c80 1E49     		ldr	r1, .L248+72
 4144 0c82 2046     		mov	r0, r4
 4145 0c84 FFF7FEFF 		bl	stricmp
 4146              	.LVL458:
1508:VS4210/monitor.c **** 	{
 4147              		.loc 1 1508 10 view .LVU959
 4148 0c88 0028     		cmp	r0, #0
 4149 0c8a 3BD1     		bne	.L188
1511:VS4210/monitor.c **** 
 4150              		.loc 1 1511 3 is_stmt 1 view .LVU960
1511:VS4210/monitor.c **** 
 4151              		.loc 1 1511 21 is_stmt 0 view .LVU961
 4152 0c8c 0E4C     		ldr	r4, .L248+20
 4153 0c8e 6068     		ldr	r0, [r4, #4]
 4154 0c90 FFF7FEFF 		bl	Asc2Bin
 4155              	.LVL459:
1511:VS4210/monitor.c **** 
 4156              		.loc 1 1511 3 view .LVU962
 4157 0c94 C0EB0010 		rsb	r0, r0, r0, lsl #4
 4158 0c98 80B2     		uxth	r0, r0
 4159 0c9a FFF7FEFF 		bl	user_pwm_setvalue
 4160              	.LVL460:
1513:VS4210/monitor.c **** 	}
 4161              		.loc 1 1513 3 is_stmt 1 view .LVU963
1513:VS4210/monitor.c **** 	}
 4162              		.loc 1 1513 31 is_stmt 0 view .LVU964
 4163 0c9e 6068     		ldr	r0, [r4, #4]
 4164 0ca0 FFF7FEFF 		bl	Asc2Bin
 4165              	.LVL461:
1513:VS4210/monitor.c **** 	}
 4166              		.loc 1 1513 3 view .LVU965
 4167 0ca4 C0EB0011 		rsb	r1, r0, r0, lsl #4
 4168 0ca8 1548     		ldr	r0, .L248+76
 4169 0caa FFF7FEFF 		bl	Printf
 4170              	.LVL462:
 4171 0cae FFF78ABA 		b	.L126
 4172              	.L249:
 4173 0cb2 00BF     		.align	2
 4174              	.L248:
 4175 0cb4 00030000 		.word	.LC72
 4176 0cb8 08030000 		.word	.LC73
 4177 0cbc 20030000 		.word	.LC74
 4178 0cc0 34030000 		.word	.LC75
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 127


 4179 0cc4 38030000 		.word	.LC76
 4180 0cc8 00000000 		.word	argv
 4181 0ccc 3C030000 		.word	.LC77
 4182 0cd0 50030000 		.word	.LC78
 4183 0cd4 68030000 		.word	.LC79
 4184 0cd8 70030000 		.word	.LC80
 4185 0cdc 00000000 		.word	Flisheye_CAM
 4186 0ce0 74030000 		.word	.LC81
 4187 0ce4 00000000 		.word	QuadBoxId
 4188 0ce8 90030000 		.word	.LC82
 4189 0cec A4030000 		.word	.LC83
 4190 0cf0 A8030000 		.word	.LC84
 4191 0cf4 AC030000 		.word	.LC85
 4192 0cf8 B4030000 		.word	.LC86
 4193 0cfc B8030000 		.word	.LC87
 4194 0d00 BC030000 		.word	.LC88
 4195              	.L188:
1515:VS4210/monitor.c **** 	{
 4196              		.loc 1 1515 7 is_stmt 1 view .LVU966
1515:VS4210/monitor.c **** 	{
 4197              		.loc 1 1515 12 is_stmt 0 view .LVU967
 4198 0d04 8349     		ldr	r1, .L250
 4199 0d06 2046     		mov	r0, r4
 4200 0d08 FFF7FEFF 		bl	stricmp
 4201              	.LVL463:
1515:VS4210/monitor.c **** 	{
 4202              		.loc 1 1515 10 view .LVU968
 4203 0d0c 40B9     		cbnz	r0, .L189
1518:VS4210/monitor.c **** 	}
 4204              		.loc 1 1518 3 is_stmt 1 view .LVU969
1518:VS4210/monitor.c **** 	}
 4205              		.loc 1 1518 33 is_stmt 0 view .LVU970
 4206 0d0e 0220     		movs	r0, #2
 4207 0d10 FFF7FEFF 		bl	GET_ALC122
 4208              	.LVL464:
 4209 0d14 0146     		mov	r1, r0
1518:VS4210/monitor.c **** 	}
 4210              		.loc 1 1518 3 view .LVU971
 4211 0d16 8048     		ldr	r0, .L250+4
 4212 0d18 FFF7FEFF 		bl	Printf
 4213              	.LVL465:
 4214 0d1c FFF753BA 		b	.L126
 4215              	.L189:
1520:VS4210/monitor.c **** 	{
 4216              		.loc 1 1520 7 is_stmt 1 view .LVU972
1520:VS4210/monitor.c **** 	{
 4217              		.loc 1 1520 12 is_stmt 0 view .LVU973
 4218 0d20 7E49     		ldr	r1, .L250+8
 4219 0d22 2046     		mov	r0, r4
 4220 0d24 FFF7FEFF 		bl	stricmp
 4221              	.LVL466:
1520:VS4210/monitor.c **** 	{
 4222              		.loc 1 1520 10 view .LVU974
 4223 0d28 88B9     		cbnz	r0, .L190
 4224              	.LBB6:
1522:VS4210/monitor.c **** 		val = Asc2Bin(argv[1]);
 4225              		.loc 1 1522 3 is_stmt 1 view .LVU975
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 128


 4226              	.LVL467:
1523:VS4210/monitor.c **** 		val <<= 8;
 4227              		.loc 1 1523 3 view .LVU976
1523:VS4210/monitor.c **** 		val <<= 8;
 4228              		.loc 1 1523 9 is_stmt 0 view .LVU977
 4229 0d2a 7D4B     		ldr	r3, .L250+12
 4230 0d2c 5868     		ldr	r0, [r3, #4]
 4231 0d2e FFF7FEFF 		bl	Asc2Bin
 4232              	.LVL468:
1524:VS4210/monitor.c **** 		val |= Asc2Bin(argv[1]);
 4233              		.loc 1 1524 3 is_stmt 1 view .LVU978
1525:VS4210/monitor.c **** 
 4234              		.loc 1 1525 3 view .LVU979
1527:VS4210/monitor.c **** 
 4235              		.loc 1 1527 3 view .LVU980
 4236 0d32 40EA0021 		orr	r1, r0, r0, lsl #8
 4237              	.LVL469:
1527:VS4210/monitor.c **** 
 4238              		.loc 1 1527 3 is_stmt 0 view .LVU981
 4239 0d36 0220     		movs	r0, #2
 4240 0d38 FFF7FEFF 		bl	SET_ALC122
 4241              	.LVL470:
1529:VS4210/monitor.c **** 	}
 4242              		.loc 1 1529 3 is_stmt 1 view .LVU982
1529:VS4210/monitor.c **** 	}
 4243              		.loc 1 1529 33 is_stmt 0 view .LVU983
 4244 0d3c 0220     		movs	r0, #2
 4245 0d3e FFF7FEFF 		bl	GET_ALC122
 4246              	.LVL471:
 4247 0d42 0146     		mov	r1, r0
1529:VS4210/monitor.c **** 	}
 4248              		.loc 1 1529 3 view .LVU984
 4249 0d44 7448     		ldr	r0, .L250+4
 4250 0d46 FFF7FEFF 		bl	Printf
 4251              	.LVL472:
 4252              	.LBE6:
 4253 0d4a FFF73CBA 		b	.L126
 4254              	.L190:
1531:VS4210/monitor.c **** 	{
 4255              		.loc 1 1531 7 is_stmt 1 view .LVU985
1531:VS4210/monitor.c **** 	{
 4256              		.loc 1 1531 12 is_stmt 0 view .LVU986
 4257 0d4e 7549     		ldr	r1, .L250+16
 4258 0d50 2046     		mov	r0, r4
 4259 0d52 FFF7FEFF 		bl	stricmp
 4260              	.LVL473:
1531:VS4210/monitor.c **** 	{
 4261              		.loc 1 1531 10 view .LVU987
 4262 0d56 58B9     		cbnz	r0, .L191
1534:VS4210/monitor.c **** 
 4263              		.loc 1 1534 3 is_stmt 1 view .LVU988
1534:VS4210/monitor.c **** 
 4264              		.loc 1 1534 17 is_stmt 0 view .LVU989
 4265 0d58 714B     		ldr	r3, .L250+12
 4266 0d5a 5868     		ldr	r0, [r3, #4]
 4267 0d5c FFF7FEFF 		bl	Asc2Bin
 4268              	.LVL474:
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 129


 4269 0d60 0146     		mov	r1, r0
1534:VS4210/monitor.c **** 
 4270              		.loc 1 1534 15 view .LVU990
 4271 0d62 714B     		ldr	r3, .L250+20
 4272 0d64 1870     		strb	r0, [r3]
1536:VS4210/monitor.c **** 	}
 4273              		.loc 1 1536 3 is_stmt 1 view .LVU991
 4274 0d66 7148     		ldr	r0, .L250+24
 4275 0d68 FFF7FEFF 		bl	Printf
 4276              	.LVL475:
 4277 0d6c FFF72BBA 		b	.L126
 4278              	.L191:
1538:VS4210/monitor.c **** 	{
 4279              		.loc 1 1538 7 view .LVU992
1538:VS4210/monitor.c **** 	{
 4280              		.loc 1 1538 12 is_stmt 0 view .LVU993
 4281 0d70 6F49     		ldr	r1, .L250+28
 4282 0d72 2046     		mov	r0, r4
 4283 0d74 FFF7FEFF 		bl	stricmp
 4284              	.LVL476:
1538:VS4210/monitor.c **** 	{
 4285              		.loc 1 1538 10 view .LVU994
 4286 0d78 98B9     		cbnz	r0, .L192
1541:VS4210/monitor.c **** 			bytTriggerTest = 1;
 4287              		.loc 1 1541 3 is_stmt 1 view .LVU995
1541:VS4210/monitor.c **** 			bytTriggerTest = 1;
 4288              		.loc 1 1541 7 is_stmt 0 view .LVU996
 4289 0d7a 694B     		ldr	r3, .L250+12
 4290 0d7c 5868     		ldr	r0, [r3, #4]
 4291 0d7e FFF7FEFF 		bl	Asc2Bin
 4292              	.LVL477:
1541:VS4210/monitor.c **** 			bytTriggerTest = 1;
 4293              		.loc 1 1541 6 view .LVU997
 4294 0d82 0128     		cmp	r0, #1
 4295 0d84 09D1     		bne	.L193
1542:VS4210/monitor.c **** 		else
 4296              		.loc 1 1542 4 is_stmt 1 view .LVU998
1542:VS4210/monitor.c **** 		else
 4297              		.loc 1 1542 19 is_stmt 0 view .LVU999
 4298 0d86 6B4B     		ldr	r3, .L250+32
 4299 0d88 0122     		movs	r2, #1
 4300 0d8a 1A70     		strb	r2, [r3]
 4301              	.L194:
1546:VS4210/monitor.c **** 	}
 4302              		.loc 1 1546 3 is_stmt 1 view .LVU1000
 4303 0d8c 694B     		ldr	r3, .L250+32
 4304 0d8e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4305 0d90 6948     		ldr	r0, .L250+36
 4306 0d92 FFF7FEFF 		bl	Printf
 4307              	.LVL478:
 4308 0d96 FFF716BA 		b	.L126
 4309              	.L193:
1544:VS4210/monitor.c **** 
 4310              		.loc 1 1544 4 view .LVU1001
1544:VS4210/monitor.c **** 
 4311              		.loc 1 1544 19 is_stmt 0 view .LVU1002
 4312 0d9a 664B     		ldr	r3, .L250+32
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 130


 4313 0d9c 0022     		movs	r2, #0
 4314 0d9e 1A70     		strb	r2, [r3]
 4315 0da0 F4E7     		b	.L194
 4316              	.L192:
1548:VS4210/monitor.c **** 	{
 4317              		.loc 1 1548 7 is_stmt 1 view .LVU1003
1548:VS4210/monitor.c **** 	{
 4318              		.loc 1 1548 12 is_stmt 0 view .LVU1004
 4319 0da2 6649     		ldr	r1, .L250+40
 4320 0da4 2046     		mov	r0, r4
 4321 0da6 FFF7FEFF 		bl	stricmp
 4322              	.LVL479:
1548:VS4210/monitor.c **** 	{
 4323              		.loc 1 1548 10 view .LVU1005
 4324 0daa 98B9     		cbnz	r0, .L195
 4325              	.LBB7:
1550:VS4210/monitor.c **** 		ch = Asc2Bin(argv[1]);
 4326              		.loc 1 1550 3 is_stmt 1 view .LVU1006
1551:VS4210/monitor.c **** 		win = Asc2Bin((BYTE *)argv[2]);
 4327              		.loc 1 1551 3 view .LVU1007
1551:VS4210/monitor.c **** 		win = Asc2Bin((BYTE *)argv[2]);
 4328              		.loc 1 1551 8 is_stmt 0 view .LVU1008
 4329 0dac 5C4D     		ldr	r5, .L250+12
 4330 0dae 6868     		ldr	r0, [r5, #4]
 4331 0db0 FFF7FEFF 		bl	Asc2Bin
 4332              	.LVL480:
 4333 0db4 0446     		mov	r4, r0
 4334              	.LVL481:
1552:VS4210/monitor.c **** 		VS4210_SwitchChannel(ch, win);
 4335              		.loc 1 1552 3 is_stmt 1 view .LVU1009
1552:VS4210/monitor.c **** 		VS4210_SwitchChannel(ch, win);
 4336              		.loc 1 1552 9 is_stmt 0 view .LVU1010
 4337 0db6 A868     		ldr	r0, [r5, #8]
 4338 0db8 FFF7FEFF 		bl	Asc2Bin
 4339              	.LVL482:
 4340 0dbc 0546     		mov	r5, r0
 4341              	.LVL483:
1553:VS4210/monitor.c **** 
 4342              		.loc 1 1553 3 is_stmt 1 view .LVU1011
 4343 0dbe 0146     		mov	r1, r0
 4344 0dc0 2046     		mov	r0, r4
 4345              	.LVL484:
1553:VS4210/monitor.c **** 
 4346              		.loc 1 1553 3 is_stmt 0 view .LVU1012
 4347 0dc2 FFF7FEFF 		bl	VS4210_SwitchChannel
 4348              	.LVL485:
1555:VS4210/monitor.c **** 	}
 4349              		.loc 1 1555 3 is_stmt 1 view .LVU1013
 4350 0dc6 2A46     		mov	r2, r5
 4351 0dc8 2146     		mov	r1, r4
 4352 0dca 5D48     		ldr	r0, .L250+44
 4353 0dcc FFF7FEFF 		bl	Printf
 4354              	.LVL486:
 4355              	.LBE7:
 4356 0dd0 FFF7F9B9 		b	.L126
 4357              	.LVL487:
 4358              	.L195:
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 131


1557:VS4210/monitor.c **** 	{
 4359              		.loc 1 1557 7 view .LVU1014
1557:VS4210/monitor.c **** 	{
 4360              		.loc 1 1557 12 is_stmt 0 view .LVU1015
 4361 0dd4 5B49     		ldr	r1, .L250+48
 4362 0dd6 2046     		mov	r0, r4
 4363 0dd8 FFF7FEFF 		bl	stricmp
 4364              	.LVL488:
1557:VS4210/monitor.c **** 	{
 4365              		.loc 1 1557 10 view .LVU1016
 4366 0ddc B8BB     		cbnz	r0, .L196
 4367              	.LBB8:
1559:VS4210/monitor.c **** 		ch = Asc2Bin(argv[1]);
 4368              		.loc 1 1559 3 is_stmt 1 view .LVU1017
1560:VS4210/monitor.c **** 
 4369              		.loc 1 1560 3 view .LVU1018
1560:VS4210/monitor.c **** 
 4370              		.loc 1 1560 8 is_stmt 0 view .LVU1019
 4371 0dde 504B     		ldr	r3, .L250+12
 4372 0de0 5868     		ldr	r0, [r3, #4]
 4373 0de2 FFF7FEFF 		bl	Asc2Bin
 4374              	.LVL489:
1562:VS4210/monitor.c **** 		{
 4375              		.loc 1 1562 3 is_stmt 1 view .LVU1020
1562:VS4210/monitor.c **** 		{
 4376              		.loc 1 1562 6 is_stmt 0 view .LVU1021
 4377 0de6 0328     		cmp	r0, #3
 4378 0de8 0FD1     		bne	.L197
1564:VS4210/monitor.c **** 			CAM_D_SW(OFF);
 4379              		.loc 1 1564 4 is_stmt 1 view .LVU1022
 4380 0dea 574C     		ldr	r4, .L250+52
 4381 0dec 0122     		movs	r2, #1
 4382 0dee 1146     		mov	r1, r2
 4383 0df0 2046     		mov	r0, r4
 4384              	.LVL490:
1564:VS4210/monitor.c **** 			CAM_D_SW(OFF);
 4385              		.loc 1 1564 4 is_stmt 0 view .LVU1023
 4386 0df2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 4387              	.LVL491:
1565:VS4210/monitor.c **** 			Printf("\r\n(Select CAM R)");
 4388              		.loc 1 1565 4 is_stmt 1 view .LVU1024
 4389 0df6 0022     		movs	r2, #0
 4390 0df8 0221     		movs	r1, #2
 4391 0dfa 2046     		mov	r0, r4
 4392 0dfc FFF7FEFF 		bl	HAL_GPIO_WritePin
 4393              	.LVL492:
1566:VS4210/monitor.c **** 		}
 4394              		.loc 1 1566 4 view .LVU1025
 4395 0e00 5248     		ldr	r0, .L250+56
 4396 0e02 FFF7FEFF 		bl	Printf
 4397              	.LVL493:
 4398 0e06 FFF7DEB9 		b	.L126
 4399              	.LVL494:
 4400              	.L197:
1568:VS4210/monitor.c **** 		{
 4401              		.loc 1 1568 8 view .LVU1026
1568:VS4210/monitor.c **** 		{
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 132


 4402              		.loc 1 1568 11 is_stmt 0 view .LVU1027
 4403 0e0a 0428     		cmp	r0, #4
 4404 0e0c 0FD1     		bne	.L198
1570:VS4210/monitor.c **** 			CAM_D_SW(ON);
 4405              		.loc 1 1570 4 is_stmt 1 view .LVU1028
 4406 0e0e 4E4C     		ldr	r4, .L250+52
 4407 0e10 0022     		movs	r2, #0
 4408 0e12 0121     		movs	r1, #1
 4409 0e14 2046     		mov	r0, r4
 4410              	.LVL495:
1570:VS4210/monitor.c **** 			CAM_D_SW(ON);
 4411              		.loc 1 1570 4 is_stmt 0 view .LVU1029
 4412 0e16 FFF7FEFF 		bl	HAL_GPIO_WritePin
 4413              	.LVL496:
1571:VS4210/monitor.c **** 			Printf("\r\n(Select CAM D)");
 4414              		.loc 1 1571 4 is_stmt 1 view .LVU1030
 4415 0e1a 0122     		movs	r2, #1
 4416 0e1c 0221     		movs	r1, #2
 4417 0e1e 2046     		mov	r0, r4
 4418 0e20 FFF7FEFF 		bl	HAL_GPIO_WritePin
 4419              	.LVL497:
1572:VS4210/monitor.c **** 		}
 4420              		.loc 1 1572 4 view .LVU1031
 4421 0e24 4A48     		ldr	r0, .L250+60
 4422 0e26 FFF7FEFF 		bl	Printf
 4423              	.LVL498:
 4424 0e2a FFF7CCB9 		b	.L126
 4425              	.LVL499:
 4426              	.L198:
1576:VS4210/monitor.c **** 			CAM_D_SW(OFF);
 4427              		.loc 1 1576 4 view .LVU1032
 4428 0e2e 464C     		ldr	r4, .L250+52
 4429 0e30 0122     		movs	r2, #1
 4430 0e32 1146     		mov	r1, r2
 4431 0e34 2046     		mov	r0, r4
 4432              	.LVL500:
1576:VS4210/monitor.c **** 			CAM_D_SW(OFF);
 4433              		.loc 1 1576 4 is_stmt 0 view .LVU1033
 4434 0e36 FFF7FEFF 		bl	HAL_GPIO_WritePin
 4435              	.LVL501:
1577:VS4210/monitor.c **** 			Printf("\r\n(CAM D and CAM R for OFF)");
 4436              		.loc 1 1577 4 is_stmt 1 view .LVU1034
 4437 0e3a 0022     		movs	r2, #0
 4438 0e3c 0221     		movs	r1, #2
 4439 0e3e 2046     		mov	r0, r4
 4440 0e40 FFF7FEFF 		bl	HAL_GPIO_WritePin
 4441              	.LVL502:
1578:VS4210/monitor.c **** 		}
 4442              		.loc 1 1578 4 view .LVU1035
 4443 0e44 4348     		ldr	r0, .L250+64
 4444 0e46 FFF7FEFF 		bl	Printf
 4445              	.LVL503:
 4446 0e4a FFF7BCB9 		b	.L126
 4447              	.L196:
1578:VS4210/monitor.c **** 		}
 4448              		.loc 1 1578 4 is_stmt 0 view .LVU1036
 4449              	.LBE8:
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 133


1581:VS4210/monitor.c **** 	{
 4450              		.loc 1 1581 7 is_stmt 1 view .LVU1037
1581:VS4210/monitor.c **** 	{
 4451              		.loc 1 1581 12 is_stmt 0 view .LVU1038
 4452 0e4e 4249     		ldr	r1, .L250+68
 4453 0e50 2046     		mov	r0, r4
 4454 0e52 FFF7FEFF 		bl	stricmp
 4455              	.LVL504:
1581:VS4210/monitor.c **** 	{
 4456              		.loc 1 1581 10 view .LVU1039
 4457 0e56 0028     		cmp	r0, #0
 4458 0e58 33D0     		beq	.L206
1596:VS4210/monitor.c **** 	{
 4459              		.loc 1 1596 7 is_stmt 1 view .LVU1040
1596:VS4210/monitor.c **** 	{
 4460              		.loc 1 1596 12 is_stmt 0 view .LVU1041
 4461 0e5a 4049     		ldr	r1, .L250+72
 4462 0e5c 2046     		mov	r0, r4
 4463 0e5e FFF7FEFF 		bl	stricmp
 4464              	.LVL505:
1596:VS4210/monitor.c **** 	{
 4465              		.loc 1 1596 10 view .LVU1042
 4466 0e62 0028     		cmp	r0, #0
 4467 0e64 2FD1     		bne	.L202
1599:VS4210/monitor.c **** 		//	}
 4468              		.loc 1 1599 3 is_stmt 1 view .LVU1043
1599:VS4210/monitor.c **** 		//	}
 4469              		.loc 1 1599 18 is_stmt 0 view .LVU1044
 4470 0e66 2E4B     		ldr	r3, .L250+12
 4471 0e68 5868     		ldr	r0, [r3, #4]
 4472 0e6a FFF7FEFF 		bl	Asc2Bin
 4473              	.LVL506:
 4474 0e6e 0146     		mov	r1, r0
1599:VS4210/monitor.c **** 		//	}
 4475              		.loc 1 1599 16 view .LVU1045
 4476 0e70 3B4B     		ldr	r3, .L250+76
 4477 0e72 1860     		str	r0, [r3]
1601:VS4210/monitor.c **** 	}
 4478              		.loc 1 1601 3 is_stmt 1 view .LVU1046
 4479 0e74 3B48     		ldr	r0, .L250+80
 4480 0e76 FFF7FEFF 		bl	Printf
 4481              	.LVL507:
 4482 0e7a FFF7A4B9 		b	.L126
 4483              	.LVL508:
 4484              	.L201:
 4485              	.LBB9:
1592:VS4210/monitor.c **** 			Printf("(egain[%02x]  [0]=%02x [1]=%02x [2]=%02x [3]=%02x)", (WORD)i, (WORD)egain[i][0], (WORD)e
 4486              		.loc 1 1592 4 discriminator 3 view .LVU1047
1592:VS4210/monitor.c **** 			Printf("(egain[%02x]  [0]=%02x [1]=%02x [2]=%02x [3]=%02x)", (WORD)i, (WORD)egain[i][0], (WORD)e
 4487              		.loc 1 1592 119 is_stmt 0 discriminator 3 view .LVU1048
 4488 0e7e 3A4B     		ldr	r3, .L250+84
 4489 0e80 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
1592:VS4210/monitor.c **** 			Printf("(egain[%02x]  [0]=%02x [1]=%02x [2]=%02x [3]=%02x)", (WORD)i, (WORD)egain[i][0], (WORD)e
 4490              		.loc 1 1592 134 discriminator 3 view .LVU1049
 4491 0e82 3A4A     		ldr	r2, .L250+88
 4492 0e84 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
1592:VS4210/monitor.c **** 			Printf("(egain[%02x]  [0]=%02x [1]=%02x [2]=%02x [3]=%02x)", (WORD)i, (WORD)egain[i][0], (WORD)e
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 134


 4493              		.loc 1 1592 4 discriminator 3 view .LVU1050
 4494 0e86 0192     		str	r2, [sp, #4]
 4495 0e88 0093     		str	r3, [sp]
 4496 0e8a 394B     		ldr	r3, .L250+92
 4497 0e8c 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 4498 0e8e 394A     		ldr	r2, .L250+96
 4499 0e90 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 4500 0e92 2146     		mov	r1, r4
 4501 0e94 3848     		ldr	r0, .L250+100
 4502 0e96 FFF7FEFF 		bl	Printf
 4503              	.LVL509:
1593:VS4210/monitor.c **** 		}
 4504              		.loc 1 1593 4 is_stmt 1 discriminator 3 view .LVU1051
1593:VS4210/monitor.c **** 		}
 4505              		.loc 1 1593 88 is_stmt 0 discriminator 3 view .LVU1052
 4506 0e9a 384A     		ldr	r2, .L250+104
1593:VS4210/monitor.c **** 		}
 4507              		.loc 1 1593 107 discriminator 3 view .LVU1053
 4508 0e9c 02EB8403 		add	r3, r2, r4, lsl #2
1593:VS4210/monitor.c **** 		}
 4509              		.loc 1 1593 126 discriminator 3 view .LVU1054
 4510 0ea0 9978     		ldrb	r1, [r3, #2]	@ zero_extendqisi2
1593:VS4210/monitor.c **** 		}
 4511              		.loc 1 1593 145 discriminator 3 view .LVU1055
 4512 0ea2 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
1593:VS4210/monitor.c **** 		}
 4513              		.loc 1 1593 4 discriminator 3 view .LVU1056
 4514 0ea4 0190     		str	r0, [sp, #4]
 4515 0ea6 0091     		str	r1, [sp]
 4516 0ea8 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 4517 0eaa 12F82420 		ldrb	r2, [r2, r4, lsl #2]	@ zero_extendqisi2
 4518 0eae 2146     		mov	r1, r4
 4519 0eb0 3348     		ldr	r0, .L250+108
 4520 0eb2 FFF7FEFF 		bl	Printf
 4521              	.LVL510:
1584:VS4210/monitor.c **** 		{ /*
 4522              		.loc 1 1584 22 is_stmt 1 discriminator 3 view .LVU1057
1584:VS4210/monitor.c **** 		{ /*
 4523              		.loc 1 1584 23 is_stmt 0 discriminator 3 view .LVU1058
 4524 0eb6 0134     		adds	r4, r4, #1
 4525              	.LVL511:
1584:VS4210/monitor.c **** 		{ /*
 4526              		.loc 1 1584 23 discriminator 3 view .LVU1059
 4527 0eb8 E4B2     		uxtb	r4, r4
 4528              	.LVL512:
 4529              	.L199:
1584:VS4210/monitor.c **** 		{ /*
 4530              		.loc 1 1584 15 is_stmt 1 discriminator 1 view .LVU1060
1584:VS4210/monitor.c **** 		{ /*
 4531              		.loc 1 1584 3 is_stmt 0 discriminator 1 view .LVU1061
 4532 0eba 032C     		cmp	r4, #3
 4533 0ebc DFD9     		bls	.L201
 4534 0ebe FFF782B9 		b	.L126
 4535              	.LVL513:
 4536              	.L206:
1584:VS4210/monitor.c **** 		{ /*
 4537              		.loc 1 1584 10 view .LVU1062
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 135


 4538 0ec2 0024     		movs	r4, #0
 4539 0ec4 F9E7     		b	.L199
 4540              	.L202:
 4541              	.LBE9:
1603:VS4210/monitor.c **** 	{
 4542              		.loc 1 1603 7 is_stmt 1 view .LVU1063
1603:VS4210/monitor.c **** 	{
 4543              		.loc 1 1603 12 is_stmt 0 view .LVU1064
 4544 0ec6 2F49     		ldr	r1, .L250+112
 4545 0ec8 2046     		mov	r0, r4
 4546 0eca FFF7FEFF 		bl	stricmp
 4547              	.LVL514:
1603:VS4210/monitor.c **** 	{
 4548              		.loc 1 1603 10 view .LVU1065
 4549 0ece 68B9     		cbnz	r0, .L203
1606:VS4210/monitor.c **** 		Printf("\r\n(bytVideoInput=%d)(PtzTxChNum=%d)", (WORD)bytVideoInput, (WORD)PtzTxChNum);
 4550              		.loc 1 1606 3 is_stmt 1 view .LVU1066
1606:VS4210/monitor.c **** 		Printf("\r\n(bytVideoInput=%d)(PtzTxChNum=%d)", (WORD)bytVideoInput, (WORD)PtzTxChNum);
 4551              		.loc 1 1606 16 is_stmt 0 view .LVU1067
 4552 0ed0 134B     		ldr	r3, .L250+12
 4553 0ed2 5868     		ldr	r0, [r3, #4]
 4554 0ed4 FFF7FEFF 		bl	Asc2Bin
 4555              	.LVL515:
 4556 0ed8 0246     		mov	r2, r0
1606:VS4210/monitor.c **** 		Printf("\r\n(bytVideoInput=%d)(PtzTxChNum=%d)", (WORD)bytVideoInput, (WORD)PtzTxChNum);
 4557              		.loc 1 1606 14 view .LVU1068
 4558 0eda 2B4B     		ldr	r3, .L250+116
 4559 0edc 1870     		strb	r0, [r3]
1607:VS4210/monitor.c **** 	}
 4560              		.loc 1 1607 3 is_stmt 1 view .LVU1069
 4561 0ede 2B4B     		ldr	r3, .L250+120
 4562 0ee0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4563 0ee2 2B48     		ldr	r0, .L250+124
 4564 0ee4 FFF7FEFF 		bl	Printf
 4565              	.LVL516:
 4566 0ee8 FFF76DB9 		b	.L126
 4567              	.L203:
1609:VS4210/monitor.c **** 	{
 4568              		.loc 1 1609 7 view .LVU1070
1609:VS4210/monitor.c **** 	{
 4569              		.loc 1 1609 12 is_stmt 0 view .LVU1071
 4570 0eec 2949     		ldr	r1, .L250+128
 4571 0eee 2046     		mov	r0, r4
 4572 0ef0 FFF7FEFF 		bl	stricmp
 4573              	.LVL517:
1609:VS4210/monitor.c **** 	{
 4574              		.loc 1 1609 10 view .LVU1072
 4575 0ef4 40B9     		cbnz	r0, .L204
1612:VS4210/monitor.c **** 	}
 4576              		.loc 1 1612 3 is_stmt 1 view .LVU1073
 4577 0ef6 244B     		ldr	r3, .L250+116
 4578 0ef8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4579 0efa 244B     		ldr	r3, .L250+120
 4580 0efc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4581 0efe 2448     		ldr	r0, .L250+124
 4582 0f00 FFF7FEFF 		bl	Printf
 4583              	.LVL518:
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 136


 4584 0f04 FFF75FB9 		b	.L126
 4585              	.L204:
1974:VS4210/monitor.c **** 	}
 4586              		.loc 1 1974 3 view .LVU1074
 4587 0f08 2348     		ldr	r0, .L250+132
 4588 0f0a FFF7FEFF 		bl	Printf
 4589              	.LVL519:
 4590 0f0e FFF75AB9 		b	.L126
 4591              	.L251:
 4592 0f12 00BF     		.align	2
 4593              	.L250:
 4594 0f14 C8030000 		.word	.LC89
 4595 0f18 D0030000 		.word	.LC90
 4596 0f1c DC030000 		.word	.LC91
 4597 0f20 00000000 		.word	argv
 4598 0f24 E4030000 		.word	.LC92
 4599 0f28 00000000 		.word	TriggerFlag
 4600 0f2c E8030000 		.word	.LC93
 4601 0f30 FC030000 		.word	.LC94
 4602 0f34 00000000 		.word	bytTriggerTest
 4603 0f38 04040000 		.word	.LC95
 4604 0f3c 1C040000 		.word	.LC96
 4605 0f40 20040000 		.word	.LC97
 4606 0f44 4C040000 		.word	.LC98
 4607 0f48 00100140 		.word	1073811456
 4608 0f4c 50040000 		.word	.LC99
 4609 0f50 64040000 		.word	.LC100
 4610 0f54 78040000 		.word	.LC101
 4611 0f58 94040000 		.word	.LC102
 4612 0f5c 08050000 		.word	.LC105
 4613 0f60 00000000 		.word	.LANCHOR8
 4614 0f64 10050000 		.word	.LC106
 4615 0f68 00000000 		.word	std
 4616 0f6c 00000000 		.word	mode
 4617 0f70 00000000 		.word	state
 4618 0f74 00000000 		.word	count
 4619 0f78 9C040000 		.word	.LC103
 4620 0f7c 00000000 		.word	egain
 4621 0f80 D4040000 		.word	.LC104
 4622 0f84 28050000 		.word	.LC107
 4623 0f88 00000000 		.word	PtzTxChNum
 4624 0f8c 00000000 		.word	bytVideoInput
 4625 0f90 2C050000 		.word	.LC108
 4626 0f94 50050000 		.word	.LC109
 4627 0f98 5C050000 		.word	.LC110
 4628              		.cfi_endproc
 4629              	.LFE89:
 4631              		.comm	bytVideoInput,1,1
 4632              		.global	AccessEnable
 4633              		.global	RS2_Xbusy
 4634              		.global	RS_Xbusy
 4635              		.global	RS2_out
 4636              		.global	RS2_in
 4637              		.global	RS_out
 4638              		.global	RS_in
 4639              		.comm	DVR_buf,30,4
 4640              		.comm	RS2_buf,30,4
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 137


 4641              		.comm	RS_buf,30,4
 4642              		.global	Monitor_I2C
 4643              		.global	Monitor_flag
 4644              		.global	echo
 4645              		.global	argc
 4646              		.comm	argv,28,4
 4647              		.comm	monstr,30,4
 4648              		.comm	MonWdata,1,1
 4649              		.comm	MonRdata,1,1
 4650              		.comm	MonIndex,1,1
 4651              		.global	MonAddress
 4652              		.section	.bss.Monitor_flag,"aw",%nobits
 4653              		.set	.LANCHOR3,. + 0
 4656              	Monitor_flag:
 4657 0000 00       		.space	1
 4658              		.section	.bss.RS2_Xbusy,"aw",%nobits
 4659              		.align	2
 4662              	RS2_Xbusy:
 4663 0000 00000000 		.space	4
 4664              		.section	.bss.RS2_in,"aw",%nobits
 4667              	RS2_in:
 4668 0000 00       		.space	1
 4669              		.section	.bss.RS2_out,"aw",%nobits
 4672              	RS2_out:
 4673 0000 00       		.space	1
 4674              		.section	.bss.RS_Xbusy,"aw",%nobits
 4675              		.align	2
 4678              	RS_Xbusy:
 4679 0000 00000000 		.space	4
 4680              		.section	.bss.RS_in,"aw",%nobits
 4681              		.set	.LANCHOR0,. + 0
 4684              	RS_in:
 4685 0000 00       		.space	1
 4686              		.section	.bss.RS_out,"aw",%nobits
 4687              		.set	.LANCHOR1,. + 0
 4690              	RS_out:
 4691 0000 00       		.space	1
 4692              		.section	.bss.argc,"aw",%nobits
 4693              		.set	.LANCHOR5,. + 0
 4696              	argc:
 4697 0000 00       		.space	1
 4698              		.section	.bss.comment.8679,"aw",%nobits
 4699              		.set	.LANCHOR4,. + 0
 4702              	comment.8679:
 4703 0000 00       		.space	1
 4704              		.section	.bss.incnt.8680,"aw",%nobits
 4705              		.set	.LANCHOR6,. + 0
 4708              	incnt.8680:
 4709 0000 00       		.space	1
 4710              		.section	.bss.last_argc.8681,"aw",%nobits
 4711              		.set	.LANCHOR7,. + 0
 4714              	last_argc.8681:
 4715 0000 00       		.space	1
 4716              		.section	.data.AccessEnable,"aw"
 4717              		.align	2
 4718              		.set	.LANCHOR8,. + 0
 4721              	AccessEnable:
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 138


 4722 0000 01000000 		.word	1
 4723              		.section	.data.MonAddress,"aw"
 4726              	MonAddress:
 4727 0000 8A       		.byte	-118
 4728              		.section	.data.Monitor_I2C,"aw"
 4729              		.set	.LANCHOR2,. + 0
 4732              	Monitor_I2C:
 4733 0000 40       		.byte	64
 4734              		.section	.data.echo,"aw"
 4735              		.align	2
 4738              	echo:
 4739 0000 01000000 		.word	1
 4740              		.text
 4741              	.Letext0:
 4742              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 4743              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 4744              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 4745              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\lib\\gcc\\arm-none-eabi
 4746              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 4747              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 4748              		.file 8 "VS4210/VXIS_Extern_Define.h"
 4749              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 4750              		.file 10 "sw_i2c/VX_swi2c.h"
 4751              		.file 11 "VS4210/VS4210.h"
 4752              		.file 12 "Drivers/CMSIS/Include/core_cm3.h"
 4753              		.file 13 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 4754              		.file 14 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 4755              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 4756              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 4757              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 4758              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 4759              		.file 19 "VS4210/printf.h"
 4760              		.file 20 "VS4210/etc_eep.h"
 4761              		.file 21 "VS4210/monitor.h"
 4762              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 4763              		.file 23 "Inc/main.h"
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 139


DEFINED SYMBOLS
                            *ABS*:00000000 monitor.c
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:16     .text.RS_ready:00000000 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:24     .text.RS_ready:00000000 RS_ready
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:52     .text.RS_ready:00000014 $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:58     .text.RS_rx:00000000 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:65     .text.RS_rx:00000000 RS_rx
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:102    .text.RS_rx:0000001c $d
                            *COM*:0000001e RS_buf
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:108    .text.RS_tx:00000000 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:115    .text.RS_tx:00000000 RS_tx
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:142    .text.RS_tx:00000010 $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:147    .rodata.Prompt.str1.4:00000000 $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:160    .text.Prompt:00000000 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:167    .text.Prompt:00000000 Prompt
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:259    .text.Prompt:0000006c $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:272    .text.Mon_tx:00000000 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:279    .text.Mon_tx:00000000 Mon_tx
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:301    .text.a2i:00000000 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:308    .text.a2i:00000000 a2i
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:357    .text.Asc1Bin:00000000 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:364    .text.Asc1Bin:00000000 Asc1Bin
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:418    .text.Asc2Bin:00000000 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:425    .text.Asc2Bin:00000000 Asc2Bin
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:484    .text.hs_toupper:00000000 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:491    .text.hs_toupper:00000000 hs_toupper
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:523    .text.stricmp:00000000 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:530    .text.stricmp:00000000 stricmp
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:586    .text.MonReadI2C:00000000 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:593    .text.MonReadI2C:00000000 MonReadI2C
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:606    .text.MonWriteI2C:00000000 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:613    .text.MonWriteI2C:00000000 MonWriteI2C
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:626    .rodata.MonIncDecI2C.str1.4:00000000 $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:639    .text.MonIncDecI2C:00000000 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:646    .text.MonIncDecI2C:00000000 MonIncDecI2C
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:665    .text.MonIncDecI2C:0000000a $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:677    .text.MonIncDecI2C:00000016 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:843    .text.MonIncDecI2C:000000d0 $d
                            *COM*:00000001 MonWdata
                            *COM*:00000001 MonIndex
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:854    .text.MonDumpI2C:00000000 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:861    .text.MonDumpI2C:00000000 MonDumpI2C
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:874    .text.MonNewReadI2C:00000000 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:881    .text.MonNewReadI2C:00000000 MonNewReadI2C
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:894    .text.MonNewWriteI2C:00000000 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:901    .text.MonNewWriteI2C:00000000 MonNewWriteI2C
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:914    .text.MonNewDumpI2C:00000000 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:921    .text.MonNewDumpI2C:00000000 MonNewDumpI2C
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:934    .text.MonWriteBit:00000000 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:941    .text.MonWriteBit:00000000 MonWriteBit
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:954    .text.MonTxDump:00000000 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:961    .text.MonTxDump:00000000 MonTxDump
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:974    .rodata.MonHelp.str1.4:00000000 $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:1042   .text.MonHelp:00000000 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:1049   .text.MonHelp:00000000 MonHelp
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:1153   .text.MonHelp:00000088 $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:1175   .text.MonGetCommand:00000000 $t
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 140


C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:1182   .text.MonGetCommand:00000000 MonGetCommand
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:1271   .text.MonGetCommand:00000056 $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:1326   .text.MonGetCommand:000000c4 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:1732   .text.MonGetCommand:0000025c $d
                            *COM*:0000001e monstr
                            *COM*:0000001c argv
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:1743   .rodata.Monitor.str1.4:00000000 $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:2000   .text.Monitor:00000000 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:2007   .text.Monitor:00000000 Monitor
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:2569   .text.Monitor:00000300 $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:2593   .text.Monitor:00000350 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:3115   .text.Monitor:00000668 $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:3141   .text.Monitor:000006c0 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:3540   .text.Monitor:000008d0 $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:3571   .text.Monitor:00000934 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4175   .text.Monitor:00000cb4 $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4198   .text.Monitor:00000d04 $t
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4594   .text.Monitor:00000f14 $d
                            *COM*:00000001 bytVideoInput
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4721   .data.AccessEnable:00000000 AccessEnable
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4662   .bss.RS2_Xbusy:00000000 RS2_Xbusy
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4678   .bss.RS_Xbusy:00000000 RS_Xbusy
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4672   .bss.RS2_out:00000000 RS2_out
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4667   .bss.RS2_in:00000000 RS2_in
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4690   .bss.RS_out:00000000 RS_out
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4684   .bss.RS_in:00000000 RS_in
                            *COM*:0000001e DVR_buf
                            *COM*:0000001e RS2_buf
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4732   .data.Monitor_I2C:00000000 Monitor_I2C
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4656   .bss.Monitor_flag:00000000 Monitor_flag
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4738   .data.echo:00000000 echo
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4696   .bss.argc:00000000 argc
                            *COM*:00000001 MonRdata
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4726   .data.MonAddress:00000000 MonAddress
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4657   .bss.Monitor_flag:00000000 $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4659   .bss.RS2_Xbusy:00000000 $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4668   .bss.RS2_in:00000000 $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4673   .bss.RS2_out:00000000 $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4675   .bss.RS_Xbusy:00000000 $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4685   .bss.RS_in:00000000 $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4691   .bss.RS_out:00000000 $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4697   .bss.argc:00000000 $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4702   .bss.comment.8679:00000000 comment.8679
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4703   .bss.comment.8679:00000000 $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4708   .bss.incnt.8680:00000000 incnt.8680
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4709   .bss.incnt.8680:00000000 $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4714   .bss.last_argc.8681:00000000 last_argc.8681
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4715   .bss.last_argc.8681:00000000 $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4717   .data.AccessEnable:00000000 $d
C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s:4735   .data.echo:00000000 $d

UNDEFINED SYMBOLS
Printf
day
hour
minute
second
ARM GAS  C:\Users\ryanc.HS\AppData\Local\Temp\ccN4loc4.s 			page 141


WriteEEP
ReadEEP
VXISI2CWrite
VXISI2CRead
VS8812Write
VS8812Read
tp28xx_byte_write
tp28xx_byte_read
MCUTimerReactiveTimerEvent
SET_nGT911
GET_nGT911
GET_LTC2451
HAL_GPIO_WritePin
msleep
Init_TP280x_RegSet
COMMAND_OSD
bSignal
state
VideoChangeFlag
SetCOCCom
SetNowMode
LCDPowerON
user_pwm_setvalue
Flisheye_CAM
QuadBoxId
GET_ALC122
SET_ALC122
VS4210_SwitchChannel
TriggerFlag
bytTriggerTest
std
mode
count
egain
PtzTxChNum
